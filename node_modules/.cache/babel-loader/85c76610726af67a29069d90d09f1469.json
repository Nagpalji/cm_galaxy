{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useForm}from'react-hook-form';import{Card,CardHeader,CardTitle,CardBody,Button,Form,FormGroup,Label,Input}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AsyncValidationForm=function AsyncValidationForm(){var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var sleep;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};_context.next=3;return sleep(1000);case 3:alert('Form Submitted');case 4:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Async Submit\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"firstNameAsync\",children:\"First Name\"}),/*#__PURE__*/_jsx(Input,{id:\"firstNameAsync\",name:\"firstNameAsync\",innerRef:register({required:true}),invalid:errors.firstNameAsync&&true,placeholder:\"Bruce\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"lastNameAsync\",children:\"Last Name\"}),/*#__PURE__*/_jsx(Input,{id:\"lastNameAsync\",name:\"lastNameAsync\",innerRef:register({required:true}),invalid:errors.lastNameAsync&&true,placeholder:\"Wayne\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"emailAsync\",children:\"Email\"}),/*#__PURE__*/_jsx(Input,{type:\"email\",name:\"emailAsync\",id:\"emailAsync\",innerRef:register({required:true}),invalid:errors.emailAsync&&true,placeholder:\"bruce.wayne@email.com\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"passwordAsync\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",id:\"passwordAsync\",name:\"passwordAsync\",innerRef:register({required:true}),invalid:errors.passwordAsync&&true,placeholder:\"passwordAsync\"})]}),/*#__PURE__*/_jsxs(FormGroup,{className:\"d-flex mb-0\",children:[/*#__PURE__*/_jsx(Button.Ripple,{className:\"mr-1\",color:\"primary\",type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(Button.Ripple,{outline:true,color:\"secondary\",type:\"reset\",children:\"Reset\"})]})]})})]});};export default AsyncValidationForm;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/forms/validations/react-hook-form/AsyncValidation.js"],"names":["useForm","Card","CardHeader","CardTitle","CardBody","Button","Form","FormGroup","Label","Input","AsyncValidationForm","register","errors","handleSubmit","onSubmit","data","sleep","ms","Promise","resolve","setTimeout","alert","required","firstNameAsync","lastNameAsync","emailAsync","passwordAsync"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form'\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap'\r\n\r\nconst AsyncValidationForm = () => {\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  const onSubmit = async data => {\r\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n    await sleep(1000)\r\n    alert('Form Submitted')\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Async Submit</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for='firstNameAsync'>First Name</Label>\r\n            <Input\r\n              id='firstNameAsync'\r\n              name='firstNameAsync'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.firstNameAsync && true}\r\n              placeholder='Bruce'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for='lastNameAsync'>Last Name</Label>\r\n            <Input\r\n              id='lastNameAsync'\r\n              name='lastNameAsync'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.lastNameAsync && true}\r\n              placeholder='Wayne'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for='emailAsync'>Email</Label>\r\n            <Input\r\n              type='email'\r\n              name='emailAsync'\r\n              id='emailAsync'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.emailAsync && true}\r\n              placeholder='bruce.wayne@email.com'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for='passwordAsync'>Password</Label>\r\n            <Input\r\n              type='password'\r\n              id='passwordAsync'\r\n              name='passwordAsync'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.passwordAsync && true}\r\n              placeholder='passwordAsync'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className='d-flex mb-0'>\r\n            <Button.Ripple className='mr-1' color='primary' type='submit'>\r\n              Submit\r\n            </Button.Ripple>\r\n            <Button.Ripple outline color='secondary' type='reset'>\r\n              Reset\r\n            </Button.Ripple>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AsyncValidationForm\r\n"]},"metadata":{},"sourceType":"module"}