{"ast":null,"code":"import _slicedToArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\views\\\\twitter-performance\\\\twitter\\\\OverallPerformance.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'; // ** Table Columns\n\nimport { overColumns } from './data'; // ** Store & Actions\n\nimport { getData } from './actions';\nimport { useSelector, useDispatch } from 'react-redux'; // ** Third Party Components\n\nimport ReactPaginate from 'react-paginate';\nimport { ChevronDown } from 'react-feather';\nimport DataTable from 'react-data-table-component';\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DataOverallPerformance = function DataOverallPerformance() {\n  _s();\n\n  // ** Store Vars\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state.dataTables;\n  }); // ** States\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(7),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1]; // ** Get data on mount\n\n\n  useEffect(function () {\n    dispatch(getData({\n      page: currentPage,\n      perPage: rowsPerPage,\n      q: searchValue\n    }));\n  }, [dispatch]); // ** Function to handle filter\n\n  var handleFilter = function handleFilter(e) {\n    setSearchValue(e.target.value);\n    dispatch(getData({\n      page: currentPage,\n      perPage: rowsPerPage,\n      q: e.target.value\n    }));\n  }; // ** Function to handle Pagination and get data\n\n\n  var handlePagination = function handlePagination(page) {\n    dispatch(getData({\n      page: page.selected + 1,\n      perPage: rowsPerPage,\n      q: searchValue\n    }));\n    setCurrentPage(page.selected + 1);\n  }; // ** Function to handle per page\n\n\n  var handlePerPage = function handlePerPage(e) {\n    dispatch(getData({\n      page: currentPage,\n      perPage: parseInt(e.target.value),\n      q: searchValue\n    }));\n    setRowsPerPage(parseInt(e.target.value));\n  }; // ** Custom Pagination\n\n\n  var CustomPagination = function CustomPagination() {\n    var count = Number((store.total / rowsPerPage).toFixed(0));\n    return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: '',\n      nextLabel: '',\n      breakLabel: \"...\",\n      pageCount: count || 1,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 2,\n      activeClassName: \"active\",\n      forcePage: currentPage !== 0 ? currentPage - 1 : 0,\n      onPageChange: function onPageChange(page) {\n        return handlePagination(page);\n      },\n      pageClassName: 'page-item',\n      nextLinkClassName: 'page-link',\n      nextClassName: 'page-item next',\n      previousClassName: 'page-item prev',\n      previousLinkClassName: 'page-link',\n      pageLinkClassName: 'page-link',\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      containerClassName: 'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-2'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this);\n  }; // ** Table data to render\n\n\n  var dataToRender = function dataToRender() {\n    var filters = {\n      q: searchValue\n    };\n    var isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0;\n    });\n\n    if (store.data.length > 0) {\n      return store.data;\n    } else if (store.data.length === 0 && isFiltered) {\n      return [];\n    } else {\n      return store.allData.slice(0, rowsPerPage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Overall Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n        noHeader: true,\n        pagination: true,\n        paginationServer: true,\n        className: \"react-dataTable\",\n        columns: overColumns,\n        sortIcon: /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, _this),\n        paginationComponent: CustomPagination,\n        data: dataToRender()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DataOverallPerformance, \"TIQwjJcsythA1LB4ManGUqWV0wA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DataOverallPerformance;\nexport default _c2 = /*#__PURE__*/memo(DataOverallPerformance);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataOverallPerformance\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/twitter-performance/twitter/OverallPerformance.js"],"names":["Fragment","useState","useEffect","memo","overColumns","getData","useSelector","useDispatch","ReactPaginate","ChevronDown","DataTable","Card","CardHeader","CardTitle","Input","Label","Row","Col","DataOverallPerformance","dispatch","store","state","dataTables","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","page","perPage","q","handleFilter","e","target","value","handlePagination","selected","handlePerPage","parseInt","CustomPagination","count","Number","total","toFixed","dataToRender","filters","isFiltered","Object","keys","some","k","length","data","allData","slice"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\n\r\n// ** Table Columns\r\nimport { overColumns } from './data'\r\n\r\n// ** Store & Actions\r\nimport { getData } from './actions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\r\n\r\nconst DataOverallPerformance = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.dataTables)\r\n\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(7)\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n  }, [dispatch])\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    setSearchValue(e.target.value)\r\n\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: e.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function to handle per page\r\n  const handlePerPage = e => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: parseInt(e.target.value),\r\n        q: searchValue\r\n      })\r\n    )\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number((store.total / rowsPerPage).toFixed(0))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        breakLabel='...'\r\n        pageCount={count || 1}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        breakClassName='page-item'\r\n        breakLinkClassName='page-link'\r\n        containerClassName={\r\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-2'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: searchValue\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Overall Performance</CardTitle>\r\n        </CardHeader>\r\n        {/* <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='6'>\r\n            <div className='d-flex align-items-center'>\r\n              <Label for='sort-select'>show</Label>\r\n              <Input\r\n                className='dataTable-select'\r\n                type='select'\r\n                id='sort-select'\r\n                value={rowsPerPage}\r\n                onChange={e => handlePerPage(e)}\r\n              >\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={75}>75</option>\r\n                <option value={100}>100</option>\r\n              </Input>\r\n              <Label for='sort-select'>entries</Label>\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\r\n            <Label className='mr-1' for='search-input'>\r\n              Search\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n            />\r\n          </Col>\r\n        </Row> */}\r\n        <DataTable\r\n          noHeader \r\n          pagination\r\n          paginationServer\r\n          className='react-dataTable'\r\n          columns={overColumns}\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(DataOverallPerformance)\r\n"]},"metadata":{},"sourceType":"module"}