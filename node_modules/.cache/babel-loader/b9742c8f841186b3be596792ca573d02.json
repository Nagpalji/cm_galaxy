{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\views\\\\funnelmap\\\\Table.js\";\n// import React, { useState } from 'react'\n// import PerfectScrollbar from 'react-perfect-scrollbar'\n// import { Redirect } from 'react-router-dom'\n// import { Modal, ModalBody, ModalHeader, Row, Col, Badge, CardHeader, Button } from 'reactstrap'\n// import UserDetail from './UserDetail'\n// import TablerChart from './conversion/TablerChart'\n// import CircleChart from './conversion/CircleChart'\n// import axios from 'axios'\n// import { FaUser } from 'react-icons/fa'\n// import { MdClose } from 'react-icons/md'\n// import DateWiseProductPurchase from './conversion/DateWiseProductPurchase'\n// const Table = ({ data, selectedCategory }) => {\n//     const style = {\n//         marginTop: '-5px',\n//         // marginRight: '-10px',\n//         cursor: 'pointer'\n//     }\n//     const [modal, setModal] = useState(false)\n//     const [dateWiseProductPurchase, setDateWiseProductPurchase] = useState([])\n//     const [dateWiseSessionAndTime, setDateWiseSessionAndTime] = useState([])\n//     const [customerData, setCustomerData] = useState({})\n//     const [pieChartProductPurchase, setPieChartProductPurchase] = useState({})\n//     const userDetail = (userEmail, orderId) => {\n//         setModal(true)\n//         const brand_name = localStorage.getItem('brand_name')\n//         const userInfo = {\n//             order_id: orderId,\n//             brand: brand_name\n//         }\n//         fetch('https://srvr1px.cyberads.io/userCycle/', {      // ---- API for Conversion-User Details ----\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify(userInfo)\n//         })\n//             .then(response => response.json())\n//             .then(data => {\n//                 setDateWiseProductPurchase(data.dateWiseProductPurchase)\n//                 setDateWiseSessionAndTime(data.dateWiseSessionAndTime)\n//                 setCustomerData(data.customerInfo)\n//                 setPieChartProductPurchase(data.pieChartProductPurchase)\n//             })\n//     }\n//     function IsJsonString(str) {\n//         try {\n//             const json = JSON.parse(str)\n//             return (typeof json === 'object')\n//         } catch (e) {\n//             return false\n//         }\n//     }\n//     let brand\n//     if (IsJsonString(localStorage.getItem(\"brand_name\"))) {\n//         brand = JSON.parse(localStorage.getItem(\"brand_name\"))\n//     } else {\n//         brand = localStorage.getItem(\"brand_name\")\n//     }\n//     const downloadHandle = async () => {\n//         const request = await axios.post(\"https://srvr1px.cyberads.io/getexcelData/\", { type: selectedCategory, brand })\n//         const response = await request.data\n//         window.location.href = response?.url\n//     }\n//     return (\n//         <>\n//             <div className='d-flex justify-content-end'>\n//                 <form className=\"form-inline my-lg-0\">\n//                     <Button.Ripple color=\"primary\" className=\"mb-1\" onClick={downloadHandle}>Download</Button.Ripple>\n//                 </form>\n//             </div>\n//             {/* -- ToFu Start Here -- */}\n//             <PerfectScrollbar className='hide1 d-none funneltable'>\n//                 <table className=\"table table-warning\">\n//                     <thead className=\"thead rounded\">\n//                         <tr className='bg-warning'>\n//                             <th className='bg-warning text-black' scope=\"col\">Sr. No.</th>\n//                             <th className='bg-warning text-black' scope=\"col\">Country</th>\n//                             <th className='bg-warning text-black' scope=\"col\">City</th>\n//                             <th className='bg-warning text-black' scope=\"col\">Device</th>\n//                             <th className='bg-warning text-black' scope=\"col\">Model</th>\n//                             <th className='bg-warning text-black' scope=\"col\">Os</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {data?.tofuData && data?.tofuData.map((item, index) => {\n//                             return (\n//                                 <>\n//                                     <tr>\n//                                         <th className='text-black'>{index + 1}</th>\n//                                         <td className='text-black'>{item?.country_name}</td>\n//                                         <td className='text-black'>{item?.city_name}</td>\n//                                         <td className='text-black'>{item?.user_agent_device_brand}</td>\n//                                         <td className='text-black'>{item?.user_agent_device_model}</td>\n//                                         <td className='text-black'>{item?.user_agent_Os_family}</td>\n//                                     </tr>\n//                                 </>\n//                             )\n//                         })}\n//                     </tbody>\n//                 </table>\n//             </PerfectScrollbar>\n//             {/* -- ToFu End Here -- */}\n//             {/* -- MoFu Start Here -- */}\n//             <PerfectScrollbar className='hide2 d-none funneltable'>\n//                 <table className=\"table table-primary\">\n//                     <thead className=\"thead rounded\">\n//                         <tr className='bg-primary'>\n//                             <th className='bg-primary text-white' scope=\"col\">Sr. No.</th>\n//                             <th className='bg-primary text-white' scope=\"col\">Country</th>\n//                             <th className='bg-primary text-white' scope=\"col\">City</th>\n//                             <th className='bg-primary text-white' scope=\"col\">Source Medium</th>\n//                             <th className='bg-primary text-white' scope=\"col\">Device</th>\n//                             <th className='bg-primary text-white' scope=\"col\">Model</th>\n//                             <th className='bg-primary text-white' scope=\"col\">Os</th>\n//                             <th className='bg-primary text-white' scope=\"col\">Session</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {data?.mofuData && data?.mofuData.map((item, index) => {\n//                             return (\n//                                 <>\n//                                     <tr>\n//                                         <th className='text-black'>{index + 1}</th>\n//                                         <td className='text-black'>{item?.Country}</td>\n//                                         <td className='text-black'>{item?.City}</td>\n//                                         <td className='text-black'>{item?.source_medium}</td>\n//                                         <td className='text-black'>{item?.Device?.charAt(0).toUpperCase() + item?.Device?.slice(1)}</td>\n//                                         <td className='text-black'>{item?.device_model}</td>\n//                                         <td className='text-black'>{item?.OS}</td>\n//                                         <td className='text-black'>{item?.Sessions}</td>\n//                                     </tr>\n//                                 </>\n//                             )\n//                         })}\n//                     </tbody>\n//                 </table>\n//             </PerfectScrollbar>\n//             {/* -- MoFu End Here -- */}\n//             {/* -- BoFu Start Here -- */}\n//             <PerfectScrollbar className='hide3 d-none funneltable'>\n//                 <table className=\"table table-secondary\">\n//                     <thead className=\"thead rounded\">\n//                         <tr className='bg-secondary'>\n//                             <th className='bg-secondary text-white' scope=\"col\">Sr. No.</th>\n//                             <th className='bg-secondary text-white' scope=\"col\">Email</th>\n//                             <th className='bg-secondary text-white' scope=\"col\">created at</th>\n//                             <th className='bg-secondary text-white' scope=\"col\">source</th>\n//                             <th className='bg-secondary text-white' scope=\"col\">Full Name</th>\n//                             <th className='bg-secondary text-white' scope=\"col\">order name</th>\n//                             <th className='bg-secondary text-white' scope=\"col\">total price</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {data?.bofuData && data?.bofuData.map((item, index) => {\n//                             return (\n//                                 <>\n//                                     <tr>\n//                                         <th className='text-black'>{index + 1}</th>\n//                                         <td className='text-black'>{item?.email}</td>\n//                                         <td className='text-black text-nowrap'>{item?.created_at}</td>\n//                                         <td className='text-black'>{item?.source === \"\" ? 'Organic' : item?.source?.charAt(0).toUpperCase() + item?.source?.slice(1)}</td>\n//                                         <td className='text-black text-nowrap'>{item?.first_name} {item?.last_name}</td>\n//                                         <td className='text-black'>{item?.order_name}</td>\n//                                         <td className='text-black'>{item?.total_price}</td>\n//                                     </tr>\n//                                 </>\n//                             )\n//                         })}\n//                     </tbody>\n//                 </table>\n//             </PerfectScrollbar>\n//             {/* -- BoFu Start Here -- */}\n//             {/* -- Conversion Start Here -- */}\n//             <PerfectScrollbar className='hide4 d-none funneltable'>\n//                 <table className=\"table table-success\">\n//                     <thead className=\"thead rounded\">\n//                         <tr className='bg-success'>\n//                             <th className='bg-success text-white' scope=\"col\">Sr. No.</th>\n//                             <th className='bg-success text-white' scope=\"col\">Email</th>\n//                             <th className='bg-success text-white' scope=\"col\">First Source</th>\n//                             <th className='bg-success text-white' scope=\"col\">Finale Source</th>\n//                             <th className='bg-success text-white' scope=\"col\">gateway</th>\n//                             <th className='bg-success text-white' scope=\"col\">financial status</th>\n//                             <th className='bg-success text-white' scope=\"col\">order name</th>\n//                             <th className='bg-success text-white' scope=\"col\">total price</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {data?.convertionsData && data?.convertionsData.map((item, index) => {\n//                             return (\n//                                 <>\n//                                     <tr>\n//                                         <th className='text-black'>{index + 1}</th>\n//                                         <td className='text-black' onClick={() => userDetail(item?.email, item?.order_id)}><a><u>{item?.email}</u></a></td>\n//                                         <td className='text-black'>{item?.firstSource === \"\" ? 'Organic' : item?.firstSource?.charAt(0).toUpperCase() + item?.firstSource?.slice(1)}</td>\n//                                         <td className='text-black'>{item?.source === \"\" ? 'Organic' : item?.source?.charAt(0).toUpperCase() + item?.source?.slice(1)}</td>\n//                                         <td className='text-black'>{item?.gateway?.charAt(0).toUpperCase() + item?.gateway?.slice(1)}</td>\n//                                         <td className='text-black'>{item?.financial_status?.charAt(0).toUpperCase() + item?.financial_status?.slice(1)}</td>\n//                                         <td className='text-black'>{item?.order_name}</td>\n//                                         <td className='text-black'>{item?.total_price}</td>\n//                                     </tr>\n//                                 </>\n//                             )\n//                         })}\n//                     </tbody>\n//                 </table>\n//                 <Modal size='xl' isOpen={modal} toggle={() => setModal(!modal)} >\n//                     <CardHeader className='d-flex justify-content-between align-items-top'>\n//                         <h5>\n//                             <FaUser size={20} />{' '}\n//                             <span className=''>User Details</span>\n//                         </h5>\n//                         <MdClose size={16} style={style} className='rounded' onClick={() => setModal(false)} />\n//                     </CardHeader>\n//                     <ModalBody>\n//                         <div className='d-flex row'>\n//                             <div className='d-flex col-12 col-lg-4 mb-1'> <span className='fw-bold'>Name: </span><span>&nbsp; {customerData?.firstName} {customerData?.lastName}</span></div>\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Gender: </span><span>&nbsp; {customerData?.gender === '' ? '-' : customerData?.gender?.charAt(0).toUpperCase() + customerData?.gender?.slice(1)}</span></div>\n//                             <div className='d-flex col-12 col-lg-2 mb-1'> <span className='fw-bold'>Age: </span><span>&nbsp; {'-'}</span></div>\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Mobile: </span><span>&nbsp; {customerData?.phoneNo}</span></div>\n//                             <div className='d-flex col-12 col-lg-4 mb-1'> <span className='fw-bold'>Email: </span><span>&nbsp; {customerData?.email}</span></div>\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Income: </span><span>&nbsp; {'-'}</span></div>\n//                             <div className='d-flex col-12 col-lg-2 mb-1'> <span className='fw-bold'>Country: </span><span>&nbsp; {customerData?.country}</span></div>\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>City: </span><span>&nbsp; {customerData?.city}</span></div>\n//                             <div className='d-flex col-12 col-lg-4 mb-1'> <span className='fw-bold'>Address: </span><span>&nbsp; {customerData?.address1} {customerData?.address2}</span></div>\n//                             {/* <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Interest: </span><span>&nbsp; 0</span></div> */}\n//                         </div>\n//                         <hr />\n//                         <PerfectScrollbar className=''>\n//                             <Row>\n//                                 <Col>\n//                                     <TablerChart\n//                                         title='Monthly Page views and Avg. Time Spend'\n//                                         titleTextLeft='Time'\n//                                         titleTextRight='Time Spend'\n//                                         series={dateWiseSessionAndTime}\n//                                         categories={dateWiseSessionAndTime}\n//                                     />\n//                                 </Col>\n//                             </Row>\n//                             <Row>\n//                                 <Col>\n//                                     <DateWiseProductPurchase\n//                                         title='Monthly Products Purchase By Value'\n//                                         // titleTextLeft='Total Price'\n//                                         titleTextLeft=''\n//                                         titleTextRight='Total Purchase Value'\n//                                         series={dateWiseProductPurchase}\n//                                         categories={dateWiseProductPurchase}\n//                                     />\n//                                 </Col>\n//                                 <Col>\n//                                     <CircleChart\n//                                         title='Abandoned Cart Value VS Purchase Value'\n//                                         seriesName=''\n//                                         seriesData={pieChartProductPurchase}\n//                                     />\n//                                 </Col>\n//                             </Row>\n//                         </PerfectScrollbar>\n//                     </ModalBody>\n//                 </Modal>\n//                 {/* <UserDetail /> */}\n//             </PerfectScrollbar>\n//             {/* -- Conversion End Here -- */}\n//         </>\n//     )\n// }\n// export default Table\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  var _this = this;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"scrollableDiv\",\n    style: {\n      height: 300,\n      overflow: 'auto',\n      display: 'flex',\n      flexDirection: 'column-reverse'\n    },\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: this.state.items.length,\n      next: this.fetchMoreData,\n      style: {\n        display: 'flex',\n        flexDirection: 'column-reverse'\n      } //To put endMessage and loader to the top.\n      ,\n      inverse: true //\n      ,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this),\n      scrollableTarget: \"scrollableDiv\",\n      children: this.state.items.map(function (_, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style,\n          children: [\"div - #\", index]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 7\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/funnelmap/Table.js"],"names":["React","InfiniteScroll","Table","height","overflow","display","flexDirection","state","items","length","fetchMoreData","map","_","index","style"],"mappingskB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,sBACE;AACA,IAAA,EAAE,EAAC,eADH;AAEA,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,GADL;AAEHC,MAAAA,QAAQ,EAAE,MAFP;AAGHC,MAAAA,OAAO,EAAE,MAHN;AAIHC,MAAAA,aAAa,EAAE;AAJZ,KAFP;AAAA,2BAUF,QAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAD/B;AAEE,MAAA,IAAI,EAAE,KAAKC,aAFb;AAGE,MAAA,KAAK,EAAE;AAAEL,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAHT,CAG+D;AAH/D;AAIE,MAAA,OAAO,EAAE,IAJX,CAIiB;AAJjB;AAKE,MAAA,OAAO,EAAE,IALX;AAME,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANV;AAOE,MAAA,gBAAgB,EAAC,eAPnB;AAAA,gBASG,KAAKC,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAqB,UAACC,CAAD,EAAIC,KAAJ;AAAA,4BACpB;AAAK,UAAA,KAAK,EAAEC,KAAZ;AAAA,gCACUD,KADV;AAAA,WAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AATH;AAAA;AAAA;AAAA;AAAA;AAVE;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;KA7BuBX,K","sourcesContent":["// import React, { useState } from 'react'\r\n// import PerfectScrollbar from 'react-perfect-scrollbar'\r\n// import { Redirect } from 'react-router-dom'\r\n// import { Modal, ModalBody, ModalHeader, Row, Col, Badge, CardHeader, Button } from 'reactstrap'\r\n// import UserDetail from './UserDetail'\r\n// import TablerChart from './conversion/TablerChart'\r\n// import CircleChart from './conversion/CircleChart'\r\n// import axios from 'axios'\r\n// import { FaUser } from 'react-icons/fa'\r\n// import { MdClose } from 'react-icons/md'\r\n// import DateWiseProductPurchase from './conversion/DateWiseProductPurchase'\r\n\r\n// const Table = ({ data, selectedCategory }) => {\r\n\r\n//     const style = {\r\n//         marginTop: '-5px',\r\n//         // marginRight: '-10px',\r\n//         cursor: 'pointer'\r\n//     }\r\n\r\n//     const [modal, setModal] = useState(false)\r\n//     const [dateWiseProductPurchase, setDateWiseProductPurchase] = useState([])\r\n//     const [dateWiseSessionAndTime, setDateWiseSessionAndTime] = useState([])\r\n//     const [customerData, setCustomerData] = useState({})\r\n//     const [pieChartProductPurchase, setPieChartProductPurchase] = useState({})\r\n\r\n//     const userDetail = (userEmail, orderId) => {\r\n//         setModal(true)\r\n\r\n//         const brand_name = localStorage.getItem('brand_name')\r\n\r\n//         const userInfo = {\r\n//             order_id: orderId,\r\n//             brand: brand_name\r\n//         }\r\n\r\n//         fetch('https://srvr1px.cyberads.io/userCycle/', {      // ---- API for Conversion-User Details ----\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify(userInfo)\r\n//         })\r\n//             .then(response => response.json())\r\n//             .then(data => {\r\n//                 setDateWiseProductPurchase(data.dateWiseProductPurchase)\r\n//                 setDateWiseSessionAndTime(data.dateWiseSessionAndTime)\r\n//                 setCustomerData(data.customerInfo)\r\n//                 setPieChartProductPurchase(data.pieChartProductPurchase)\r\n//             })\r\n//     }\r\n\r\n//     function IsJsonString(str) {\r\n//         try {\r\n//             const json = JSON.parse(str)\r\n//             return (typeof json === 'object')\r\n//         } catch (e) {\r\n//             return false\r\n//         }\r\n//     }\r\n//     let brand\r\n//     if (IsJsonString(localStorage.getItem(\"brand_name\"))) {\r\n//         brand = JSON.parse(localStorage.getItem(\"brand_name\"))\r\n//     } else {\r\n//         brand = localStorage.getItem(\"brand_name\")\r\n//     }\r\n\r\n//     const downloadHandle = async () => {\r\n//         const request = await axios.post(\"https://srvr1px.cyberads.io/getexcelData/\", { type: selectedCategory, brand })\r\n//         const response = await request.data\r\n//         window.location.href = response?.url\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <div className='d-flex justify-content-end'>\r\n//                 <form className=\"form-inline my-lg-0\">\r\n//                     <Button.Ripple color=\"primary\" className=\"mb-1\" onClick={downloadHandle}>Download</Button.Ripple>\r\n//                 </form>\r\n//             </div>\r\n//             {/* -- ToFu Start Here -- */}\r\n//             <PerfectScrollbar className='hide1 d-none funneltable'>\r\n//                 <table className=\"table table-warning\">\r\n//                     <thead className=\"thead rounded\">\r\n//                         <tr className='bg-warning'>\r\n//                             <th className='bg-warning text-black' scope=\"col\">Sr. No.</th>\r\n//                             <th className='bg-warning text-black' scope=\"col\">Country</th>\r\n//                             <th className='bg-warning text-black' scope=\"col\">City</th>\r\n//                             <th className='bg-warning text-black' scope=\"col\">Device</th>\r\n//                             <th className='bg-warning text-black' scope=\"col\">Model</th>\r\n//                             <th className='bg-warning text-black' scope=\"col\">Os</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {data?.tofuData && data?.tofuData.map((item, index) => {\r\n//                             return (\r\n//                                 <>\r\n//                                     <tr>\r\n//                                         <th className='text-black'>{index + 1}</th>\r\n//                                         <td className='text-black'>{item?.country_name}</td>\r\n//                                         <td className='text-black'>{item?.city_name}</td>\r\n//                                         <td className='text-black'>{item?.user_agent_device_brand}</td>\r\n//                                         <td className='text-black'>{item?.user_agent_device_model}</td>\r\n//                                         <td className='text-black'>{item?.user_agent_Os_family}</td>\r\n//                                     </tr>\r\n//                                 </>\r\n//                             )\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </PerfectScrollbar>\r\n//             {/* -- ToFu End Here -- */}\r\n\r\n//             {/* -- MoFu Start Here -- */}\r\n//             <PerfectScrollbar className='hide2 d-none funneltable'>\r\n//                 <table className=\"table table-primary\">\r\n//                     <thead className=\"thead rounded\">\r\n//                         <tr className='bg-primary'>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Sr. No.</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Country</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">City</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Source Medium</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Device</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Model</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Os</th>\r\n//                             <th className='bg-primary text-white' scope=\"col\">Session</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {data?.mofuData && data?.mofuData.map((item, index) => {\r\n//                             return (\r\n//                                 <>\r\n//                                     <tr>\r\n//                                         <th className='text-black'>{index + 1}</th>\r\n//                                         <td className='text-black'>{item?.Country}</td>\r\n//                                         <td className='text-black'>{item?.City}</td>\r\n//                                         <td className='text-black'>{item?.source_medium}</td>\r\n//                                         <td className='text-black'>{item?.Device?.charAt(0).toUpperCase() + item?.Device?.slice(1)}</td>\r\n//                                         <td className='text-black'>{item?.device_model}</td>\r\n//                                         <td className='text-black'>{item?.OS}</td>\r\n//                                         <td className='text-black'>{item?.Sessions}</td>\r\n//                                     </tr>\r\n//                                 </>\r\n//                             )\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </PerfectScrollbar>\r\n//             {/* -- MoFu End Here -- */}\r\n\r\n//             {/* -- BoFu Start Here -- */}\r\n//             <PerfectScrollbar className='hide3 d-none funneltable'>\r\n//                 <table className=\"table table-secondary\">\r\n//                     <thead className=\"thead rounded\">\r\n//                         <tr className='bg-secondary'>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">Sr. No.</th>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">Email</th>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">created at</th>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">source</th>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">Full Name</th>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">order name</th>\r\n//                             <th className='bg-secondary text-white' scope=\"col\">total price</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {data?.bofuData && data?.bofuData.map((item, index) => {\r\n//                             return (\r\n//                                 <>\r\n//                                     <tr>\r\n//                                         <th className='text-black'>{index + 1}</th>\r\n//                                         <td className='text-black'>{item?.email}</td>\r\n//                                         <td className='text-black text-nowrap'>{item?.created_at}</td>\r\n//                                         <td className='text-black'>{item?.source === \"\" ? 'Organic' : item?.source?.charAt(0).toUpperCase() + item?.source?.slice(1)}</td>\r\n//                                         <td className='text-black text-nowrap'>{item?.first_name} {item?.last_name}</td>\r\n//                                         <td className='text-black'>{item?.order_name}</td>\r\n//                                         <td className='text-black'>{item?.total_price}</td>\r\n//                                     </tr>\r\n//                                 </>\r\n//                             )\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </PerfectScrollbar>\r\n//             {/* -- BoFu Start Here -- */}\r\n\r\n//             {/* -- Conversion Start Here -- */}\r\n//             <PerfectScrollbar className='hide4 d-none funneltable'>\r\n//                 <table className=\"table table-success\">\r\n//                     <thead className=\"thead rounded\">\r\n//                         <tr className='bg-success'>\r\n//                             <th className='bg-success text-white' scope=\"col\">Sr. No.</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">Email</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">First Source</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">Finale Source</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">gateway</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">financial status</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">order name</th>\r\n//                             <th className='bg-success text-white' scope=\"col\">total price</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {data?.convertionsData && data?.convertionsData.map((item, index) => {\r\n//                             return (\r\n//                                 <>\r\n//                                     <tr>\r\n//                                         <th className='text-black'>{index + 1}</th>\r\n//                                         <td className='text-black' onClick={() => userDetail(item?.email, item?.order_id)}><a><u>{item?.email}</u></a></td>\r\n//                                         <td className='text-black'>{item?.firstSource === \"\" ? 'Organic' : item?.firstSource?.charAt(0).toUpperCase() + item?.firstSource?.slice(1)}</td>\r\n//                                         <td className='text-black'>{item?.source === \"\" ? 'Organic' : item?.source?.charAt(0).toUpperCase() + item?.source?.slice(1)}</td>\r\n//                                         <td className='text-black'>{item?.gateway?.charAt(0).toUpperCase() + item?.gateway?.slice(1)}</td>\r\n//                                         <td className='text-black'>{item?.financial_status?.charAt(0).toUpperCase() + item?.financial_status?.slice(1)}</td>\r\n//                                         <td className='text-black'>{item?.order_name}</td>\r\n//                                         <td className='text-black'>{item?.total_price}</td>\r\n//                                     </tr>\r\n//                                 </>\r\n//                             )\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n\r\n//                 <Modal size='xl' isOpen={modal} toggle={() => setModal(!modal)} >\r\n//                     <CardHeader className='d-flex justify-content-between align-items-top'>\r\n//                         <h5>\r\n//                             <FaUser size={20} />{' '}\r\n//                             <span className=''>User Details</span>\r\n//                         </h5>\r\n//                         <MdClose size={16} style={style} className='rounded' onClick={() => setModal(false)} />\r\n//                     </CardHeader>\r\n//                     <ModalBody>\r\n//                         <div className='d-flex row'>\r\n//                             <div className='d-flex col-12 col-lg-4 mb-1'> <span className='fw-bold'>Name: </span><span>&nbsp; {customerData?.firstName} {customerData?.lastName}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Gender: </span><span>&nbsp; {customerData?.gender === '' ? '-' : customerData?.gender?.charAt(0).toUpperCase() + customerData?.gender?.slice(1)}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-2 mb-1'> <span className='fw-bold'>Age: </span><span>&nbsp; {'-'}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Mobile: </span><span>&nbsp; {customerData?.phoneNo}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-4 mb-1'> <span className='fw-bold'>Email: </span><span>&nbsp; {customerData?.email}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Income: </span><span>&nbsp; {'-'}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-2 mb-1'> <span className='fw-bold'>Country: </span><span>&nbsp; {customerData?.country}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>City: </span><span>&nbsp; {customerData?.city}</span></div>\r\n//                             <div className='d-flex col-12 col-lg-4 mb-1'> <span className='fw-bold'>Address: </span><span>&nbsp; {customerData?.address1} {customerData?.address2}</span></div>\r\n//                             {/* <div className='d-flex col-12 col-lg-3 mb-1'> <span className='fw-bold'>Interest: </span><span>&nbsp; 0</span></div> */}\r\n//                         </div>\r\n//                         <hr />\r\n//                         <PerfectScrollbar className=''>\r\n//                             <Row>\r\n//                                 <Col>\r\n//                                     <TablerChart\r\n//                                         title='Monthly Page views and Avg. Time Spend'\r\n//                                         titleTextLeft='Time'\r\n//                                         titleTextRight='Time Spend'\r\n//                                         series={dateWiseSessionAndTime}\r\n//                                         categories={dateWiseSessionAndTime}\r\n//                                     />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row>\r\n//                                 <Col>\r\n//                                     <DateWiseProductPurchase\r\n//                                         title='Monthly Products Purchase By Value'\r\n//                                         // titleTextLeft='Total Price'\r\n//                                         titleTextLeft=''\r\n//                                         titleTextRight='Total Purchase Value'\r\n//                                         series={dateWiseProductPurchase}\r\n//                                         categories={dateWiseProductPurchase}\r\n//                                     />\r\n//                                 </Col>\r\n//                                 <Col>\r\n//                                     <CircleChart\r\n//                                         title='Abandoned Cart Value VS Purchase Value'\r\n//                                         seriesName=''\r\n//                                         seriesData={pieChartProductPurchase}\r\n//                                     />\r\n//                                 </Col>\r\n//                             </Row>\r\n//                         </PerfectScrollbar>\r\n//                     </ModalBody>\r\n//                 </Modal>\r\n\r\n//                 {/* <UserDetail /> */}\r\n\r\n//             </PerfectScrollbar>\r\n//             {/* -- Conversion End Here -- */}\r\n//         </>\r\n//     )\r\n// }\r\n// export default Table\r\n\r\n\r\nimport React from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nexport default function Table() {\r\n  return (\r\n    <div\r\n    id=\"scrollableDiv\"\r\n    style={{\r\n        height: 300,\r\n        overflow: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column-reverse'\r\n    }}\r\n    >\r\n  {/*Put the scroll bar always on the bottom*/}\r\n  <InfiniteScroll\r\n    dataLength={this.state.items.length}\r\n    next={this.fetchMoreData}\r\n    style={{ display: 'flex', flexDirection: 'column-reverse' }} //To put endMessage and loader to the top.\r\n    inverse={true} //\r\n    hasMore={true}\r\n    loader={<h4>Loading...</h4>}\r\n    scrollableTarget=\"scrollableDiv\"\r\n  >\r\n    {this.state.items.map((_, index) => (\r\n      <div style={style} key={index}>\r\n        div - #{index}\r\n      </div>\r\n    ))}\r\n  </InfiniteScroll>\r\n</div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}