{"ast":null,"code":"import Box from '../box';\nimport { grep } from '../../common';\nexport default function boxDiff(r, s) {\n  if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n    return s;\n  }\n\n  var a = Math.min(r.x1, s.x1);\n  var b = Math.max(r.x1, s.x1);\n  var c = Math.min(r.x2, s.x2);\n  var d = Math.max(r.x2, s.x2);\n  var e = Math.min(r.y1, s.y1);\n  var f = Math.max(r.y1, s.y1);\n  var g = Math.min(r.y2, s.y2);\n  var h = Math.max(r.y2, s.y2);\n  var boxes = []; // X = intersection, 0-7 = possible difference areas\n  // h +-+-+-+\n  // . |5|6|7|\n  // g +-+-+-+\n  // . |3|X|4|\n  // f +-+-+-+\n  // . |0|1|2|\n  // e +-+-+-+\n  // . a b c d\n  // we'll always have rectangles 1, 3, 4 and 6\n\n  boxes[0] = new Box(b, e, c, f);\n  boxes[1] = new Box(a, f, b, g);\n  boxes[2] = new Box(c, f, d, g);\n  boxes[3] = new Box(b, g, c, h); // decide which corners\n\n  if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n    // corners 0 and 7\n    boxes[4] = new Box(a, e, b, f);\n    boxes[5] = new Box(c, g, d, h);\n  } else {\n    // corners 2 and 5\n    boxes[4] = new Box(c, e, d, f);\n    boxes[5] = new Box(a, g, b, h);\n  }\n\n  return grep(boxes, function (box) {\n    return box.height() > 0 && box.width() > 0;\n  })[0];\n}","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/core/utils/box-diff.js"],"names":["Box","grep","boxDiff","r","s","x1","y1","x2","y2","a","Math","min","b","max","c","d","e","f","g","h","boxes","box","height","width"],"mappings":"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","sourcesContent":["import Box from '../box';\r\nimport { grep } from '../../common';\r\n\r\nexport default function boxDiff(r, s) {\r\n    if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\r\n        return s;\r\n    }\r\n\r\n    var a = Math.min(r.x1, s.x1);\r\n    var b = Math.max(r.x1, s.x1);\r\n    var c = Math.min(r.x2, s.x2);\r\n    var d = Math.max(r.x2, s.x2);\r\n    var e = Math.min(r.y1, s.y1);\r\n    var f = Math.max(r.y1, s.y1);\r\n    var g = Math.min(r.y2, s.y2);\r\n    var h = Math.max(r.y2, s.y2);\r\n    var boxes = [];\r\n\r\n    // X = intersection, 0-7 = possible difference areas\r\n    // h +-+-+-+\r\n    // . |5|6|7|\r\n    // g +-+-+-+\r\n    // . |3|X|4|\r\n    // f +-+-+-+\r\n    // . |0|1|2|\r\n    // e +-+-+-+\r\n    // . a b c d\r\n\r\n    // we'll always have rectangles 1, 3, 4 and 6\r\n    boxes[0] = new Box(b, e, c, f);\r\n    boxes[1] = new Box(a, f, b, g);\r\n    boxes[2] = new Box(c, f, d, g);\r\n    boxes[3] = new Box(b, g, c, h);\r\n\r\n    // decide which corners\r\n    if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) { // corners 0 and 7\r\n        boxes[4] = new Box(a, e, b, f);\r\n        boxes[5] = new Box(c, g, d, h);\r\n    } else { // corners 2 and 5\r\n        boxes[4] = new Box(c, e, d, f);\r\n        boxes[5] = new Box(a, g, b, h);\r\n    }\r\n\r\n    return grep(boxes, function(box) {\r\n        return box.height() > 0 && box.width() > 0;\r\n    })[0];\r\n}"]},"metadata":{},"sourceType":"module"}