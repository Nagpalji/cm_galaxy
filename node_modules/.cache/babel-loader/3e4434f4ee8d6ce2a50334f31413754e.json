{"ast":null,"code":"import deepExtend from './deep-extend';\nvar TRIGGER = 'trigger';\n\nvar InstanceObserver = function InstanceObserver(observer, handlers) {\n  this.observer = observer;\n  this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n};\n\nInstanceObserver.prototype.trigger = function trigger(name, args) {\n  var ref = this;\n  var observer = ref.observer;\n  var handlerMap = ref.handlerMap;\n  var isDefaultPrevented;\n\n  if (handlerMap[name]) {\n    isDefaultPrevented = this.callObserver(handlerMap[name], args);\n  } else if (observer[TRIGGER]) {\n    isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n  }\n\n  return isDefaultPrevented;\n};\n\nInstanceObserver.prototype.callObserver = function callObserver(fnName) {\n  var args = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    args[len] = arguments[len + 1];\n  }\n\n  return this.observer[fnName].apply(this.observer, args);\n};\n\nInstanceObserver.prototype.requiresHandlers = function requiresHandlers(names) {\n  var this$1 = this;\n\n  if (this.observer.requiresHandlers) {\n    return this.observer.requiresHandlers(names);\n  }\n\n  for (var idx = 0; idx < names.length; idx++) {\n    if (this$1.handlerMap[names[idx]]) {\n      return true;\n    }\n  }\n};\n\nexport default InstanceObserver;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/common/instance-observer.js"],"names":["deepExtend","TRIGGER","InstanceObserver","observer","handlers","handlerMap","prototype","trigger","name","args","ref","isDefaultPrevented","callObserver","fnName","len","arguments","length","apply","requiresHandlers","names","this$1","idx"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,IAAIC,OAAO,GAAG,SAAd;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;AACjE,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKE,UAAL,GAAkBL,UAAU,CAAC,EAAD,EAAK,KAAKK,UAAV,EAAsBD,QAAtB,CAA5B;AACH,CAHD;;AAKAF,gBAAgB,CAACI,SAAjB,CAA2BC,OAA3B,GAAqC,SAASA,OAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC/D,MAAIC,GAAG,GAAG,IAAV;AACI,MAAIP,QAAQ,GAAGO,GAAG,CAACP,QAAnB;AACA,MAAIE,UAAU,GAAGK,GAAG,CAACL,UAArB;AACJ,MAAIM,kBAAJ;;AACA,MAAIN,UAAU,CAACG,IAAD,CAAd,EAAsB;AAClBG,IAAAA,kBAAkB,GAAG,KAAKC,YAAL,CAAkBP,UAAU,CAACG,IAAD,CAA5B,EAAoCC,IAApC,CAArB;AACH,GAFD,MAEO,IAAIN,QAAQ,CAACF,OAAD,CAAZ,EAAuB;AAC1BU,IAAAA,kBAAkB,GAAG,KAAKC,YAAL,CAAkBX,OAAlB,EAA2BO,IAA3B,EAAiCC,IAAjC,CAArB;AACH;;AAED,SAAOE,kBAAP;AACH,CAZD;;AAcAT,gBAAgB,CAACI,SAAjB,CAA2BM,YAA3B,GAA0C,SAASA,YAAT,CAAuBC,MAAvB,EAA+B;AACjE,MAAIJ,IAAI,GAAG,EAAX;AAAA,MAAeK,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAxC;;AACA,SAAQF,GAAG,KAAK,CAAhB;AAAoBL,IAAAA,IAAI,CAAEK,GAAF,CAAJ,GAAcC,SAAS,CAAED,GAAG,GAAG,CAAR,CAAvB;AAApB;;AAEJ,SAAO,KAAKX,QAAL,CAAcU,MAAd,EAAsBI,KAAtB,CAA4B,KAAKd,QAAjC,EAA2CM,IAA3C,CAAP;AACH,CALD;;AAOAP,gBAAgB,CAACI,SAAjB,CAA2BY,gBAA3B,GAA8C,SAASA,gBAAT,CAA2BC,KAA3B,EAAkC;AACxE,MAAIC,MAAM,GAAG,IAAb;;AAEJ,MAAI,KAAKjB,QAAL,CAAce,gBAAlB,EAAoC;AAChC,WAAO,KAAKf,QAAL,CAAce,gBAAd,CAA+BC,KAA/B,CAAP;AACH;;AAED,OAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,KAAK,CAACH,MAA9B,EAAsCK,GAAG,EAAzC,EAA6C;AACzC,QAAID,MAAM,CAACf,UAAP,CAAkBc,KAAK,CAACE,GAAD,CAAvB,CAAJ,EAAmC;AAC/B,aAAO,IAAP;AACH;AACJ;AACJ,CAZD;;AAcA,eAAenB,gBAAf","sourcesContent":["import deepExtend from './deep-extend';\r\n\r\nvar TRIGGER = 'trigger';\r\n\r\nvar InstanceObserver = function InstanceObserver(observer, handlers) {\r\n    this.observer = observer;\r\n    this.handlerMap = deepExtend({}, this.handlerMap, handlers);\r\n};\r\n\r\nInstanceObserver.prototype.trigger = function trigger (name, args) {\r\n    var ref = this;\r\n        var observer = ref.observer;\r\n        var handlerMap = ref.handlerMap;\r\n    var isDefaultPrevented;\r\n    if (handlerMap[name]) {\r\n        isDefaultPrevented = this.callObserver(handlerMap[name], args);\r\n    } else if (observer[TRIGGER]) {\r\n        isDefaultPrevented = this.callObserver(TRIGGER, name, args);\r\n    }\r\n\r\n    return isDefaultPrevented;\r\n};\r\n\r\nInstanceObserver.prototype.callObserver = function callObserver (fnName) {\r\n        var args = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n\r\n    return this.observer[fnName].apply(this.observer, args);\r\n};\r\n\r\nInstanceObserver.prototype.requiresHandlers = function requiresHandlers (names) {\r\n        var this$1 = this;\r\n\r\n    if (this.observer.requiresHandlers) {\r\n        return this.observer.requiresHandlers(names);\r\n    }\r\n\r\n    for (var idx = 0; idx < names.length; idx++) {\r\n        if (this$1.handlerMap[names[idx]]) {\r\n            return true;\r\n        }\r\n    }\r\n};\r\n\r\nexport default InstanceObserver;"]},"metadata":{},"sourceType":"module"}