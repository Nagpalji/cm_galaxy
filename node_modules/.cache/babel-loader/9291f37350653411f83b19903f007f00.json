{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// New Date Range Picker start 1\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import Flatpickr from 'react-flatpickr'\n// const DateRangePicker = () => {\n//   const [picker, setPicker] = useState(new Date())\n//   return (\n//     <Fragment>\n//       <Flatpickr\n//         value={picker}\n//         data-enable-time\n//         id='date-time-picker'\n//         className='form-control'\n//         onChange={date => setPicker(date)}\n//       />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\n// New Date Range Picker start 2\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import 'react-date-range/dist/styles.css'\n// import 'react-date-range/dist/theme/default.css'\n// import { DateRange } from 'react-date-range'\n// const DateRangePicker = () => {\n//   const [state, setState] = useState([\n//     {\n//       startDate: new Date(),\n//       endDate: null,\n//       key: 'selection'\n//     }\n//   ]\n//   )\n//   return (\n//     <Fragment>\n//   <DateRange\n//   editableDateInputs={true}\n//   onChange={item => setState([item.selection])}\n//   moveRangeOnFirstSelection={false}\n//   ranges={state}\n// />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\n// New Date Range Picker start 3\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import { addDays } from 'date-fns'\n// import 'react-date-range/dist/styles.css'\n// import 'react-date-range/dist/theme/default.css'\n// import { DateRange } from 'react-date-range'\n// const DateRangePicker = () => {\n//   const [state, setState] = useState([\n//     {\n//       startDate: new Date(),\n//       endDate: addDays(new Date(), 7),\n//       key: 'selection'\n//     }\n//   ])\n//   return (\n//     <Fragment>\n// <DateRange\n//   onChange={item => setState([item.selection])}\n//   showSelectionPreview={true}\n//   moveRangeOnFirstSelection={false}\n//   months={2}\n//   ranges={state}\n//   direction=\"horizontal\"\n// />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\n// New Date Range Picker start 4\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import Flatpickr from 'react-flatpickr'\n// const DateRangePicker = () => {\n//   const [picker, setPicker] = useState(new Date())\n//   return (\n//     <Fragment>\n//       <Flatpickr\n//         value={picker}\n//         data-enable-time\n//         id='date-time-picker'\n//         className='form-control'\n//         onChange={date => setPicker(date)}\n//       />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\n// New Date Range Picker start 5\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import { addDays } from 'date-fns'\n// import 'react-date-range/dist/styles.css'\n// import 'react-date-range/dist/theme/default.css'\n// import { DateRange } from 'react-date-range'\n// const DateRangePicker = () => {\n//   const [state, setState] = useState([\n//     {\n//       startDate: new Date(),\n//       endDate: addDays(new Date(), 7),\n//       key: 'selection'\n//     }\n//   ])\n//   return (\n//     <Fragment>\n// <DateRange\n//   onChange={item => setState([item.selection])}\n//   showSelectionPreview={true}\n//   moveRangeOnFirstSelection={false}\n//   months={1}\n//   ranges={state}\n//   direction=\"horizontal\"\n//       />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import Flatpickr from 'react-flatpickr'\n// import Cookies from 'universal-cookie'\n// const cookies = new Cookies()\n// cookies.set('myCat', 'Pacman', { path: '/' })\n// console.log(cookies.get('myCat')) // Pacman\n// const sy = localStorage.getItem(\"sy\")  \n// const sm = localStorage.getItem(\"sm\")\n// const sd = localStorage.getItem(\"sd\")\n// const ey = localStorage.getItem(\"ey\")\n// const em = localStorage.getItem(\"em\") \n// const ed = localStorage.getItem(\"ed\")\n// const x = \"-\"\n// const c = \"to\"\n// const DateRangePicker = () => {\n//   const [picker, setPicker] = useState([sy + x + sm + x + sd + sd, c + ey + x + em + x + ed])\n//   return (\n//     <Fragment>\n//       <Flatpickr\n//         value={picker}\n//         id='range-picker'\n//         className='form-control'\n//         onChange={(date) => {\n//           setPicker(date)\n//           const selecteddate = date[0]\n//           const date2 = date[1]\n//           const fd = new Date(selecteddate)\n//           const fd2 = new Date(date2)\n//           const sy = fd.getFullYear()\n//           const sm =  fd.getMonth()\n//           const sd = fd.getDate()\n//           const ey = fd2.getFullYear()\n//           const em =  fd2.getMonth()\n//           const ed = fd2.getDate()\n//           const mi = \"-\"\n//           const sy1 = \"&sy=\"\n//           const sm1 = \"&sm=\"\n//           const sd1 = \"&sd=\"\n//           const ey1 = \"&ey=\"\n//           const em1 = \"&em=\"\n//           const ed1 = \"&ed=\"\n//           console.log(\"date1\", selecteddate)\n//           console.log(\"date2\", date2)\n//           localStorage.setItem(\"startdate\", [sy + mi + sm + mi + sd])\n//           localStorage.setItem(\"enddate\", [ey + mi + em + mi + ed])\n//           localStorage.setItem(\"sy1\", [sy1])\n//           localStorage.setItem(\"sm1\", [sm1])\n//           localStorage.setItem(\"sd1\", [sd1])\n//           localStorage.setItem(\"ey1\", [ey1])\n//           localStorage.setItem(\"em1\", [em1])\n//           localStorage.setItem(\"ed1\", [ed1])\n//           localStorage.setItem(\"sy\", [sy])\n//           localStorage.setItem(\"sm\", [sm + 1])\n//           localStorage.setItem(\"sd\", [sd])\n//           localStorage.setItem(\"ey\", [ey])\n//           localStorage.setItem(\"em\", [em + 1])\n//           localStorage.setItem(\"ed\", [ed])\n//           window.location.reload()\n//         }}\n//         options={{\n//           mode: 'range',\n//           defaultDate: [Date() - 1, Date() - 7]\n//           // defaultDate: ['2021-10-01', '2021-10-03']\n//         }}\n//       />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\n// import { Fragment, useState } from 'react'\n// import { Label } from 'reactstrap'\n// import Flatpickr from 'react-flatpickr'\n// import Cookies from 'universal-cookie'\n// const cookies = new Cookies()\n// cookies.set('myCat', 'Pacman', { path: '/' })\n// // console.log(cookies.get('myCat')) // Pacman\n// const sy = localStorage.getItem(\"sy\")  \n// const sm = localStorage.getItem(\"sm\")\n// const sd = localStorage.getItem(\"sd\")\n// const ey = localStorage.getItem(\"ey\")\n// const em = localStorage.getItem(\"em\") \n// const ed = localStorage.getItem(\"ed\")\n// const x = \"-\"\n// const c = \"to\"\n// const d = new Date()\n// d.setDate(d.getDate() - 7)\n// const d1 = new Date()\n// d1.setDate(d1.getDate() - 1)\n// let picker1\n// // console.log(\"conditionoutside\")\n// const DateRangePicker = () => {\n//   if (sd === 'NaN') {\n//     picker1 = [d, d1]\n//     localStorage.setItem(\"sy\", d.getFullYear())\n//     localStorage.setItem(\"sm\", d.getMonth())\n//     localStorage.setItem(\"sd\", d.getDate())\n//     localStorage.setItem(\"ey\", d1.getFullYear())\n//     localStorage.setItem(\"em\", d1.getMonth())\n//     localStorage.setItem(\"ed\", d1.getDate())\n//     // console.log(\"condition1\")\n//     // const [picker, setPicker] = useState([d, d1])\n//   } else {\n//     picker1 = [sy + x + sm + x + sd, c + ey + x + em + x + ed]\n//     // console.log(\"conditionelse\")\n//     // const [picker, setPicker] = useState([sy + x + sm + x + sd, c + ey + x + em + x + ed])\n//   }\n//   // const [picker, setPicker] = useState([sy + x + sm + x + sd, c + ey + x + em + x + ed])\n//   // console.log(\"line259\")\n//   const [picker, setPicker] = useState(picker1)\n//   return (\n//     <Fragment>\n//       <Flatpickr\n//         value={picker}\n//         id='range-picker'\n//         className='form-control'\n//         onChange={(date) => {\n//           setPicker(date)\n//           const selecteddate = date[0]\n//           const date2 = date[1]\n//           const fd = new Date(selecteddate)\n//           const fd2 = new Date(date2)\n//           const sy = fd.getFullYear()\n//           const sm =  fd.getMonth()\n//           const sd = fd.getDate()\n//           const ey = fd2.getFullYear()\n//           const em =  fd2.getMonth()\n//           // console.log(fd2)\n//           // const ed = new Cookies()\n//           // ed.set('myCat', fd2.getDate(), { path: '/' })\n//           // console.log(cookies.get('myCat'))\n//           const ed = fd2.getDate()\n//           const mi = \"-\"\n//           // console.log(\"date1\", selecteddate)\n//           // console.log(\"date2\", date2)\n//           localStorage.setItem(\"startdate\", [sy + mi + sm + mi + sd])\n//           localStorage.setItem(\"enddate\", [ey + mi + em + mi + ed])\n//           localStorage.setItem(\"sy\", [sy])\n//           localStorage.setItem(\"sm\", [sm + 1])\n//           localStorage.setItem(\"sd\", [sd])\n//           localStorage.setItem(\"ey\", [ey])\n//           localStorage.setItem(\"em\", [em + 1])\n//           // (cookies.get('myCat'))\n//           localStorage.setItem(\"ed\", [ed])\n//           if (fd2 !== 'Invalid Date') {\n//             window.location.reload()\n//           } else {\n//             cons\n//           }\n//           // window.location.reload()\n//         }}\n//         options={{\n//           mode: 'range',\n//           defaultDate: [\"2021-10-05\", \"2021-10-10\"]\n//           // defaultDate: ['2021-10-01', '2021-10-03']\n//         }}\n//       />\n//     </Fragment>\n//   )\n// }\n// export default DateRangePicker\nimport{Fragment,useState}from'react';import{Label}from'reactstrap';import Flatpickr from'react-flatpickr';import Cookies from'universal-cookie';import{jsx as _jsx}from\"react/jsx-runtime\";// const cookies = new Cookies()\n// cookies.set('myCat', 'Pacman', { path: '/' })\n// console.log(cookies.get('myCat')) // Pacman\nvar x=\"-\";// const c = \"till\"\nvar d=new Date();d.setDate(d.getDate()-7);var d1=new Date();d1.setDate(d1.getDate());var picker1;var last=new Date();last.setDate(last.getDate()-90);// const last1 =  last.getMonth()\n// const last2 = last.getFullYear()\n// const last3 = '1'\n// const last4 = ' '\n// fix.setDate(fix.getDate() - 90)\n// const ft =  (fix.getMonth())\n// localStorage.setItem(\"testing\", [ft])\n// console.log(\"conditionoutside\")\nvar DateRangePicker=function DateRangePicker(){var sy=localStorage.getItem(\"sy\");var sm=localStorage.getItem(\"sm\");var sd=localStorage.getItem(\"sd\");var ey=localStorage.getItem(\"ey\");var em=localStorage.getItem(\"em\");var ed=localStorage.getItem(\"ed\");// const picker1 = [sy + x + sm + x + sd, c + ey + x + em + x + ed]\nvar picker1=[new Date(sy+x+sm+x+sd),new Date(ey+x+em+x+ed)];// const picker1 = [sd + x + sm + x + sy, c + ed + x + em + x + ey]\nvar _useState=useState(picker1),_useState2=_slicedToArray(_useState,2),picker=_useState2[0],setPicker=_useState2[1];return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(Flatpickr,{value:picker,id:\"range-picker\",className:\"form-control\",onChange:function onChange(date){setPicker(date);var selecteddate=date[0];var date2=date[1];var fd=new Date(selecteddate);var fd2=new Date(date2);var sy=fd.getFullYear();var sm=fd.getMonth();var sd=fd.getDate();var ey=fd2.getFullYear();var em=fd2.getMonth();var ed=fd2.getDate();var mi=\"-\";localStorage.setItem(\"sy\",[sy]);localStorage.setItem(\"sm\",[sm+1]);localStorage.setItem(\"sd\",[sd]);localStorage.setItem(\"ey\",[ey]);localStorage.setItem(\"em\",[em+1]);localStorage.setItem(\"ed\",[ed]);if(isNaN(fd2.getTime())){console.log(\"iff\");}else{window.location.reload();}// window.location.reload()\n},options:{mode:'range',// placeholder: \"-\" - String,\n// defaultDate: [\"2021-10-05\", \"2021-10-10\"]\ndateFormat:'j M Y',// minDate: [\"2021-12-01\"],\nminDate:new Date().fp_incr(-90),maxDate:d1// maxDate: d1\n// defaultDate: ['2021-10-01', '2021-10-03']\n}})});};export default DateRangePicker;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/dv360-performance/performance/DateRangePicker.js"],"names":["Fragment","useState","Label","Flatpickr","Cookies","x","d","Date","setDate","getDate","d1","picker1","last","DateRangePicker","sy","localStorage","getItem","sm","sd","ey","em","ed","picker","setPicker","date","selecteddate","date2","fd","fd2","getFullYear","getMonth","mi","setItem","isNaN","getTime","console","log","window","location","reload","mode","dateFormat","minDate","fp_incr","maxDate"],"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","sourcesContent":["// New Date Range Picker start 1\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n// import Flatpickr from 'react-flatpickr'\r\n\r\n// const DateRangePicker = () => {\r\n//   const [picker, setPicker] = useState(new Date())\r\n//   return (\r\n//     <Fragment>\r\n//       <Flatpickr\r\n//         value={picker}\r\n//         data-enable-time\r\n//         id='date-time-picker'\r\n//         className='form-control'\r\n//         onChange={date => setPicker(date)}\r\n//       />\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default DateRangePicker\r\n\r\n\r\n// New Date Range Picker start 2\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n\r\n// import 'react-date-range/dist/styles.css'\r\n// import 'react-date-range/dist/theme/default.css'\r\n// import { DateRange } from 'react-date-range'\r\n\r\n// const DateRangePicker = () => {\r\n//   const [state, setState] = useState([\r\n//     {\r\n//       startDate: new Date(),\r\n//       endDate: null,\r\n//       key: 'selection'\r\n//     }\r\n//   ]\r\n//   )\r\n\r\n//   return (\r\n//     <Fragment>\r\n//   <DateRange\r\n//   editableDateInputs={true}\r\n//   onChange={item => setState([item.selection])}\r\n//   moveRangeOnFirstSelection={false}\r\n//   ranges={state}\r\n// />\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default DateRangePicker\r\n\r\n\r\n// New Date Range Picker start 3\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n\r\n// import { addDays } from 'date-fns'\r\n// import 'react-date-range/dist/styles.css'\r\n// import 'react-date-range/dist/theme/default.css'\r\n// import { DateRange } from 'react-date-range'\r\n\r\n// const DateRangePicker = () => {\r\n//   const [state, setState] = useState([\r\n//     {\r\n//       startDate: new Date(),\r\n//       endDate: addDays(new Date(), 7),\r\n//       key: 'selection'\r\n//     }\r\n//   ])\r\n\r\n//   return (\r\n//     <Fragment>\r\n// <DateRange\r\n//   onChange={item => setState([item.selection])}\r\n//   showSelectionPreview={true}\r\n//   moveRangeOnFirstSelection={false}\r\n//   months={2}\r\n//   ranges={state}\r\n//   direction=\"horizontal\"\r\n// />\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default DateRangePicker\r\n\r\n// New Date Range Picker start 4\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n// import Flatpickr from 'react-flatpickr'\r\n\r\n// const DateRangePicker = () => {\r\n//   const [picker, setPicker] = useState(new Date())\r\n//   return (\r\n//     <Fragment>\r\n//       <Flatpickr\r\n//         value={picker}\r\n//         data-enable-time\r\n//         id='date-time-picker'\r\n//         className='form-control'\r\n//         onChange={date => setPicker(date)}\r\n//       />\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default DateRangePicker\r\n\r\n// New Date Range Picker start 5\r\n\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n\r\n// import { addDays } from 'date-fns'\r\n// import 'react-date-range/dist/styles.css'\r\n// import 'react-date-range/dist/theme/default.css'\r\n// import { DateRange } from 'react-date-range'\r\n\r\n// const DateRangePicker = () => {\r\n//   const [state, setState] = useState([\r\n//     {\r\n//       startDate: new Date(),\r\n//       endDate: addDays(new Date(), 7),\r\n//       key: 'selection'\r\n//     }\r\n//   ])\r\n\r\n//   return (\r\n//     <Fragment>\r\n// <DateRange\r\n//   onChange={item => setState([item.selection])}\r\n//   showSelectionPreview={true}\r\n//   moveRangeOnFirstSelection={false}\r\n//   months={1}\r\n//   ranges={state}\r\n//   direction=\"horizontal\"\r\n//       />\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default DateRangePicker\r\n\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n// import Flatpickr from 'react-flatpickr'\r\n\r\n// import Cookies from 'universal-cookie'\r\n// const cookies = new Cookies()\r\n// cookies.set('myCat', 'Pacman', { path: '/' })\r\n// console.log(cookies.get('myCat')) // Pacman\r\n\r\n// const sy = localStorage.getItem(\"sy\")  \r\n// const sm = localStorage.getItem(\"sm\")\r\n// const sd = localStorage.getItem(\"sd\")\r\n// const ey = localStorage.getItem(\"ey\")\r\n// const em = localStorage.getItem(\"em\") \r\n// const ed = localStorage.getItem(\"ed\")\r\n// const x = \"-\"\r\n// const c = \"to\"\r\n// const DateRangePicker = () => {\r\n//   const [picker, setPicker] = useState([sy + x + sm + x + sd + sd, c + ey + x + em + x + ed])\r\n//   return (\r\n//     <Fragment>\r\n//       <Flatpickr\r\n//         value={picker}\r\n\r\n//         id='range-picker'\r\n//         className='form-control'\r\n//         onChange={(date) => {\r\n//           setPicker(date)\r\n//           const selecteddate = date[0]\r\n//           const date2 = date[1]\r\n//           const fd = new Date(selecteddate)\r\n//           const fd2 = new Date(date2)\r\n//           const sy = fd.getFullYear()\r\n//           const sm =  fd.getMonth()\r\n//           const sd = fd.getDate()\r\n//           const ey = fd2.getFullYear()\r\n//           const em =  fd2.getMonth()\r\n//           const ed = fd2.getDate()\r\n//           const mi = \"-\"\r\n//           const sy1 = \"&sy=\"\r\n//           const sm1 = \"&sm=\"\r\n//           const sd1 = \"&sd=\"\r\n//           const ey1 = \"&ey=\"\r\n//           const em1 = \"&em=\"\r\n//           const ed1 = \"&ed=\"\r\n//           console.log(\"date1\", selecteddate)\r\n//           console.log(\"date2\", date2)\r\n//           localStorage.setItem(\"startdate\", [sy + mi + sm + mi + sd])\r\n//           localStorage.setItem(\"enddate\", [ey + mi + em + mi + ed])\r\n//           localStorage.setItem(\"sy1\", [sy1])\r\n//           localStorage.setItem(\"sm1\", [sm1])\r\n//           localStorage.setItem(\"sd1\", [sd1])\r\n//           localStorage.setItem(\"ey1\", [ey1])\r\n//           localStorage.setItem(\"em1\", [em1])\r\n//           localStorage.setItem(\"ed1\", [ed1])\r\n//           localStorage.setItem(\"sy\", [sy])\r\n//           localStorage.setItem(\"sm\", [sm + 1])\r\n//           localStorage.setItem(\"sd\", [sd])\r\n//           localStorage.setItem(\"ey\", [ey])\r\n//           localStorage.setItem(\"em\", [em + 1])\r\n//           localStorage.setItem(\"ed\", [ed])\r\n//           window.location.reload()\r\n//         }}\r\n//         options={{\r\n//           mode: 'range',\r\n//           defaultDate: [Date() - 1, Date() - 7]\r\n//           // defaultDate: ['2021-10-01', '2021-10-03']\r\n//         }}\r\n\r\n//       />\r\n//     </Fragment>\r\n//   )\r\n  \r\n// }\r\n  \r\n// export default DateRangePicker\r\n\r\n// import { Fragment, useState } from 'react'\r\n// import { Label } from 'reactstrap'\r\n// import Flatpickr from 'react-flatpickr'\r\n\r\n// import Cookies from 'universal-cookie'\r\n// const cookies = new Cookies()\r\n// cookies.set('myCat', 'Pacman', { path: '/' })\r\n// // console.log(cookies.get('myCat')) // Pacman\r\n\r\n// const sy = localStorage.getItem(\"sy\")  \r\n// const sm = localStorage.getItem(\"sm\")\r\n// const sd = localStorage.getItem(\"sd\")\r\n// const ey = localStorage.getItem(\"ey\")\r\n// const em = localStorage.getItem(\"em\") \r\n// const ed = localStorage.getItem(\"ed\")\r\n// const x = \"-\"\r\n// const c = \"to\"\r\n// const d = new Date()\r\n// d.setDate(d.getDate() - 7)\r\n// const d1 = new Date()\r\n// d1.setDate(d1.getDate() - 1)\r\n// let picker1\r\n\r\n// // console.log(\"conditionoutside\")\r\n// const DateRangePicker = () => {\r\n//   if (sd === 'NaN') {\r\n//     picker1 = [d, d1]\r\n//     localStorage.setItem(\"sy\", d.getFullYear())\r\n//     localStorage.setItem(\"sm\", d.getMonth())\r\n//     localStorage.setItem(\"sd\", d.getDate())\r\n//     localStorage.setItem(\"ey\", d1.getFullYear())\r\n//     localStorage.setItem(\"em\", d1.getMonth())\r\n//     localStorage.setItem(\"ed\", d1.getDate())\r\n//     // console.log(\"condition1\")\r\n//     // const [picker, setPicker] = useState([d, d1])\r\n//   } else {\r\n//     picker1 = [sy + x + sm + x + sd, c + ey + x + em + x + ed]\r\n//     // console.log(\"conditionelse\")\r\n//     // const [picker, setPicker] = useState([sy + x + sm + x + sd, c + ey + x + em + x + ed])\r\n//   }\r\n//   // const [picker, setPicker] = useState([sy + x + sm + x + sd, c + ey + x + em + x + ed])\r\n//   // console.log(\"line259\")\r\n//   const [picker, setPicker] = useState(picker1)\r\n//   return (\r\n//     <Fragment>\r\n//       <Flatpickr\r\n//         value={picker}\r\n\r\n//         id='range-picker'\r\n//         className='form-control'\r\n//         onChange={(date) => {\r\n//           setPicker(date)\r\n//           const selecteddate = date[0]\r\n//           const date2 = date[1]\r\n//           const fd = new Date(selecteddate)\r\n\r\n//           const fd2 = new Date(date2)\r\n//           const sy = fd.getFullYear()\r\n//           const sm =  fd.getMonth()\r\n//           const sd = fd.getDate()\r\n//           const ey = fd2.getFullYear()\r\n//           const em =  fd2.getMonth()\r\n//           // console.log(fd2)\r\n//           // const ed = new Cookies()\r\n//           // ed.set('myCat', fd2.getDate(), { path: '/' })\r\n//           // console.log(cookies.get('myCat'))\r\n\r\n//           const ed = fd2.getDate()\r\n//           const mi = \"-\"\r\n//           // console.log(\"date1\", selecteddate)\r\n//           // console.log(\"date2\", date2)\r\n//           localStorage.setItem(\"startdate\", [sy + mi + sm + mi + sd])\r\n//           localStorage.setItem(\"enddate\", [ey + mi + em + mi + ed])\r\n//           localStorage.setItem(\"sy\", [sy])\r\n//           localStorage.setItem(\"sm\", [sm + 1])\r\n//           localStorage.setItem(\"sd\", [sd])\r\n//           localStorage.setItem(\"ey\", [ey])\r\n//           localStorage.setItem(\"em\", [em + 1])\r\n\r\n//           // (cookies.get('myCat'))\r\n\r\n//           localStorage.setItem(\"ed\", [ed])\r\n//           if (fd2 !== 'Invalid Date') {\r\n//             window.location.reload()\r\n//           } else {\r\n//             cons\r\n//           }\r\n//           // window.location.reload()\r\n//         }}\r\n//         options={{\r\n//           mode: 'range',\r\n//           defaultDate: [\"2021-10-05\", \"2021-10-10\"]\r\n//           // defaultDate: ['2021-10-01', '2021-10-03']\r\n//         }}\r\n\r\n//       />\r\n//     </Fragment>\r\n//   )\r\n  \r\n// }\r\n  \r\n// export default DateRangePicker\r\nimport { Fragment, useState } from 'react'\r\nimport { Label } from 'reactstrap'\r\nimport Flatpickr from 'react-flatpickr'\r\n\r\nimport Cookies from 'universal-cookie'\r\nimport { string } from 'prop-types'\r\n// const cookies = new Cookies()\r\n// cookies.set('myCat', 'Pacman', { path: '/' })\r\n// console.log(cookies.get('myCat')) // Pacman\r\n\r\n\r\nconst x = \"-\"\r\n// const c = \"till\"\r\nconst d = new Date()\r\nd.setDate(d.getDate() - 7)\r\nconst d1 = new Date()\r\nd1.setDate(d1.getDate())\r\nlet picker1\r\nconst last = new Date()\r\nlast.setDate(last.getDate() - 90)\r\n// const last1 =  last.getMonth()\r\n// const last2 = last.getFullYear()\r\n// const last3 = '1'\r\n// const last4 = ' '\r\n// fix.setDate(fix.getDate() - 90)\r\n// const ft =  (fix.getMonth())\r\n// localStorage.setItem(\"testing\", [ft])\r\n\r\n// console.log(\"conditionoutside\")\r\nconst DateRangePicker = () => {\r\n  const sy = localStorage.getItem(\"sy\")  \r\nconst sm = localStorage.getItem(\"sm\")\r\nconst sd = localStorage.getItem(\"sd\")\r\nconst ey = localStorage.getItem(\"ey\")\r\nconst em = localStorage.getItem(\"em\") \r\nconst ed = localStorage.getItem(\"ed\")\r\n\r\n  // const picker1 = [sy + x + sm + x + sd, c + ey + x + em + x + ed]\r\n  const picker1 = [new Date(sy + x + sm + x + sd), new Date(ey + x + em + x + ed)]\r\n  // const picker1 = [sd + x + sm + x + sy, c + ed + x + em + x + ey]\r\n  const [picker, setPicker] = useState(picker1)\r\n  return (\r\n    <Fragment>\r\n      <Flatpickr\r\n        value={picker}\r\n\r\n        id='range-picker'\r\n        className='form-control'\r\n        onChange={(date) => {\r\n          setPicker(date)\r\n          const selecteddate = date[0]\r\n          const date2 = date[1]\r\n          const fd = new Date(selecteddate)\r\n\r\n          const fd2 = new Date(date2)\r\n          const sy = fd.getFullYear()\r\n          const sm =  fd.getMonth()\r\n          const sd = fd.getDate()\r\n          const ey = fd2.getFullYear()\r\n          const em =  fd2.getMonth()\r\n       \r\n          const ed = fd2.getDate()\r\n          const mi = \"-\"\r\n\r\n          localStorage.setItem(\"sy\", [sy])\r\n          localStorage.setItem(\"sm\", [sm + 1])\r\n          localStorage.setItem(\"sd\", [sd])\r\n          localStorage.setItem(\"ey\", [ey])\r\n          localStorage.setItem(\"em\", [em + 1])\r\n          localStorage.setItem(\"ed\", [ed])\r\n\r\n          if (isNaN(fd2.getTime())) {\r\n            console.log(\"iff\")\r\n          } else {\r\n            window.location.reload()\r\n          }\r\n          // window.location.reload()\r\n        }}\r\n        options={{\r\n          mode: 'range',\r\n          \r\n          // placeholder: \"-\" - String,\r\n          // defaultDate: [\"2021-10-05\", \"2021-10-10\"]\r\n          dateFormat: 'j M Y',\r\n          \r\n          // minDate: [\"2021-12-01\"],\r\n          minDate: new Date().fp_incr(-90),\r\n          maxDate: d1\r\n          \r\n          // maxDate: d1\r\n          // defaultDate: ['2021-10-01', '2021-10-03']\r\n        }}\r\n\r\n      />\r\n    </Fragment>\r\n  )\r\n  \r\n}\r\n  \r\nexport default DateRangePicker"]},"metadata":{},"sourceType":"module"}