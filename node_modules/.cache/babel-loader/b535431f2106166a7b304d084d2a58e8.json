{"ast":null,"code":"import{Fragment,useEffect}from'react';import Prism from'prismjs';import{Row,Col,CardText}from'reactstrap';import FilledButtons from'./ButtonsFilled';import OutlineButtons from'./ButtonsOutline';import FlatButtons from'./ButtonsFlat';import GradientButtons from'./ButtonsGradient';import ReliefButtons from'./ButtonsRelief';import RoundButtons from'./ButtonsRound';import IconButtons from'./ButtonsIcon';import IconOnlyButtons from'./ButtonsIconOnly';import ButtonGroups from'./ButtonGroup';import ButtonSizes from'./ButtonSizes';import ButtonBlock from'./ButtonBlock';import ButtonTags from'./ButtonTags';import ButtonCheckboxRadio from'./ButtonCheckboxRadio';import BreadCrumbs from'@components/breadcrumbs';import Card from'@components/card-snippet';import{filledButtons,outlineButtons,flatButtons,gradientButtons,reliefButtons,roundButtons,iconButtons,iconOnlyButtons,buttonGroup,buttonSizes,buttonBlock,buttonTags,buttonCBRadio}from'./ButtonsSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Buttons=function Buttons(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Buttons\",breadCrumbParent:\"Components\",breadCrumbActive:\"Buttons\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Filled\",code:filledButtons,children:[/*#__PURE__*/_jsx(CardText,{className:\"mb-0\",children:\"Reactstrap includes six predefined button styles, each serving its own semantic purpose.\"}),/*#__PURE__*/_jsx(FilledButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Outline\",code:outlineButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"outline\"}),\" with button tag to create an outline button.\"]}),/*#__PURE__*/_jsx(OutlineButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Flat\",code:flatButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=\\\"flat-\",'colorName',\"\\\"\"]}),\" to create a flat button.\"]}),/*#__PURE__*/_jsx(FlatButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Gradient\",code:gradientButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=\\\"gradient-\",'colorName',\"\\\"\"]}),\" to create a gradient button.\"]}),/*#__PURE__*/_jsx(GradientButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Relief\",code:reliefButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsxs(\"code\",{children:[\"color=relief-\",'colorName']}),\" to create a relief button.\"]}),/*#__PURE__*/_jsx(ReliefButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Round\",code:roundButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".round\"}),\" create a square button.\"]}),/*#__PURE__*/_jsx(RoundButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Icons\",code:iconButtons,children:/*#__PURE__*/_jsx(IconButtons,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Icon Only\",code:iconOnlyButtons,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"You can use class \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\". You can create a rounded button by using\",' ',/*#__PURE__*/_jsx(\"code\",{children:\".rounded-circle\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\". You can only use \",/*#__PURE__*/_jsx(\"code\",{children:\".btn-icon\"}),\" when you only want icon in your button\"]}),/*#__PURE__*/_jsx(IconOnlyButtons,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Button Groups\",code:buttonGroup,children:[/*#__PURE__*/_jsx(CardText,{children:\"Group a series of buttons together on a single line with the button group.\"}),/*#__PURE__*/_jsx(ButtonGroups,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Checkbox & radio group\",code:buttonCBRadio,children:/*#__PURE__*/_jsx(ButtonCheckboxRadio,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Sizes\",code:buttonSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"size\"}),\" prop to change size of a button.\"]}),/*#__PURE__*/_jsx(ButtonSizes,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Block Level Buttons\",code:buttonBlock,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"block\"}),\" to create a block button.\"]}),/*#__PURE__*/_jsx(ButtonBlock,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Button Tags\",code:buttonTags,children:/*#__PURE__*/_jsx(ButtonTags,{})})})]})]});};export default Buttons;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/components/buttons/index.js"],"names":["Fragment","useEffect","Prism","Row","Col","CardText","FilledButtons","OutlineButtons","FlatButtons","GradientButtons","ReliefButtons","RoundButtons","IconButtons","IconOnlyButtons","ButtonGroups","ButtonSizes","ButtonBlock","ButtonTags","ButtonCheckboxRadio","BreadCrumbs","Card","filledButtons","outlineButtons","flatButtons","gradientButtons","reliefButtons","roundButtons","iconButtons","iconOnlyButtons","buttonGroup","buttonSizes","buttonBlock","buttonTags","buttonCBRadio","Buttons","highlightAll"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,OACEC,aADF,CAEEC,cAFF,CAGEC,WAHF,CAIEC,eAJF,CAKEC,aALF,CAMEC,YANF,CAOEC,WAPF,CAQEC,eARF,CASEC,WATF,CAUEC,WAVF,CAWEC,WAXF,CAYEC,UAZF,CAaEC,aAbF,KAcO,qBAdP,C,wFAgBA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBjC,SAAS,CAAC,UAAM,CACdC,KAAK,CAACiC,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,SAA7B,CAAuC,gBAAgB,CAAC,YAAxD,CAAqE,gBAAgB,CAAC,SAAtF,EADF,cAEE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,IAAI,CAAEd,aAA3B,wBACE,KAAC,QAAD,EAAU,SAAS,CAAC,MAApB,sGADF,cAIE,KAAC,aAAD,IAJF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,IAAI,CAAEC,cAA5B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,oCACW,iCADX,mDADF,cAIE,KAAC,cAAD,IAJF,GADF,EATF,cAiBE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,MAAZ,CAAmB,IAAI,CAAEC,WAAzB,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,wCAAmB,WAAnB,QADN,+BADF,cAIE,KAAC,WAAD,IAJF,GADF,EAjBF,cAyBE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,UAAZ,CAAuB,IAAI,CAAEC,eAA7B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,4CAAuB,WAAvB,QADN,mCADF,cAIE,KAAC,eAAD,IAJF,GADF,EAzBF,cAiCE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,IAAI,CAAEC,aAA3B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,wCAAoB,WAApB,GADN,iCADF,cAIE,KAAC,aAAD,IAJF,GADF,EAjCF,cAyCE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEC,YAA1B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,qCACY,gCADZ,8BADF,cAIE,KAAC,YAAD,IAJF,GADF,EAzCF,cAiDE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,KAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEC,WAA1B,uBACE,KAAC,WAAD,IADF,EADF,EAjDF,cAsDE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,WAAZ,CAAwB,IAAI,CAAEC,eAA9B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,6CACoB,mCADpB,8CACqF,GADrF,cAEE,yCAFF,uBAEoC,mCAFpC,oCAE6E,mCAF7E,6CADF,cAME,KAAC,eAAD,IANF,GADF,EAtDF,cAgEE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,eAAZ,CAA4B,IAAI,CAAEC,WAAlC,wBACE,KAAC,QAAD,yFADF,cAEE,KAAC,YAAD,IAFF,GADF,EAhEF,cAsEE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,KAAC,IAAD,EAAM,KAAK,CAAC,wBAAZ,CAAqC,IAAI,CAAEI,aAA3C,uBACE,KAAC,mBAAD,IADF,EADF,EAtEF,cA2EE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAEH,WAA1B,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,8BADN,uCADF,cAIE,KAAC,WAAD,IAJF,GADF,EA3EF,cAmFE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,qBAAZ,CAAkC,IAAI,CAAEC,WAAxC,wBACE,MAAC,QAAD,qCACW,+BADX,gCADF,cAIE,KAAC,WAAD,IAJF,GADF,EAnFF,cA2FE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,KAAC,IAAD,EAAM,KAAK,CAAC,aAAZ,CAA0B,IAAI,CAAEC,UAAhC,uBACE,KAAC,UAAD,IADF,EADF,EA3FF,GAFF,GADF,CAsGD,CA3GD,CA4GA,cAAeE,CAAAA,OAAf","sourcesContent":["import { Fragment, useEffect } from 'react'\r\nimport Prism from 'prismjs'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport FilledButtons from './ButtonsFilled'\r\nimport OutlineButtons from './ButtonsOutline'\r\nimport FlatButtons from './ButtonsFlat'\r\nimport GradientButtons from './ButtonsGradient'\r\nimport ReliefButtons from './ButtonsRelief'\r\nimport RoundButtons from './ButtonsRound'\r\nimport IconButtons from './ButtonsIcon'\r\nimport IconOnlyButtons from './ButtonsIconOnly'\r\nimport ButtonGroups from './ButtonGroup'\r\nimport ButtonSizes from './ButtonSizes'\r\nimport ButtonBlock from './ButtonBlock'\r\nimport ButtonTags from './ButtonTags'\r\nimport ButtonCheckboxRadio from './ButtonCheckboxRadio'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport {\r\n  filledButtons,\r\n  outlineButtons,\r\n  flatButtons,\r\n  gradientButtons,\r\n  reliefButtons,\r\n  roundButtons,\r\n  iconButtons,\r\n  iconOnlyButtons,\r\n  buttonGroup,\r\n  buttonSizes,\r\n  buttonBlock,\r\n  buttonTags,\r\n  buttonCBRadio\r\n} from './ButtonsSourceCode'\r\n\r\nconst Buttons = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Buttons' breadCrumbParent='Components' breadCrumbActive='Buttons' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Filled' code={filledButtons}>\r\n            <CardText className='mb-0'>\r\n              Reactstrap includes six predefined button styles, each serving its own semantic purpose.\r\n            </CardText>\r\n            <FilledButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Outline' code={outlineButtons}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>outline</code> with button tag to create an outline button.\r\n            </CardText>\r\n            <OutlineButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Flat' code={flatButtons}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color=\"flat-{'colorName'}\"</code> to create a flat button.\r\n            </CardText>\r\n            <FlatButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Gradient' code={gradientButtons}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color=\"gradient-{'colorName'}\"</code> to create a gradient button.\r\n            </CardText>\r\n            <GradientButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Relief' code={reliefButtons}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color=relief-{'colorName'}</code> to create a relief button.\r\n            </CardText>\r\n            <ReliefButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Round' code={roundButtons}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.round</code> create a square button.\r\n            </CardText>\r\n            <RoundButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icons' code={iconButtons}>\r\n            <IconButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icon Only' code={iconOnlyButtons}>\r\n            <CardText className='mb-0'>\r\n              You can use class <code>.btn-icon</code>. You can create a rounded button by using{' '}\r\n              <code>.rounded-circle</code> with <code>.btn-icon</code>. You can only use <code>.btn-icon</code> when you\r\n              only want icon in your button\r\n            </CardText>\r\n            <IconOnlyButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Button Groups' code={buttonGroup}>\r\n            <CardText>Group a series of buttons together on a single line with the button group.</CardText>\r\n            <ButtonGroups />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Checkbox & radio group' code={buttonCBRadio}>\r\n            <ButtonCheckboxRadio />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Sizes' code={buttonSizes}>\r\n            <CardText className='mb-0'>\r\n              Use <code>size</code> prop to change size of a button.\r\n            </CardText>\r\n            <ButtonSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Block Level Buttons' code={buttonBlock}>\r\n            <CardText>\r\n              Use prop <code>block</code> to create a block button.\r\n            </CardText>\r\n            <ButtonBlock />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Button Tags' code={buttonTags}>\r\n            <ButtonTags />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Buttons\r\n"]},"metadata":{},"sourceType":"module"}