{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\views\\\\funnelmapping\\\\Funnel.js\",\n    _this = this;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useEffect, useState } from 'react'\n// import { IoIosArrowRoundForward, IoIosArrowForward } from 'react-icons/io'\n// import PerfectScrollbar from 'react-perfect-scrollbar'\n// import './Funnel.css'\n// import $ from 'jquery'\n// const renderData = (data) => {\n//     return Object.keys(data).map((key) => {\n//       const value = data[key]\n//       if (typeof value === \"object\" && !Array.isArray(value)) {\n//         // If the value is an object, loop through its properties\n//         console.log({value})\n//         return (\n//           <div key={key}>\n//             <h2>{key}</h2>\n//             {renderData(value)}\n//           </div>\n//         )\n//       } else {\n//         // If the value is not an object, render it as text\n//         return (\n//           <div key={key}>\n//             <strong>{key}:</strong> {value}\n//           </div>\n//         )\n//       }\n//     })\n//   }\n// const MultipleValue = (res) => {\n//     // console.log(res)\n//     return (\n//         <>\n//         { Object.keys(res).map((val) => {\n//             return (\n//             <div className='d-flex align-items-center p-0 m-0'>\n//                 <IoIosArrowRoundForward size={32} className='text-warning' />\n//                 {Object.keys(res[val]).map((val1) => {\n//                     console.log(res[val])\n//                 })}\n//                     {/* <p className='fw-bold m-0'>{val1}</p> */}\n//                 {/* {console.log()} */}\n//                 {/* {typeof res[val] ? <p className='fw-bold text-warning m-0'>{res[val]}-</p> : \"\" } */}\n//                 {/* { (typeof res[val] === 'object') ? MultipleValue(res[val]) : <p className='fw-bold m-0'>{ res[val] }</p> }  */}\n//                     {/* </div> */}\n//                     {/* <div className='ml-3' /> */}\n//                     {/* { (typeof res[val] === 'object') &&<p className='fw-bold m-0'>{ res[val] }</p> }  */}\n//                         {/* <p><b>{res?.Tofu?.Reach?.toLocaleString()}</b></p> */}\n//             </div>\n//             )\n//         })}\n//         </>\n//     )\n// }\n// const Funnel = ({ res }) => {\n//     // $(document).ready(function () {\n//     //     $('.hide1').show()\n//     //     $('.hide2, .hide3, .hide4').hide()\n//     //     $('.rectangle01').click(function () {\n//     //         $('.hide2, .hide3, .hide4').hide()\n//     //         $('.hide1').show()\n//     //     })\n//     //     $('.rectangle03').click(function () {\n//     //         $('.hide1, .hide3, .hide4').hide()\n//     //         $('.hide2').show()\n//     //     })\n//     //     $('.rectangle05').click(function () {\n//     //         $('.hide1, .hide2, .hide4').hide()\n//     //         $('.hide3').show()\n//     //     })\n//     //     $('.rectangle07').click(function () {\n//     //         $('.hide1, .hide2, .hide3').hide()\n//     //         $('.hide4').show()\n//     //     })\n//     // })\n//     const [Key, setKey] = useState(\"\")\n//     const storing = (str) => {\n//         return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n//     }\n//     const handleChange = (e) => {\n//         setKey(storing(e.target.textContent))\n//     }\n//     useEffect(() => {\n//       setKey(Object.keys(res)[0])\n//     }, [])\n//     return (\n//         <>\n//             {res ? <div className=\"d-flex row rounded shadow\">\n//                 <div className=\"d-flex justify-content-center align-items-center flex-column col-lg-5 col-sm-12 p-0 py-1\">\n//                     <div onClick={handleChange} className=\"taper rectangle01\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Total Number Of Users\" style={{ borderColor: '#FFC313 transparent', width: '360px' }}>\n//                     <p className='funnelPara text-center text-white'>TOFU</p></div>\n//                     <div className=\"rectangle02 h-none\" style={{ width: 290 }} />\n//                     <div onClick={handleChange} className=\"taper rectangle03\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"User Engagement Behaviour (Number Of Users)\" style={{ borderColor: '#4076DA transparent', width: '300px' }}><p className='funnelPara text-center text-white'>MOFU</p></div>\n//                     <div className=\"rectangle04 h-none\" style={{ width: 235 }} />\n//                     <div onClick={handleChange} className=\"taper rectangle05\" style={{ borderColor: '#4acade transparent', width: '240px' }}><p className='funnelPara text-center text-white'>BOFU</p></div>\n//                     <div className=\"rectangle06 h-none\" style={{ width: 175 }} />\n//                     <div onClick={handleChange} className=\"taper rectangle07\" style={{ borderColor: '#27CA75 transparent', width: '180px' }}><p className='funnelPara text-center text-white'>Conversion</p></div>\n//                 </div>\n//                 <Details res={res[Key]} />\n//             </div> : ndivl}\n//         </>\n//     )\n// }\n// const Details = ({res}) => {\n//     return (\n//         <>\n//         {res && Object.keys(res).length > 0 &&\n//             <div className=\"d-flex flex-row col-lg-7 col-sm-12 p-1\">\n//                 <div className=\"content-FFC313 hide1 w-100\" style={{ height: 300 }}>\n//                     <div className=\"d-none d-lg-block w-25 position-relative border-top-warning\" style={{ marginLeft: '-182px', top: 25, height: 0, zIndex: '-1000' }} />\n//                         <PerfectScrollbar className=\"w-100 border-left-warning\">\n//                     <div className='d-flex align-items-center bg-warning mb-1'>\n//                         <p className='fw-bold text-white m-0' style={{ padding: 5 }}>Top-of-Funnel </p>\n//                     </div>\n//                     <div className='d-block' data-toggle=\"tooltip\" data-placement=\"top\" title=\"Total Number Of People Reached\" >\n//                     {renderData(res)}\n//                         {/* {res && Object.keys(res).map((val, index) => {\n//                             const value = data[key]\n//                             if (typeof value === \"object\" && !Array.isArray(value)) {\n//                             // If the value is an object, loop through its properties\n//                             return (\n//                                 <div key={key}>\n//                                 <h2>{key}</h2>\n//                                 {renderData(value)}\n//                                 </div>\n//                             )\n//                             } else {\n//                             // If the value is not an object, render it as text\n//                             return (\n//                                 <div key={key}>\n//                                 <strong>{key}:</strong> {value}\n//                                 </div>\n//                             )\n//                             }\n//                         })} */}\n//                     </div>\n//                         </PerfectScrollbar>\n//                     </div>\n//             </div>\n//         }\n//         </>\n//     )\n// }\nvar data = {\n  Tofu: {\n    Reach: 254608.0,\n    Unique_Reach: 3842,\n    Spends: 1389.917528,\n    Session: 7179.0,\n    CTR: 0.0046463583,\n    Demographics: [{\n      Gender: \"female\",\n      Sessions: 1092.0\n    }, {\n      Gender: \"male\",\n      Sessions: 207.0\n    }]\n  }\n};\n\nvar renderData = function renderData(data) {\n  return Object.keys(data).map(function (key) {\n    var value = data[key];\n\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n      // If the value is an object, loop through its properties\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, _this), renderData(value)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, _this);\n    } else if (typeof value === \"object\" && Array.isArray(value)) {\n      // If the value is an array, loop through its elements\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, _this), value.map(function (item, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(item).map(function (prop) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [prop, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, _this), \" \", item[prop]]\n              }, prop, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, _this);\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, _this);\n        })]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, _this);\n    } else {\n      // If the value is not an object or array, render it as text\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, _this), \" \", value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, _this);\n    }\n  });\n};\n\nvar Funnel = function Funnel() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderData(data.Tofu)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Funnel;\nexport default Funnel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Funnel\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/funnelmapping/Funnel.js"],"names":["data","Tofu","Reach","Unique_Reach","Spends","Session","CTR","Demographics","Gender","Sessions","renderData","Object","keys","map","key","value","Array","isArray","item","index","prop","Funnel"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,QADH;AAEJC,IAAAA,YAAY,EAAE,IAFV;AAGJC,IAAAA,MAAM,EAAE,WAHJ;AAIJC,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,GAAG,EAAE,YALD;AAMJC,IAAAA,YAAY,EAAE,CACZ;AACEC,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADY,EAKZ;AACED,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALY;AANV;AADK,CAAb;;AAoBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACV,IAAD,EAAU;AACzB,SAAOW,MAAM,CAACC,IAAP,CAAYZ,IAAZ,EAAkBa,GAAlB,CAAsB,UAACC,GAAD,EAAS;AACpC,QAAMC,KAAK,GAAGf,IAAI,CAACc,GAAD,CAAlB;;AACA,QAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6B,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAlC,EAAwD;AACtD;AACA,0BACE;AAAA,gCACE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,UAAU,CAACK,KAAD,CAFb;AAAA,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,eADF;AAMD,KARD,MAQO,IAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6BC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAjC,EAAuD;AAC5D;AACA,0BACE;AAAA,gCACE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGC,KAAK,CAACF,GAAN,CAAU,UAACK,IAAD,EAAOC,KAAP;AAAA,8BACT;AAAA,sBACGR,MAAM,CAACC,IAAP,CAAYM,IAAZ,EAAkBL,GAAlB,CAAsB,UAACO,IAAD;AAAA,kCACrB;AAAA,wCACE;AAAA,6BAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,OAC4BF,IAAI,CAACE,IAAD,CADhC;AAAA,iBAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,uBADqB;AAAA,aAAtB;AADH,aAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,mBADS;AAAA,SAAV,CAFH;AAAA,SAAUL,GAAV;AAAA;AAAA;AAAA;AAAA,eADF;AAcD,KAhBM,MAgBA;AACL;AACA,0BACE;AAAA,gCACE;AAAA,qBAASA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OAC2BC,KAD3B;AAAA,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,eADF;AAKD;AACF,GAlCM,CAAP;AAmCD,CApCH;;AAuCA,IAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,sBAAO;AAAA,cAAMX,UAAU,CAACV,IAAI,CAACC,IAAN;AAAhB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;KAAMoB,M;AAIN,eAAeA,MAAf","sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import { IoIosArrowRoundForward, IoIosArrowForward } from 'react-icons/io'\r\n// import PerfectScrollbar from 'react-perfect-scrollbar'\r\n// import './Funnel.css'\r\n// import $ from 'jquery'\r\n// const renderData = (data) => {\r\n//     return Object.keys(data).map((key) => {\r\n//       const value = data[key]\r\n//       if (typeof value === \"object\" && !Array.isArray(value)) {\r\n//         // If the value is an object, loop through its properties\r\n//         console.log({value})\r\n//         return (\r\n//           <div key={key}>\r\n//             <h2>{key}</h2>\r\n//             {renderData(value)}\r\n//           </div>\r\n//         )\r\n//       } else {\r\n//         // If the value is not an object, render it as text\r\n//         return (\r\n//           <div key={key}>\r\n//             <strong>{key}:</strong> {value}\r\n//           </div>\r\n//         )\r\n//       }\r\n//     })\r\n//   }\r\n// const MultipleValue = (res) => {\r\n//     // console.log(res)\r\n//     return (\r\n//         <>\r\n//         { Object.keys(res).map((val) => {\r\n//             return (\r\n//             <div className='d-flex align-items-center p-0 m-0'>\r\n//                 <IoIosArrowRoundForward size={32} className='text-warning' />\r\n//                 {Object.keys(res[val]).map((val1) => {\r\n//                     console.log(res[val])\r\n//                 })}\r\n//                     {/* <p className='fw-bold m-0'>{val1}</p> */}\r\n//                 {/* {console.log()} */}\r\n//                 {/* {typeof res[val] ? <p className='fw-bold text-warning m-0'>{res[val]}-</p> : \"\" } */}\r\n//                 {/* { (typeof res[val] === 'object') ? MultipleValue(res[val]) : <p className='fw-bold m-0'>{ res[val] }</p> }  */}\r\n\r\n//                     {/* </div> */}\r\n//                     {/* <div className='ml-3' /> */}\r\n//                     {/* { (typeof res[val] === 'object') &&<p className='fw-bold m-0'>{ res[val] }</p> }  */}\r\n//                         {/* <p><b>{res?.Tofu?.Reach?.toLocaleString()}</b></p> */}\r\n//             </div>\r\n//             )\r\n//         })}\r\n//         </>\r\n//     )\r\n// }\r\n// const Funnel = ({ res }) => {\r\n//     // $(document).ready(function () {\r\n//     //     $('.hide1').show()\r\n//     //     $('.hide2, .hide3, .hide4').hide()\r\n//     //     $('.rectangle01').click(function () {\r\n//     //         $('.hide2, .hide3, .hide4').hide()\r\n//     //         $('.hide1').show()\r\n//     //     })\r\n//     //     $('.rectangle03').click(function () {\r\n//     //         $('.hide1, .hide3, .hide4').hide()\r\n//     //         $('.hide2').show()\r\n//     //     })\r\n//     //     $('.rectangle05').click(function () {\r\n//     //         $('.hide1, .hide2, .hide4').hide()\r\n//     //         $('.hide3').show()\r\n//     //     })\r\n//     //     $('.rectangle07').click(function () {\r\n//     //         $('.hide1, .hide2, .hide3').hide()\r\n//     //         $('.hide4').show()\r\n//     //     })\r\n//     // })\r\n//     const [Key, setKey] = useState(\"\")\r\n//     const storing = (str) => {\r\n//         return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\r\n//     }\r\n//     const handleChange = (e) => {\r\n//         setKey(storing(e.target.textContent))\r\n//     }\r\n//     useEffect(() => {\r\n//       setKey(Object.keys(res)[0])\r\n//     }, [])\r\n\r\n//     return (\r\n//         <>\r\n//             {res ? <div className=\"d-flex row rounded shadow\">\r\n//                 <div className=\"d-flex justify-content-center align-items-center flex-column col-lg-5 col-sm-12 p-0 py-1\">\r\n//                     <div onClick={handleChange} className=\"taper rectangle01\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Total Number Of Users\" style={{ borderColor: '#FFC313 transparent', width: '360px' }}>\r\n//                     <p className='funnelPara text-center text-white'>TOFU</p></div>\r\n//                     <div className=\"rectangle02 h-none\" style={{ width: 290 }} />\r\n//                     <div onClick={handleChange} className=\"taper rectangle03\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"User Engagement Behaviour (Number Of Users)\" style={{ borderColor: '#4076DA transparent', width: '300px' }}><p className='funnelPara text-center text-white'>MOFU</p></div>\r\n//                     <div className=\"rectangle04 h-none\" style={{ width: 235 }} />\r\n//                     <div onClick={handleChange} className=\"taper rectangle05\" style={{ borderColor: '#4acade transparent', width: '240px' }}><p className='funnelPara text-center text-white'>BOFU</p></div>\r\n//                     <div className=\"rectangle06 h-none\" style={{ width: 175 }} />\r\n//                     <div onClick={handleChange} className=\"taper rectangle07\" style={{ borderColor: '#27CA75 transparent', width: '180px' }}><p className='funnelPara text-center text-white'>Conversion</p></div>\r\n//                 </div>\r\n//                 <Details res={res[Key]} />\r\n\r\n//             </div> : ndivl}\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const Details = ({res}) => {\r\n//     return (\r\n//         <>\r\n//         {res && Object.keys(res).length > 0 &&\r\n//             <div className=\"d-flex flex-row col-lg-7 col-sm-12 p-1\">\r\n//                 <div className=\"content-FFC313 hide1 w-100\" style={{ height: 300 }}>\r\n//                     <div className=\"d-none d-lg-block w-25 position-relative border-top-warning\" style={{ marginLeft: '-182px', top: 25, height: 0, zIndex: '-1000' }} />\r\n//                         <PerfectScrollbar className=\"w-100 border-left-warning\">\r\n//                     <div className='d-flex align-items-center bg-warning mb-1'>\r\n//                         <p className='fw-bold text-white m-0' style={{ padding: 5 }}>Top-of-Funnel </p>\r\n//                     </div>\r\n//                     <div className='d-block' data-toggle=\"tooltip\" data-placement=\"top\" title=\"Total Number Of People Reached\" >\r\n//                     {renderData(res)}\r\n//                         {/* {res && Object.keys(res).map((val, index) => {\r\n//                             const value = data[key]\r\n//                             if (typeof value === \"object\" && !Array.isArray(value)) {\r\n//                             // If the value is an object, loop through its properties\r\n//                             return (\r\n//                                 <div key={key}>\r\n//                                 <h2>{key}</h2>\r\n//                                 {renderData(value)}\r\n//                                 </div>\r\n//                             )\r\n//                             } else {\r\n//                             // If the value is not an object, render it as text\r\n//                             return (\r\n//                                 <div key={key}>\r\n//                                 <strong>{key}:</strong> {value}\r\n//                                 </div>\r\n//                             )\r\n//                             }\r\n//                         })} */}\r\n//                     </div>\r\n//                         </PerfectScrollbar>\r\n//                     </div>\r\n//             </div>\r\n//         }\r\n//         </>\r\n//     )\r\n// }\r\n\r\nconst data = {\r\n  Tofu: {\r\n    Reach: 254608.0,\r\n    Unique_Reach: 3842,\r\n    Spends: 1389.917528,\r\n    Session: 7179.0,\r\n    CTR: 0.0046463583,\r\n    Demographics: [\r\n      {\r\n        Gender: \"female\",\r\n        Sessions: 1092.0\r\n      },\r\n      {\r\n        Gender: \"male\",\r\n        Sessions: 207.0\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nconst renderData = (data) => {\r\n    return Object.keys(data).map((key) => {\r\n      const value = data[key];\r\n      if (typeof value === \"object\" && !Array.isArray(value)) {\r\n        // If the value is an object, loop through its properties\r\n        return (\r\n          <div key={key}>\r\n            <h2>{key}</h2>\r\n            {renderData(value)}\r\n          </div>\r\n        );\r\n      } else if (typeof value === \"object\" && Array.isArray(value)) {\r\n        // If the value is an array, loop through its elements\r\n        return (\r\n          <div key={key}>\r\n            <h2>{key}</h2>\r\n            {value.map((item, index) => (\r\n              <div key={index}>\r\n                {Object.keys(item).map((prop) => (\r\n                  <div key={prop}>\r\n                    <strong>{prop}:</strong> {item[prop]}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      } else {\r\n        // If the value is not an object or array, render it as text\r\n        return (\r\n          <div key={key}>\r\n            <strong>{key}:</strong> {value}\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\nconst Funnel = () => {\r\n  return <div>{renderData(data.Tofu)}</div>\r\n}\r\n\r\nexport default Funnel\r\n\r\n"]},"metadata":{},"sourceType":"module"}