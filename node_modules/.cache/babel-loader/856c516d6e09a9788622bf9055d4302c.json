{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport { ChartElement, Box, Point } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport { WHITE } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\n\nvar FunnelSegment = function (ChartElement) {\n  function FunnelSegment(value, options, segmentOptions) {\n    ChartElement.call(this, options);\n    this.value = value;\n    this.options.index = segmentOptions.index;\n  }\n\n  if (ChartElement) FunnelSegment.__proto__ = ChartElement;\n  FunnelSegment.prototype = Object.create(ChartElement && ChartElement.prototype);\n  FunnelSegment.prototype.constructor = FunnelSegment;\n\n  FunnelSegment.prototype.reflow = function reflow(chartBox) {\n    var points = this.points;\n    var label = this.children[0];\n    this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n\n    if (label) {\n      label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n    }\n  };\n\n  FunnelSegment.prototype.createVisual = function createVisual() {\n    var this$1 = this;\n    var options = this.options;\n    var visual;\n    ChartElement.prototype.createVisual.call(this);\n\n    if (options.visual) {\n      visual = options.visual({\n        category: this.category,\n        dataItem: this.dataItem,\n        value: this.value,\n        series: this.series,\n        percentage: this.percentage,\n        points: this.points,\n        options: options,\n        sender: this.getSender(),\n        createVisual: function createVisual() {\n          return this$1.createPath();\n        }\n      });\n    } else {\n      visual = this.createPath();\n    }\n\n    if (visual) {\n      this.visual.append(visual);\n    }\n  };\n\n  FunnelSegment.prototype.createPath = function createPath() {\n    var options = this.options;\n    var border = options.border;\n    var path = draw.Path.fromPoints(this.points, {\n      fill: {\n        color: options.color,\n        opacity: options.opacity\n      },\n      stroke: {\n        color: border.color,\n        opacity: border.opacity,\n        width: border.width\n      }\n    }).close();\n    return path;\n  };\n\n  FunnelSegment.prototype.createHighlight = function createHighlight(style) {\n    return draw.Path.fromPoints(this.points, style);\n  };\n\n  FunnelSegment.prototype.highlightVisual = function highlightVisual() {\n    return this.visual.children[0];\n  };\n\n  FunnelSegment.prototype.highlightVisualArgs = function highlightVisualArgs() {\n    var path = draw.Path.fromPoints(this.points).close();\n    return {\n      options: this.options,\n      path: path\n    };\n  };\n\n  FunnelSegment.prototype.tooltipAnchor = function tooltipAnchor() {\n    var box = this.box;\n    return {\n      point: new Point(box.center().x, box.y1),\n      align: {\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    };\n  };\n\n  FunnelSegment.prototype.formatValue = function formatValue(format) {\n    var point = this;\n    return point.owner.formatPointValue(point, format);\n  };\n\n  return FunnelSegment;\n}(ChartElement);\n\nsetDefaultOptions(FunnelSegment, {\n  color: WHITE,\n  border: {\n    width: 1\n  }\n});\ndeepExtend(FunnelSegment.prototype, PointEventsMixin);\nexport default FunnelSegment;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/chart/funnel-chart/funnel-segment.js"],"names":["drawing","draw","ChartElement","Box","Point","PointEventsMixin","WHITE","deepExtend","setDefaultOptions","FunnelSegment","value","options","segmentOptions","call","index","__proto__","prototype","Object","create","constructor","reflow","chartBox","points","label","children","box","x","y","x1","x2","createVisual","this$1","visual","category","dataItem","series","percentage","sender","getSender","createPath","append","border","path","Path","fromPoints","fill","color","opacity","stroke","width","close","createHighlight","style","highlightVisual","highlightVisualArgs","tooltipAnchor","point","center","y1","align","horizontal","vertical","formatValue","format","owner","formatPointValue"],"mappings":"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","sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\r\n\r\nimport { ChartElement, Box, Point } from '../../core';\r\nimport PointEventsMixin from '../mixins/point-events-mixin';\r\n\r\nimport { WHITE } from '../../common/constants';\r\nimport { deepExtend, setDefaultOptions } from '../../common';\r\n\r\nvar FunnelSegment = (function (ChartElement) {\r\n    function FunnelSegment(value, options, segmentOptions) {\r\n        ChartElement.call(this, options);\r\n\r\n        this.value = value;\r\n        this.options.index = segmentOptions.index;\r\n    }\r\n\r\n    if ( ChartElement ) FunnelSegment.__proto__ = ChartElement;\r\n    FunnelSegment.prototype = Object.create( ChartElement && ChartElement.prototype );\r\n    FunnelSegment.prototype.constructor = FunnelSegment;\r\n\r\n    FunnelSegment.prototype.reflow = function reflow (chartBox) {\r\n        var points = this.points;\r\n        var label = this.children[0];\r\n\r\n        this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\r\n\r\n        if (label) {\r\n            label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\r\n        }\r\n    };\r\n\r\n    FunnelSegment.prototype.createVisual = function createVisual () {\r\n        var this$1 = this;\r\n\r\n        var options = this.options;\r\n        var visual;\r\n\r\n        ChartElement.prototype.createVisual.call(this);\r\n\r\n        if (options.visual) {\r\n            visual = options.visual({\r\n                category: this.category,\r\n                dataItem: this.dataItem,\r\n                value: this.value,\r\n                series: this.series,\r\n                percentage: this.percentage,\r\n                points: this.points,\r\n                options: options,\r\n                sender: this.getSender(),\r\n                createVisual: function () { return this$1.createPath(); }\r\n            });\r\n        } else {\r\n            visual = this.createPath();\r\n        }\r\n\r\n        if (visual) {\r\n            this.visual.append(visual);\r\n        }\r\n    };\r\n\r\n    FunnelSegment.prototype.createPath = function createPath () {\r\n        var options = this.options;\r\n        var border = options.border;\r\n        var path = draw.Path.fromPoints(this.points, {\r\n            fill: {\r\n                color: options.color,\r\n                opacity: options.opacity\r\n            },\r\n            stroke: {\r\n                color: border.color,\r\n                opacity: border.opacity,\r\n                width: border.width\r\n            }\r\n        }).close();\r\n\r\n        return path;\r\n    };\r\n\r\n    FunnelSegment.prototype.createHighlight = function createHighlight (style) {\r\n        return draw.Path.fromPoints(this.points, style);\r\n    };\r\n\r\n    FunnelSegment.prototype.highlightVisual = function highlightVisual () {\r\n        return this.visual.children[0];\r\n    };\r\n\r\n    FunnelSegment.prototype.highlightVisualArgs = function highlightVisualArgs () {\r\n        var path = draw.Path.fromPoints(this.points).close();\r\n\r\n        return {\r\n            options: this.options,\r\n            path: path\r\n        };\r\n    };\r\n\r\n    FunnelSegment.prototype.tooltipAnchor = function tooltipAnchor () {\r\n        var box = this.box;\r\n        return {\r\n            point: new Point(box.center().x, box.y1),\r\n            align: {\r\n                horizontal: \"center\",\r\n                vertical: \"top\"\r\n            }\r\n        };\r\n    };\r\n\r\n    FunnelSegment.prototype.formatValue = function formatValue (format) {\r\n        var point = this;\r\n        return point.owner.formatPointValue(point, format);\r\n    };\r\n\r\n    return FunnelSegment;\r\n}(ChartElement));\r\n\r\nsetDefaultOptions(FunnelSegment, {\r\n    color: WHITE,\r\n    border: {\r\n        width: 1\r\n    }\r\n});\r\n\r\ndeepExtend(FunnelSegment.prototype, PointEventsMixin);\r\n\r\nexport default FunnelSegment;"]},"metadata":{},"sourceType":"module"}