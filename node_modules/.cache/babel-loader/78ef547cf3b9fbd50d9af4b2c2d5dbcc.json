{"ast":null,"code":"import _toConsumableArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment,useState}from'react';import XLSX from'xlsx';import Uppy from'@uppy/core';import{X}from'react-feather';import{DragDrop}from'@uppy/react';import Avatar from'@components/avatar';import{toast}from'react-toastify';import ExtensionsHeader from'@components/extensions-header';import{Row,Col,Card,CardBody,Table,CardHeader,CardTitle,Input,Label}from'reactstrap';import'uppy/dist/uppy.css';import'@uppy/status-bar/dist/style.css';import'@styles/react/libs/file-uploader/file-uploader.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ErrorToast=function ErrorToast(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toastify-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"danger\",icon:/*#__PURE__*/_jsx(X,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Error!\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"a second ago\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"toast-text\",children:[\"\\uD83D\\uDC4B You can only upload \",/*#__PURE__*/_jsx(\"span\",{className:\"font-weight-bolder\",children:\".xlsx\"}),\",\",' ',/*#__PURE__*/_jsx(\"span\",{className:\"font-weight-bolder\",children:\".xls\"}),\" & \",/*#__PURE__*/_jsx(\"span\",{className:\"font-weight-bolder\",children:\".csv\"}),\" Files!.\"]})})]});};var Import=function Import(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tableData=_useState2[0],setTableData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredData=_useState4[0],setFilteredData=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),value=_useState6[0],setValue=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var uppy=new Uppy({restrictions:{maxNumberOfFiles:1},autoProceed:true});var getTableData=function getTableData(arr,name){setTableData(arr);setName(name);};uppy.on('complete',function(result){var reader=new FileReader();reader.onload=function(){var fileData=reader.result;var wb=XLSX.read(fileData,{type:'binary'});wb.SheetNames.forEach(function(sheetName){var rowObj=XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);getTableData(rowObj,result.successful[0].data.name);});};if(result.successful[0].extension==='xlsx'||result.successful[0].extension==='csv'||result.successful[0].extension==='xls'){reader.readAsBinaryString(result.successful[0].data);}else{toast.error(/*#__PURE__*/_jsx(ErrorToast,{}),{hideProgressBar:true});}});var handleFilter=function handleFilter(e){var data=tableData;var filteredData=[];var value=e.target.value;setValue(value);if(value.length){filteredData=data.filter(function(col){var keys=Object.keys(col);var startsWithCondition=keys.filter(function(key){return col[key].toString().toLowerCase().startsWith(value.toLowerCase());});var includesCondition=keys.filter(function(key){return col[key].toString().toLowerCase().includes(value.toLowerCase());});if(startsWithCondition.length)return col[startsWithCondition];else if(!startsWithCondition&&includesCondition.length)return col[includesCondition];else return null;});setFilteredData(filteredData);setValue(value);}else{return null;}};/*eslint-disable */var headArr=tableData.length?tableData.map(function(col,index){if(index===0)return _toConsumableArray(Object.keys(col));else return null;}):[];/*eslint-enable */var dataArr=value.length?filteredData:tableData.length&&!value.length?tableData:null;var renderTableBody=function renderTableBody(){if(dataArr!==null&&dataArr.length){return dataArr.map(function(col,index){var keys=Object.keys(col);var renderTd=keys.map(function(key,index){return/*#__PURE__*/_jsx(\"td\",{children:col[key]},index);});return/*#__PURE__*/_jsx(\"tr\",{children:renderTd},index);});}else{return null;}};var renderTableHead=function renderTableHead(){if(headArr.length){return headArr[0].map(function(head,index){return/*#__PURE__*/_jsx(\"th\",{children:head},index);});}else{return null;}};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(ExtensionsHeader,{title:\"XLSX\",subTitle:\"Xlsx is a parser and writer for various spreadsheet formats\",link:\"https://github.com/AdeleD/react-paginate\"}),/*#__PURE__*/_jsxs(Row,{className:\"import-component\",children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(DragDrop,{uppy:uppy})})})})})}),tableData.length?/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"justify-content-between flex-wrap\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center justify-content-end\",children:[/*#__PURE__*/_jsx(Label,{for:\"search-input\",className:\"mr-1\",children:\"Search\"}),/*#__PURE__*/_jsx(Input,{id:\"search-input\",type:\"text\",bsSize:\"sm\",value:value,onChange:function onChange(e){return handleFilter(e);}})]})]}),/*#__PURE__*/_jsxs(Table,{className:\"table-hover-animation\",responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:renderTableHead()})}),/*#__PURE__*/_jsx(\"tbody\",{children:renderTableBody()})]})]})}):null]})]});};export default Import;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/extensions/import-export/Import.js"],"names":["Fragment","useState","XLSX","Uppy","X","DragDrop","Avatar","toast","ExtensionsHeader","Row","Col","Card","CardBody","Table","CardHeader","CardTitle","Input","Label","ErrorToast","Import","tableData","setTableData","filteredData","setFilteredData","value","setValue","name","setName","uppy","restrictions","maxNumberOfFiles","autoProceed","getTableData","arr","on","result","reader","FileReader","onload","fileData","wb","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","successful","data","extension","readAsBinaryString","error","hideProgressBar","handleFilter","e","target","length","filter","col","keys","Object","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","headArr","map","index","dataArr","renderTableBody","renderTd","renderTableHead","head"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react'\r\nimport XLSX from 'xlsx'\r\nimport Uppy from '@uppy/core'\r\nimport { X } from 'react-feather'\r\nimport { DragDrop } from '@uppy/react'\r\nimport Avatar from '@components/avatar'\r\nimport { toast } from 'react-toastify'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\nimport { Row, Col, Card, CardBody, Table, CardHeader, CardTitle, Input, Label } from 'reactstrap'\r\n\r\nimport 'uppy/dist/uppy.css'\r\nimport '@uppy/status-bar/dist/style.css'\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>a second ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 You can only upload <span className='font-weight-bolder'>.xlsx</span>,{' '}\r\n        <span className='font-weight-bolder'>.xls</span> & <span className='font-weight-bolder'>.csv</span> Files!.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Import = () => {\r\n  const [tableData, setTableData] = useState([])\r\n  const [filteredData, setFilteredData] = useState([])\r\n  const [value, setValue] = useState('')\r\n  const [name, setName] = useState('')\r\n\r\n  const uppy = new Uppy({\r\n    restrictions: { maxNumberOfFiles: 1 },\r\n    autoProceed: true\r\n  })\r\n\r\n  const getTableData = (arr, name) => {\r\n    setTableData(arr)\r\n    setName(name)\r\n  }\r\n\r\n  uppy.on('complete', result => {\r\n    const reader = new FileReader()\r\n    reader.onload = function () {\r\n      const fileData = reader.result\r\n      const wb = XLSX.read(fileData, { type: 'binary' })\r\n\r\n      wb.SheetNames.forEach(function (sheetName) {\r\n        const rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\r\n        getTableData(rowObj, result.successful[0].data.name)\r\n      })\r\n    }\r\n\r\n    if (\r\n      result.successful[0].extension === 'xlsx' ||\r\n      result.successful[0].extension === 'csv' ||\r\n      result.successful[0].extension === 'xls'\r\n    ) {\r\n      reader.readAsBinaryString(result.successful[0].data)\r\n    } else {\r\n      toast.error(<ErrorToast />, { hideProgressBar: true })\r\n    }\r\n  })\r\n\r\n  const handleFilter = e => {\r\n    const data = tableData\r\n    let filteredData = []\r\n    const value = e.target.value\r\n    setValue(value)\r\n\r\n    if (value.length) {\r\n      filteredData = data.filter(col => {\r\n        const keys = Object.keys(col)\r\n\r\n        const startsWithCondition = keys.filter(key => {\r\n          return col[key].toString().toLowerCase().startsWith(value.toLowerCase())\r\n        })\r\n\r\n        const includesCondition = keys.filter(key => col[key].toString().toLowerCase().includes(value.toLowerCase()))\r\n\r\n        if (startsWithCondition.length) return col[startsWithCondition]\r\n        else if (!startsWithCondition && includesCondition.length) return col[includesCondition]\r\n        else return null\r\n      })\r\n      setFilteredData(filteredData)\r\n      setValue(value)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  /*eslint-disable */\r\n  const headArr = tableData.length\r\n    ? tableData.map((col, index) => {\r\n        if (index === 0) return [...Object.keys(col)]\r\n        else return null\r\n      })\r\n    : []\r\n  /*eslint-enable */\r\n  const dataArr = value.length ? filteredData : tableData.length && !value.length ? tableData : null\r\n\r\n  const renderTableBody = () => {\r\n    if (dataArr !== null && dataArr.length) {\r\n      return dataArr.map((col, index) => {\r\n        const keys = Object.keys(col)\r\n        const renderTd = keys.map((key, index) => <td key={index}>{col[key]}</td>)\r\n        return <tr key={index}>{renderTd}</tr>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const renderTableHead = () => {\r\n    if (headArr.length) {\r\n      return headArr[0].map((head, index) => {\r\n        return <th key={index}>{head}</th>\r\n      })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='XLSX'\r\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\r\n        link='https://github.com/AdeleD/react-paginate'\r\n      />\r\n      <Row className='import-component'>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm='12'>\r\n                  <DragDrop uppy={uppy} />\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        {tableData.length ? (\r\n          <Col sm='12'>\r\n            <Card>\r\n              <CardHeader className='justify-content-between flex-wrap'>\r\n                <CardTitle tag='h4'>{name}</CardTitle>\r\n                <div className='d-flex align-items-center justify-content-end'>\r\n                  <Label for='search-input' className='mr-1'>\r\n                    Search\r\n                  </Label>\r\n                  <Input id='search-input' type='text' bsSize='sm' value={value} onChange={e => handleFilter(e)} />\r\n                </div>\r\n              </CardHeader>\r\n              <Table className='table-hover-animation' responsive>\r\n                <thead>\r\n                  <tr>{renderTableHead()}</tr>\r\n                </thead>\r\n                <tbody>{renderTableBody()}</tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Import\r\n"]},"metadata":{},"sourceType":"module"}