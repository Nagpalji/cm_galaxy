{"ast":null,"code":"// ** React Imports\nimport{Suspense,lazy}from'react';import ReactDOM from'react-dom';// ** Redux Imports\nimport{Provider}from'react-redux';import{store}from'./redux/storeConfig/store';// ** Intl, CASL & ThemeColors Context\nimport ability from'./configs/acl/ability';import{ToastContainer}from'react-toastify';import{AbilityContext}from'./utility/context/Can';import{ThemeContext}from'./utility/context/ThemeColors';import{IntlProviderWrapper}from'./utility/context/Internationalization';// ** Spinner (Splash Screen)\nimport Spinner from'./@core/components/spinner/Fallback-spinner';// ** Ripple Button\nimport'./@core/components/ripple-button';// ** Fake Database\nimport'./@fake-db';// ** PrismJS\nimport'prismjs';import'prismjs/themes/prism-tomorrow.css';import'prismjs/components/prism-jsx.min';// ** React Perfect Scrollbar\nimport'react-perfect-scrollbar/dist/css/styles.css';// ** React Toastify\nimport'@styles/react/libs/toastify/toastify.scss';// ** Core styles\nimport'./@core/assets/fonts/feather/iconfont.css';import'./@core/scss/core.scss';import'./assets/scss/style.scss';// ** Service Worker\nimport*as serviceWorker from'./serviceWorker';// ** Lazy load app\n// const LazyApp = lazy(() => import('./App'))\nimport App from\"./App\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Spinner,{}),children:/*#__PURE__*/_jsx(AbilityContext.Provider,{value:ability,children:/*#__PURE__*/_jsx(ThemeContext,{children:/*#__PURE__*/_jsxs(IntlProviderWrapper,{children:[/*#__PURE__*/_jsx(App,{}),/*#__PURE__*/_jsx(ToastContainer,{newestOnTop:true})]})})})})}),document.getElementById('root'));// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/index.js"],"names":["Suspense","lazy","ReactDOM","Provider","store","ability","ToastContainer","AbilityContext","ThemeContext","IntlProviderWrapper","Spinner","serviceWorker","App","render","document","getElementById"],"mappings":"AAAA;AACA,OAASA,QAAT,CAAmBC,IAAnB,KAA+B,OAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA;AACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,KAAT,KAAsB,2BAAtB,CAEA;AACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,YAAT,KAA6B,+BAA7B,CACA,OAASC,mBAAT,KAAoC,wCAApC,CAEA;AACA,MAAOC,CAAAA,OAAP,KAAoB,6CAApB,CAEA;AACA,MAAO,kCAAP,CAEA;AACA,MAAO,YAAP,CAEA;AACA,MAAO,SAAP,CACA,MAAO,mCAAP,CACA,MAAO,kCAAP,CAEA;AACA,MAAO,6CAAP,CAEA;AACA,MAAO,2CAAP,CAEA;AACA,MAAO,2CAAP,CACA,MAAO,wBAAP,CACA,MAAO,0BAAP,CAEA;AACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CAEA;AACA;AACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,C,wFACAV,QAAQ,CAACW,MAAT,cACE,KAAC,QAAD,EAAU,KAAK,CAAET,KAAjB,uBACE,KAAC,QAAD,EAAU,QAAQ,cAAE,KAAC,OAAD,IAApB,uBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAEC,OAAhC,uBACE,KAAC,YAAD,wBACE,MAAC,mBAAD,yBACE,KAAC,GAAD,IADF,cAEE,KAAC,cAAD,EAAgB,WAAW,KAA3B,EAFF,GADF,EADF,EADF,EADF,EADF,CAaES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAbF,EAgBA;AACA;AACA;AACA","sourcesContent":["// ** React Imports\r\nimport { Suspense, lazy } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// ** Redux Imports\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/storeConfig/store'\r\n\r\n// ** Intl, CASL & ThemeColors Context\r\nimport ability from './configs/acl/ability'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { AbilityContext } from './utility/context/Can'\r\nimport { ThemeContext } from './utility/context/ThemeColors'\r\nimport { IntlProviderWrapper } from './utility/context/Internationalization'\r\n\r\n// ** Spinner (Splash Screen)\r\nimport Spinner from './@core/components/spinner/Fallback-spinner'\r\n\r\n// ** Ripple Button\r\nimport './@core/components/ripple-button'\r\n\r\n// ** Fake Database\r\nimport './@fake-db'\r\n\r\n// ** PrismJS\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport 'prismjs/components/prism-jsx.min'\r\n\r\n// ** React Perfect Scrollbar\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\n\r\n// ** React Toastify\r\nimport '@styles/react/libs/toastify/toastify.scss'\r\n\r\n// ** Core styles\r\nimport './@core/assets/fonts/feather/iconfont.css'\r\nimport './@core/scss/core.scss'\r\nimport './assets/scss/style.scss'\r\n\r\n// ** Service Worker\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// ** Lazy load app\r\n// const LazyApp = lazy(() => import('./App'))\r\nimport App from \"./App\"\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={<Spinner />}>\r\n      <AbilityContext.Provider value={ability}>\r\n        <ThemeContext>\r\n          <IntlProviderWrapper>\r\n            <App />\r\n            <ToastContainer newestOnTop />\r\n          </IntlProviderWrapper>\r\n        </ThemeContext>\r\n      </AbilityContext.Provider>\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister()\r\n"]},"metadata":{},"sourceType":"module"}