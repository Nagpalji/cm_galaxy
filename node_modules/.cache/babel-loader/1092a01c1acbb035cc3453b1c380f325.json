{"ast":null,"code":"import _objectSpread from \"D:/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\full-version\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useRef } from 'react';\nimport { Button } from 'reactstrap';\nimport { Search, Inbox, Camera, ExternalLink } from 'react-feather'; // ** Vertical Menu Items Array\n\nimport navigation from '@src/navigation/vertical'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // ** Vertical Menu Components\n\nimport VerticalMenuHeader from './VerticalMenuHeader';\nimport VerticalNavMenuItems from './VerticalNavMenuItems'; // Button start\n\nimport button from './button'; // Button End\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Sidebar = function Sidebar(props) {\n  _s();\n\n  // ** Props\n  var menuCollapsed = props.menuCollapsed,\n      routerProps = props.routerProps,\n      menu = props.menu,\n      currentActiveItem = props.currentActiveItem,\n      skin = props.skin; // ** States\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      groupOpen = _useState2[0],\n      setGroupOpen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupActive = _useState4[0],\n      setGroupActive = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeItem = _useState6[0],\n      setActiveItem = _useState6[1]; // ** Menu Hover State\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      menuHover = _useState8[0],\n      setMenuHover = _useState8[1]; // ** Ref\n\n\n  var shadowRef = useRef(null); // ** Function to handle Mouse Enter\n\n  var onMouseEnter = function onMouseEnter() {\n    if (menuCollapsed) {\n      setMenuHover(true);\n    }\n  }; // ** Scroll Menu\n\n\n  var scrollMenu = function scrollMenu(container) {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block');\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n        expanded: menuHover || menuCollapsed === false,\n        'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n        'menu-dark': skin === 'semi-dark' || skin === 'dark'\n      }),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: function onMouseLeave() {\n        return setMenuHover(false);\n      },\n      children: menu ? menu(props) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(VerticalMenuHeader, _objectSpread({\n          setGroupOpen: setGroupOpen,\n          menuHover: menuHover\n        }, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shadow-bottom\",\n          ref: shadowRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          className: \"main-menu-content\",\n          options: {\n            wheelPropagation: false\n          },\n          onScrollY: function onScrollY(container) {\n            return scrollMenu(container);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navigation navigation-main\",\n            children: /*#__PURE__*/_jsxDEV(VerticalNavMenuItems, {\n              items: navigation,\n              groupActive: groupActive,\n              setGroupActive: setGroupActive,\n              activeItem: activeItem,\n              setActiveItem: setActiveItem,\n              groupOpen: groupOpen,\n              setGroupOpen: setGroupOpen,\n              routerProps: routerProps,\n              menuCollapsed: menuCollapsed,\n              menuHover: menuHover,\n              currentActiveItem: currentActiveItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Sidebar, \"AkG2UViQkgAttCCK1mG2wHgHVAk=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/full-version/src/@core/layouts/components/menu/vertical-menu/index.js"],"names":["Fragment","useState","useRef","Button","Search","Inbox","Camera","ExternalLink","navigation","classnames","PerfectScrollbar","VerticalMenuHeader","VerticalNavMenuItems","button","Sidebar","props","menuCollapsed","routerProps","menu","currentActiveItem","skin","groupOpen","setGroupOpen","groupActive","setGroupActive","activeItem","setActiveItem","menuHover","setMenuHover","shadowRef","onMouseEnter","scrollMenu","container","scrollTop","current","classList","contains","add","remove","expanded","wheelPropagation"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { Search, Inbox, Camera, ExternalLink } from 'react-feather'\r\n\r\n// ** Vertical Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// Button start\r\nimport button from './button'\r\n// Button End\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    if (menuCollapsed) {\r\n      setMenuHover(true)\r\n    }\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu(props)\r\n        ) : (\r\n          <Fragment>\r\n            {/* {/ Vertical Menu Header /} */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* {/ Vertical Menu Header Shadow /} */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* {/ Perfect Scrollbar /} */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={navigation}\r\n                  groupActive={groupActive}\r\n                  setGroupActive={setGroupActive}\r\n                  activeItem={activeItem}\r\n                  setActiveItem={setActiveItem}\r\n                  groupOpen={groupOpen}\r\n                  setGroupOpen={setGroupOpen}\r\n                  routerProps={routerProps}\r\n                  menuCollapsed={menuCollapsed}\r\n                  menuHover={menuHover}\r\n                  currentActiveItem={currentActiveItem}\r\n                />\r\n                {/* Button start */}\r\n                {/* <div className='demo-inline-spacing nav-button'>\r\n                   <a target=\"_blank\" href=\"http://cmgalaxy.com/\">\r\n                    <Button.Ripple className='btn-icon' color='primary'>\r\n                      <ExternalLink size={20} />\r\n                    </Button.Ripple>\r\n                   </a>\r\n                </div> */}\r\n    \r\n                {/* <div className='navbar-header'>\r\n                <ul className='nav navbar-nav flex-row'>\r\n                  <li className='nav-item mr-auto'>\r\n                    <a target=\"_blank\" href='http://cmgalaxy.com/users' className='navbar-brand'>\r\n                      <span className='brand-logo'>\r\n                        <img className='menu-button1' src={button.app.appLogoImage} alt='icon' />\r\n                      </span>\r\n                      <img className='menu-button2 brand-text mb-0' src={button.app.appLogo} alt='Logo' />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div> */}\r\n              {/* Button End */}\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}