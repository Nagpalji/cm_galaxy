{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* global AggregateError */\n\n\nvar Translator = require('@uppy/utils/lib/Translator');\n\nvar ee = require('namespace-emitter');\n\nvar cuid = require('cuid');\n\nvar throttle = require('lodash.throttle');\n\nvar prettierBytes = require('@transloadit/prettier-bytes');\n\nvar match = require('mime-match');\n\nvar DefaultStore = require('@uppy/store-default');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar findIndex = require('@uppy/utils/lib/findIndex');\n\nvar supportsUploadProgress = require('./supportsUploadProgress');\n\nvar _require = require('./loggers'),\n    justErrorsLogger = _require.justErrorsLogger,\n    debugLogger = _require.debugLogger;\n\nvar Plugin = require('./Plugin'); // Exported from here.\n\n\nvar RestrictionError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RestrictionError, _Error);\n\n  function RestrictionError() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Error.call.apply(_Error, [this].concat(args)) || this;\n    _this.isRestriction = true;\n    return _this;\n  }\n\n  return RestrictionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nif (typeof AggregateError === 'undefined') {\n  // eslint-disable-next-line no-global-assign\n  AggregateError = /*#__PURE__*/function (_Error2) {\n    _inheritsLoose(AggregateError, _Error2);\n\n    function AggregateError(message, errors) {\n      var _this2;\n\n      _this2 = _Error2.call(this, message) || this;\n      _this2.errors = errors;\n      return _this2;\n    }\n\n    return AggregateError;\n  }( /*#__PURE__*/_wrapNativeSuper(Error));\n}\n\nvar AggregateRestrictionError = /*#__PURE__*/function (_AggregateError) {\n  _inheritsLoose(AggregateRestrictionError, _AggregateError);\n\n  function AggregateRestrictionError() {\n    var _this3;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _AggregateError.call.apply(_AggregateError, [this].concat(args)) || this;\n    _this3.isRestriction = true;\n    return _this3;\n  }\n\n  return AggregateRestrictionError;\n}(AggregateError);\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\n\n\nvar Uppy = /*#__PURE__*/function () {\n  // eslint-disable-next-line global-require\n\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts â€” Uppy options\n   */\n  function Uppy(opts) {\n    var _this4 = this;\n\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors'\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files'\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files'\n        },\n        missingRequiredMetaField: 'Missing required meta fields',\n        missingRequiredMetaFieldOnFile: 'Missing required meta fields in %{fileName}',\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: '%{file} exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}'\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        searchImages: 'Search for images',\n        enterTextToSearch: 'Enter text to search for images',\n        backToSearch: 'Back to Search',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    };\n    var defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxTotalFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null,\n        requiredMetaFields: []\n      },\n      meta: {},\n      onBeforeFileAdded: function onBeforeFileAdded(currentFile) {\n        return currentFile;\n      },\n      onBeforeUpload: function onBeforeUpload(files) {\n        return files;\n      },\n      store: DefaultStore(),\n      logger: justErrorsLogger,\n      infoTimeout: 5000\n    }; // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n\n    this.opts = _extends({}, defaultOptions, opts, {\n      restrictions: _extends({}, defaultOptions.restrictions, opts && opts.restrictions)\n    }); // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects â€” we set logger: justErrorsLogger in defaultOptions\n\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger;\n    }\n\n    this.log(\"Using Core v\" + this.constructor.VERSION);\n\n    if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array');\n    }\n\n    this.i18nInit(); // Container for different types of plugins\n\n    this.plugins = {};\n    this.getState = this.getState.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.setFileMeta = this.setFileMeta.bind(this);\n    this.setFileState = this.setFileState.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.hideInfo = this.hideInfo.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.pauseResume = this.pauseResume.bind(this);\n    this.validateRestrictions = this.validateRestrictions.bind(this); // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well\n    //    (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file,\n    //    and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n\n    this.calculateProgress = throttle(this.calculateProgress.bind(this), 500, {\n      leading: true,\n      trailing: true\n    });\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this);\n    this.resetProgress = this.resetProgress.bind(this);\n    this.pauseAll = this.pauseAll.bind(this);\n    this.resumeAll = this.resumeAll.bind(this);\n    this.retryAll = this.retryAll.bind(this);\n    this.cancelAll = this.cancelAll.bind(this);\n    this.retryUpload = this.retryUpload.bind(this);\n    this.upload = this.upload.bind(this);\n    this.emitter = ee();\n    this.on = this.on.bind(this);\n    this.off = this.off.bind(this);\n    this.once = this.emitter.once.bind(this.emitter);\n    this.emit = this.emitter.emit.bind(this.emitter);\n    this.preProcessors = [];\n    this.uploaders = [];\n    this.postProcessors = [];\n    this.store = this.opts.store;\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false\n      },\n      totalProgress: 0,\n      meta: _extends({}, this.opts.meta),\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: ''\n      },\n      recoveredState: null\n    });\n    this.storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {\n      _this4.emit('state-update', prevState, nextState, patch);\n\n      _this4.updateAll(nextState);\n    }); // Exposing uppy object on window for debugging and testing\n\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this;\n    }\n\n    this.addListeners(); // Re-enable if weâ€™ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n  } // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n\n  var _proto = Uppy.prototype;\n\n  _proto.on = function on(event, callback) {\n    this.emitter.on(event, callback);\n    return this;\n  };\n\n  _proto.off = function off(event, callback) {\n    this.emitter.off(event, callback);\n    return this;\n  }\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */\n  ;\n\n  _proto.updateAll = function updateAll(state) {\n    this.iteratePlugins(function (plugin) {\n      plugin.update(state);\n    });\n  }\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */\n  ;\n\n  _proto.setState = function setState(patch) {\n    this.store.setState(patch);\n  }\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */\n  ;\n\n  _proto.getState = function getState() {\n    return this.store.getState();\n  }\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   * @deprecated\n   */\n  ;\n  /**\n   * Shorthand to set state for a specific file.\n   */\n\n\n  _proto.setFileState = function setFileState(fileID, state) {\n    var _extends2;\n\n    if (!this.getState().files[fileID]) {\n      throw new Error(\"Can\\u2019t set state for \" + fileID + \" (the file could have been removed)\");\n    }\n\n    this.setState({\n      files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))\n    });\n  };\n\n  _proto.i18nInit = function i18nInit() {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale]);\n    this.locale = this.translator.locale;\n    this.i18n = this.translator.translate.bind(this.translator);\n    this.i18nArray = this.translator.translateArray.bind(this.translator);\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts, {\n      restrictions: _extends({}, this.opts.restrictions, newOpts && newOpts.restrictions)\n    });\n\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta);\n    }\n\n    this.i18nInit();\n\n    if (newOpts.locale) {\n      this.iteratePlugins(function (plugin) {\n        plugin.setOptions();\n      });\n    } // Note: this is not the preact `setState`, it's an internal function that has the same name.\n\n\n    this.setState(); // so that UI re-renders with new options\n  };\n\n  _proto.resetProgress = function resetProgress() {\n    var defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null\n    };\n\n    var files = _extends({}, this.getState().files);\n\n    var updatedFiles = {};\n    Object.keys(files).forEach(function (fileID) {\n      var updatedFile = _extends({}, files[fileID]);\n\n      updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);\n      updatedFiles[fileID] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0\n    });\n    this.emit('reset-progress');\n  };\n\n  _proto.addPreProcessor = function addPreProcessor(fn) {\n    this.preProcessors.push(fn);\n  };\n\n  _proto.removePreProcessor = function removePreProcessor(fn) {\n    var i = this.preProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addPostProcessor = function addPostProcessor(fn) {\n    this.postProcessors.push(fn);\n  };\n\n  _proto.removePostProcessor = function removePostProcessor(fn) {\n    var i = this.postProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addUploader = function addUploader(fn) {\n    this.uploaders.push(fn);\n  };\n\n  _proto.removeUploader = function removeUploader(fn) {\n    var i = this.uploaders.indexOf(fn);\n\n    if (i !== -1) {\n      this.uploaders.splice(i, 1);\n    }\n  };\n\n  _proto.setMeta = function setMeta(data) {\n    var updatedMeta = _extends({}, this.getState().meta, data);\n\n    var updatedFiles = _extends({}, this.getState().files);\n\n    Object.keys(updatedFiles).forEach(function (fileID) {\n      updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n        meta: _extends({}, updatedFiles[fileID].meta, data)\n      });\n    });\n    this.log('Adding metadata:');\n    this.log(data);\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles\n    });\n  };\n\n  _proto.setFileMeta = function setFileMeta(fileID, data) {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID);\n      return;\n    }\n\n    var newMeta = _extends({}, updatedFiles[fileID].meta, data);\n\n    updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n      meta: newMeta\n    });\n    this.setState({\n      files: updatedFiles\n    });\n  }\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */\n  ;\n\n  _proto.getFile = function getFile(fileID) {\n    return this.getState().files[fileID];\n  }\n  /**\n   * Get all files in an array.\n   */\n  ;\n\n  _proto.getFiles = function getFiles() {\n    var _this$getState = this.getState(),\n        files = _this$getState.files;\n\n    return Object.keys(files).map(function (fileID) {\n      return files[fileID];\n    });\n  }\n  /**\n   * A public wrapper for _checkRestrictions â€” checks if a file passes a set of restrictions.\n   * For use in UI pluigins (like Providers), to disallow selecting files that wonâ€™t pass restrictions.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @returns {object} { result: true/false, reason: why file didnâ€™t pass restrictions }\n   */\n  ;\n\n  _proto.validateRestrictions = function validateRestrictions(file, files) {\n    try {\n      this.checkRestrictions(file, files);\n      return {\n        result: true\n      };\n    } catch (err) {\n      return {\n        result: false,\n        reason: err.message\n      };\n    }\n  }\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @private\n   */\n  ;\n\n  _proto.checkRestrictions = function checkRestrictions(file, files) {\n    if (files === void 0) {\n      files = this.getFiles();\n    }\n\n    var _this$opts$restrictio = this.opts.restrictions,\n        maxFileSize = _this$opts$restrictio.maxFileSize,\n        minFileSize = _this$opts$restrictio.minFileSize,\n        maxTotalFileSize = _this$opts$restrictio.maxTotalFileSize,\n        maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,\n        allowedFileTypes = _this$opts$restrictio.allowedFileTypes;\n\n    if (maxNumberOfFiles) {\n      if (files.length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(\"\" + this.i18n('youCanOnlyUploadX', {\n          smart_count: maxNumberOfFiles\n        }));\n      }\n    }\n\n    if (allowedFileTypes) {\n      var isCorrectFileType = allowedFileTypes.some(function (type) {\n        // check if this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false;\n          return match(file.type.replace(/;.*?$/, ''), type);\n        } // otherwise this is likely an extension\n\n\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase();\n        }\n\n        return false;\n      });\n\n      if (!isCorrectFileType) {\n        var allowedFileTypesString = allowedFileTypes.join(', ');\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {\n          types: allowedFileTypesString\n        }));\n      }\n    } // We can't check maxTotalFileSize if the size is unknown.\n\n\n    if (maxTotalFileSize && file.size != null) {\n      var totalFilesSize = 0;\n      totalFilesSize += file.size;\n      files.forEach(function (f) {\n        totalFilesSize += f.size;\n      });\n\n      if (totalFilesSize > maxTotalFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxTotalFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check maxFileSize if the size is unknown.\n\n\n    if (maxFileSize && file.size != null) {\n      if (file.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check minFileSize if the size is unknown.\n\n\n    if (minFileSize && file.size != null) {\n      if (file.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize)\n        }));\n      }\n    }\n  }\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkMinNumberOfFiles = function checkMinNumberOfFiles(files) {\n    var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;\n\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(\"\" + this.i18n('youHaveToAtLeastSelectX', {\n        smart_count: minNumberOfFiles\n      }));\n    }\n  }\n  /**\n   * Check if requiredMetaField restriction is met before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkRequiredMetaFields = function checkRequiredMetaFields(files) {\n    var requiredMetaFields = this.opts.restrictions.requiredMetaFields;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var errors = [];\n    var fileIDs = Object.keys(files);\n\n    for (var i = 0; i < fileIDs.length; i++) {\n      var file = this.getFile(fileIDs[i]);\n\n      for (var _i = 0; _i < requiredMetaFields.length; _i++) {\n        if (!hasOwnProperty.call(file.meta, requiredMetaFields[_i]) || file.meta[requiredMetaFields[_i]] === '') {\n          var err = new RestrictionError(\"\" + this.i18n('missingRequiredMetaFieldOnFile', {\n            fileName: file.name\n          }));\n          errors.push(err);\n          this.showOrLogErrorAndThrow(err, {\n            file: file,\n            throwErr: false\n          });\n        }\n      }\n    }\n\n    if (errors.length) {\n      throw new AggregateRestrictionError(\"\" + this.i18n('missingRequiredMetaField'), errors);\n    }\n  }\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if itâ€™s a restriction error\n   *\n   * @param {object | string} err â€” Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] â€” Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] â€” File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] â€” Errors shouldnâ€™t be thrown, for example, in `upload-error` event\n   * @private\n   */\n  ;\n\n  _proto.showOrLogErrorAndThrow = function showOrLogErrorAndThrow(err, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$showInformer = _ref.showInformer,\n        showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,\n        _ref$file = _ref.file,\n        file = _ref$file === void 0 ? null : _ref$file,\n        _ref$throwErr = _ref.throwErr,\n        throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;\n\n    var message = typeof err === 'object' ? err.message : err;\n    var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n\n    var logMessageWithDetails = message;\n\n    if (details) {\n      logMessageWithDetails += \" \" + details;\n    }\n\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails);\n      this.emit('restriction-failed', file, err);\n    } else {\n      this.log(logMessageWithDetails, 'error');\n    } // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n\n\n    if (showInformer) {\n      this.info({\n        message: message,\n        details: details\n      }, 'error', this.opts.infoTimeout);\n    }\n\n    if (throwErr) {\n      throw typeof err === 'object' ? err : new Error(err);\n    }\n  };\n\n  _proto.assertNewUploadAllowed = function assertNewUploadAllowed(file) {\n    var _this$getState2 = this.getState(),\n        allowNewUpload = _this$getState2.allowNewUpload;\n\n    if (allowNewUpload === false) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {\n        file: file\n      });\n    }\n  }\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */\n  ;\n\n  _proto.checkAndCreateFileStateObject = function checkAndCreateFileStateObject(files, f) {\n    var fileType = getFileType(f);\n    var file = f;\n    file.type = fileType;\n    var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);\n\n    if (onBeforeFileAddedResult === false) {\n      // Donâ€™t show UI info for this error, as it should be done by the developer\n      this.showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {\n        showInformer: false,\n        file: file\n      });\n    }\n\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult;\n    }\n\n    var fileName;\n\n    if (file.name) {\n      fileName = file.name;\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = fileType.split('/')[0] + \".\" + fileType.split('/')[1];\n    } else {\n      fileName = 'noname';\n    }\n\n    var fileExtension = getFileNameAndExtension(fileName).extension;\n    var isRemote = file.isRemote || false;\n    var fileID = generateFileID(file);\n\n    if (files[fileID] && !files[fileID].isGhost) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {\n        fileName: fileName\n      })), {\n        file: file\n      });\n    }\n\n    var meta = file.meta || {};\n    meta.name = fileName;\n    meta.type = fileType; // `null` means the size is unknown.\n\n    var size = isFinite(file.data.size) ? file.data.size : null;\n    var newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: _extends({}, this.getState().meta, meta),\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null\n      },\n      size: size,\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    };\n\n    try {\n      var filesArray = Object.keys(files).map(function (i) {\n        return files[i];\n      });\n      this.checkRestrictions(newFile, filesArray);\n    } catch (err) {\n      this.showOrLogErrorAndThrow(err, {\n        file: newFile\n      });\n    }\n\n    return newFile;\n  } // Schedule an upload if `autoProceed` is enabled.\n  ;\n\n  _proto.startIfAutoProceed = function startIfAutoProceed() {\n    var _this5 = this;\n\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(function () {\n        _this5.scheduledAutoProceed = null;\n\n        _this5.upload().catch(function (err) {\n          if (!err.isRestriction) {\n            _this5.log(err.stack || err.message || err);\n          }\n        });\n      }, 4);\n    }\n  }\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var _extends3;\n\n    this.assertNewUploadAllowed(file);\n\n    var _this$getState3 = this.getState(),\n        files = _this$getState3.files;\n\n    var newFile = this.checkAndCreateFileStateObject(files, file); // Users are asked to re-select recovered files without data,\n    // and to keep the progress, meta and everthing else, we only replace said data\n\n    if (files[newFile.id] && files[newFile.id].isGhost) {\n      newFile = _extends({}, files[newFile.id], {\n        data: file.data,\n        isGhost: false\n      });\n      this.log(\"Replaced the blob in the restored ghost file: \" + newFile.name + \", \" + newFile.id);\n    }\n\n    this.setState({\n      files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))\n    });\n    this.emit('file-added', newFile);\n    this.emit('files-added', [newFile]);\n    this.log(\"Added file: \" + newFile.name + \", \" + newFile.id + \", mime type: \" + newFile.type);\n    this.startIfAutoProceed();\n    return newFile.id;\n  }\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified.\n   * This is good for UI plugins, but not for programmatic use.\n   * Programmatic users should usually still use `addFile()` on individual files.\n   */\n  ;\n\n  _proto.addFiles = function addFiles(fileDescriptors) {\n    var _this6 = this;\n\n    this.assertNewUploadAllowed(); // create a copy of the files object only once\n\n    var files = _extends({}, this.getState().files);\n\n    var newFiles = [];\n    var errors = [];\n\n    for (var i = 0; i < fileDescriptors.length; i++) {\n      try {\n        var newFile = this.checkAndCreateFileStateObject(files, fileDescriptors[i]); // Users are asked to re-select recovered files without data,\n        // and to keep the progress, meta and everthing else, we only replace said data\n\n        if (files[newFile.id] && files[newFile.id].isGhost) {\n          newFile = _extends({}, files[newFile.id], {\n            data: fileDescriptors[i].data,\n            isGhost: false\n          });\n          this.log(\"Replaced blob in a ghost file: \" + newFile.name + \", \" + newFile.id);\n        }\n\n        files[newFile.id] = newFile;\n        newFiles.push(newFile);\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err);\n        }\n      }\n    }\n\n    this.setState({\n      files: files\n    });\n    newFiles.forEach(function (newFile) {\n      _this6.emit('file-added', newFile);\n    });\n    this.emit('files-added', newFiles);\n\n    if (newFiles.length > 5) {\n      this.log(\"Added batch of \" + newFiles.length + \" files\");\n    } else {\n      Object.keys(newFiles).forEach(function (fileID) {\n        _this6.log(\"Added file: \" + newFiles[fileID].name + \"\\n id: \" + newFiles[fileID].id + \"\\n type: \" + newFiles[fileID].type);\n      });\n    }\n\n    if (newFiles.length > 0) {\n      this.startIfAutoProceed();\n    }\n\n    if (errors.length > 0) {\n      var message = 'Multiple errors occurred while adding files:\\n';\n      errors.forEach(function (subError) {\n        message += \"\\n * \" + subError.message;\n      });\n      this.info({\n        message: this.i18n('addBulkFilesFailed', {\n          smart_count: errors.length\n        }),\n        details: message\n      }, 'error', this.opts.infoTimeout);\n\n      if (typeof AggregateError === 'function') {\n        throw new AggregateError(errors, message);\n      } else {\n        var err = new Error(message);\n        err.errors = errors;\n        throw err;\n      }\n    }\n  };\n\n  _proto.removeFiles = function removeFiles(fileIDs, reason) {\n    var _this7 = this;\n\n    var _this$getState4 = this.getState(),\n        files = _this$getState4.files,\n        currentUploads = _this$getState4.currentUploads;\n\n    var updatedFiles = _extends({}, files);\n\n    var updatedUploads = _extends({}, currentUploads);\n\n    var removedFiles = Object.create(null);\n    fileIDs.forEach(function (fileID) {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID];\n        delete updatedFiles[fileID];\n      }\n    }); // Remove files from the `fileIDs` list in each upload.\n\n    function fileIsNotRemoved(uploadFileID) {\n      return removedFiles[uploadFileID] === undefined;\n    }\n\n    Object.keys(updatedUploads).forEach(function (uploadID) {\n      var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.\n\n      if (newFileIDs.length === 0) {\n        delete updatedUploads[uploadID];\n        return;\n      }\n\n      updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {\n        fileIDs: newFileIDs\n      });\n    });\n    var stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles\n    }; // If all files were removed - allow new uploads,\n    // and clear recoveredState\n\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true;\n      stateUpdate.error = null;\n      stateUpdate.recoveredState = null;\n    }\n\n    this.setState(stateUpdate);\n    this.calculateTotalProgress();\n    var removedFileIDs = Object.keys(removedFiles);\n    removedFileIDs.forEach(function (fileID) {\n      _this7.emit('file-removed', removedFiles[fileID], reason);\n    });\n\n    if (removedFileIDs.length > 5) {\n      this.log(\"Removed \" + removedFileIDs.length + \" files\");\n    } else {\n      this.log(\"Removed files: \" + removedFileIDs.join(', '));\n    }\n  };\n\n  _proto.removeFile = function removeFile(fileID, reason) {\n    if (reason === void 0) {\n      reason = null;\n    }\n\n    this.removeFiles([fileID], reason);\n  };\n\n  _proto.pauseResume = function pauseResume(fileID) {\n    if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {\n      return undefined;\n    }\n\n    var wasPaused = this.getFile(fileID).isPaused || false;\n    var isPaused = !wasPaused;\n    this.setFileState(fileID, {\n      isPaused: isPaused\n    });\n    this.emit('upload-pause', fileID, isPaused);\n    return isPaused;\n  };\n\n  _proto.pauseAll = function pauseAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: true\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('pause-all');\n  };\n\n  _proto.resumeAll = function resumeAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('resume-all');\n  };\n\n  _proto.retryAll = function retryAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var filesToRetry = Object.keys(updatedFiles).filter(function (file) {\n      return updatedFiles[file].error;\n    });\n    filesToRetry.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      error: null\n    });\n    this.emit('retry-all', filesToRetry);\n\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: []\n      });\n    }\n\n    var uploadID = this.createUpload(filesToRetry, {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n    return this.runUpload(uploadID);\n  };\n\n  _proto.cancelAll = function cancelAll() {\n    this.emit('cancel-all');\n\n    var _this$getState5 = this.getState(),\n        files = _this$getState5.files;\n\n    var fileIDs = Object.keys(files);\n\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all');\n    }\n\n    this.setState({\n      totalProgress: 0,\n      error: null,\n      recoveredState: null\n    });\n  };\n\n  _proto.retryUpload = function retryUpload(fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false\n    });\n    this.emit('upload-retry', fileID);\n    var uploadID = this.createUpload([fileID], {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n    return this.runUpload(uploadID);\n  };\n\n  _proto.reset = function reset() {\n    this.cancelAll();\n  };\n\n  _proto.logout = function logout() {\n    this.iteratePlugins(function (plugin) {\n      if (plugin.provider && plugin.provider.logout) {\n        plugin.provider.logout();\n      }\n    });\n  };\n\n  _proto.calculateProgress = function calculateProgress(file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(\"Not setting progress for a file that has been removed: \" + file.id);\n      return;\n    } // bytesTotal may be null or zero; in that case we can't divide by it\n\n\n    var canHavePercentage = isFinite(data.bytesTotal) && data.bytesTotal > 0;\n    this.setFileState(file.id, {\n      progress: _extends({}, this.getFile(file.id).progress, {\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n        // we get more accurate calculations if we don't round this at all.\n        ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0\n      })\n    });\n    this.calculateTotalProgress();\n  };\n\n  _proto.calculateTotalProgress = function calculateTotalProgress() {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    var files = this.getFiles();\n    var inProgress = files.filter(function (file) {\n      return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;\n    });\n\n    if (inProgress.length === 0) {\n      this.emit('progress', 0);\n      this.setState({\n        totalProgress: 0\n      });\n      return;\n    }\n\n    var sizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal != null;\n    });\n    var unsizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal == null;\n    });\n\n    if (sizedFiles.length === 0) {\n      var progressMax = inProgress.length * 100;\n      var currentProgress = unsizedFiles.reduce(function (acc, file) {\n        return acc + file.progress.percentage;\n      }, 0);\n\n      var _totalProgress = Math.round(currentProgress / progressMax * 100);\n\n      this.setState({\n        totalProgress: _totalProgress\n      });\n      return;\n    }\n\n    var totalSize = sizedFiles.reduce(function (acc, file) {\n      return acc + file.progress.bytesTotal;\n    }, 0);\n    var averageSize = totalSize / sizedFiles.length;\n    totalSize += averageSize * unsizedFiles.length;\n    var uploadedSize = 0;\n    sizedFiles.forEach(function (file) {\n      uploadedSize += file.progress.bytesUploaded;\n    });\n    unsizedFiles.forEach(function (file) {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100;\n    });\n    var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n\n    if (totalProgress > 100) {\n      totalProgress = 100;\n    }\n\n    this.setState({\n      totalProgress: totalProgress\n    });\n    this.emit('progress', totalProgress);\n  }\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */\n  ;\n\n  _proto.addListeners = function addListeners() {\n    var _this8 = this;\n    /**\n     * @param {Error} error\n     * @param {object} [file]\n     * @param {object} [response]\n     */\n\n\n    var errorHandler = function errorHandler(error, file, response) {\n      var errorMsg = error.message || 'Unknown error';\n\n      if (error.details) {\n        errorMsg += \" \" + error.details;\n      }\n\n      _this8.setState({\n        error: errorMsg\n      }); // When a file is also given, we store the error on the file object.\n\n\n      if (file != null && typeof file.id === 'string') {\n        _this8.setFileState(file.id, {\n          error: errorMsg,\n          response: response\n        });\n      }\n    };\n\n    this.on('error', errorHandler);\n    this.on('upload-error', function (file, error, response) {\n      errorHandler(error, file, response);\n\n      if (typeof error === 'object' && error.message) {\n        var newError = new Error(error.message);\n        newError.details = error.message;\n\n        if (error.details) {\n          newError.details += \" \" + error.details;\n        }\n\n        newError.message = _this8.i18n('failedToUpload', {\n          file: file.name\n        });\n\n        _this8.showOrLogErrorAndThrow(newError, {\n          throwErr: false\n        });\n      } else {\n        _this8.showOrLogErrorAndThrow(error, {\n          throwErr: false\n        });\n      }\n    });\n    this.on('upload', function () {\n      _this8.setState({\n        error: null\n      });\n    });\n    this.on('upload-started', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size\n        }\n      });\n    });\n    this.on('upload-progress', this.calculateProgress);\n    this.on('upload-success', function (file, uploadResp) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var currentProgress = _this8.getFile(file.id).progress;\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, currentProgress, {\n          postprocess: _this8.postProcessors.length > 0 ? {\n            mode: 'indeterminate'\n          } : null,\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal\n        }),\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false\n      }); // Remote providers sometimes don't tell us the file size,\n      // but we can know how many bytes we uploaded once the upload is complete.\n\n\n      if (file.size == null) {\n        _this8.setFileState(file.id, {\n          size: uploadResp.bytesUploaded || currentProgress.bytesTotal\n        });\n      }\n\n      _this8.calculateTotalProgress();\n    });\n    this.on('preprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getFile(file.id).progress, {\n          preprocess: progress\n        })\n      });\n    });\n    this.on('preprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this8.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.preprocess;\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('postprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getState().files[file.id].progress, {\n          postprocess: progress\n        })\n      });\n    });\n    this.on('postprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this8.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is uploadâ€¦fully completeâ€¦rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('restored', function () {\n      // Files may have changed--ensure progress is still accurate.\n      _this8.calculateTotalProgress();\n    }); // show informer if offline\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', function () {\n        return _this8.updateOnlineStatus();\n      });\n      window.addEventListener('offline', function () {\n        return _this8.updateOnlineStatus();\n      });\n      setTimeout(function () {\n        return _this8.updateOnlineStatus();\n      }, 3000);\n    }\n  };\n\n  _proto.updateOnlineStatus = function updateOnlineStatus() {\n    var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;\n\n    if (!online) {\n      this.emit('is-offline');\n      this.info(this.i18n('noInternetConnection'), 'error', 0);\n      this.wasOffline = true;\n    } else {\n      this.emit('is-online');\n\n      if (this.wasOffline) {\n        this.emit('back-online');\n        this.info(this.i18n('connectedToInternet'), 'success', 3000);\n        this.wasOffline = false;\n      }\n    }\n  };\n\n  _proto.getID = function getID() {\n    return this.opts.id;\n  }\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  // eslint-disable-next-line no-shadow\n  ;\n\n  _proto.use = function use(Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      var msg = \"Expected a plugin class, but got \" + (Plugin === null ? 'null' : typeof Plugin) + \".\" + ' Please verify that the plugin was imported and spelled correctly.';\n      throw new TypeError(msg);\n    } // Instantiate\n\n\n    var plugin = new Plugin(this, opts);\n    var pluginId = plugin.id;\n    this.plugins[plugin.type] = this.plugins[plugin.type] || [];\n\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id');\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type');\n    }\n\n    var existsPluginAlready = this.getPlugin(pluginId);\n\n    if (existsPluginAlready) {\n      var _msg = \"Already found a plugin named '\" + existsPluginAlready.id + \"'. \" + (\"Tried to use: '\" + pluginId + \"'.\\n\") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';\n\n      throw new Error(_msg);\n    }\n\n    if (Plugin.VERSION) {\n      this.log(\"Using \" + pluginId + \" v\" + Plugin.VERSION);\n    }\n\n    this.plugins[plugin.type].push(plugin);\n    plugin.install();\n    return this;\n  }\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */\n  ;\n\n  _proto.getPlugin = function getPlugin(id) {\n    var foundPlugin = null;\n    this.iteratePlugins(function (plugin) {\n      if (plugin.id === id) {\n        foundPlugin = plugin;\n        return false;\n      }\n    });\n    return foundPlugin;\n  }\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */\n  ;\n\n  _proto.iteratePlugins = function iteratePlugins(method) {\n    var _this9 = this;\n\n    Object.keys(this.plugins).forEach(function (pluginType) {\n      _this9.plugins[pluginType].forEach(method);\n    });\n  }\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */\n  ;\n\n  _proto.removePlugin = function removePlugin(instance) {\n    var _extends4;\n\n    this.log(\"Removing plugin \" + instance.id);\n    this.emit('plugin-remove', instance);\n\n    if (instance.uninstall) {\n      instance.uninstall();\n    }\n\n    var list = this.plugins[instance.type].slice(); // list.indexOf failed here, because Vue3 converted the plugin instance\n    // to a Proxy object, which failed the strict comparison test:\n    // obj !== objProxy\n\n    var index = findIndex(list, function (item) {\n      return item.id === instance.id;\n    });\n\n    if (index !== -1) {\n      list.splice(index, 1);\n      this.plugins[instance.type] = list;\n    }\n\n    var state = this.getState();\n    var updatedState = {\n      plugins: _extends({}, state.plugins, (_extends4 = {}, _extends4[instance.id] = undefined, _extends4))\n    };\n    this.setState(updatedState);\n  }\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  ;\n\n  _proto.close = function close() {\n    var _this10 = this;\n\n    this.log(\"Closing Uppy instance \" + this.opts.id + \": removing all files and uninstalling plugins\");\n    this.reset();\n    this.storeUnsubscribe();\n    this.iteratePlugins(function (plugin) {\n      _this10.removePlugin(plugin);\n    });\n  }\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */\n  ;\n\n  _proto.info = function info(message, type, duration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (duration === void 0) {\n      duration = 3000;\n    }\n\n    var isComplexMessage = typeof message === 'object';\n    this.setState({\n      info: {\n        isHidden: false,\n        type: type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null\n      }\n    });\n    this.emit('info-visible');\n    clearTimeout(this.infoTimeoutID);\n\n    if (duration === 0) {\n      this.infoTimeoutID = undefined;\n      return;\n    } // hide the informer after `duration` milliseconds\n\n\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration);\n  };\n\n  _proto.hideInfo = function hideInfo() {\n    var newInfo = _extends({}, this.getState().info, {\n      isHidden: true\n    });\n\n    this.setState({\n      info: newInfo\n    });\n    this.emit('info-hidden');\n  }\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */\n  ;\n\n  _proto.log = function log(message, type) {\n    var logger = this.opts.logger;\n\n    switch (type) {\n      case 'error':\n        logger.error(message);\n        break;\n\n      case 'warning':\n        logger.warn(message);\n        break;\n\n      default:\n        logger.debug(message);\n        break;\n    }\n  }\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */\n  ;\n\n  _proto.run = function run() {\n    this.log('Calling run() is no longer necessary.', 'warning');\n    return this;\n  }\n  /**\n   * Restore an upload by its ID.\n   */\n  ;\n\n  _proto.restore = function restore(uploadID) {\n    this.log(\"Core: attempting to restore upload \\\"\" + uploadID + \"\\\"\");\n\n    if (!this.getState().currentUploads[uploadID]) {\n      this.removeUpload(uploadID);\n      return Promise.reject(new Error('Nonexistent upload'));\n    }\n\n    return this.runUpload(uploadID);\n  }\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */\n  ;\n\n  _proto.createUpload = function createUpload(fileIDs, opts) {\n    var _extends5;\n\n    if (opts === void 0) {\n      opts = {};\n    } // uppy.retryAll sets this to true â€” when retrying we want to ignore `allowNewUpload: false`\n\n\n    var _opts = opts,\n        _opts$forceAllowNewUp = _opts.forceAllowNewUpload,\n        forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;\n\n    var _this$getState6 = this.getState(),\n        allowNewUpload = _this$getState6.allowNewUpload,\n        currentUploads = _this$getState6.currentUploads;\n\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.');\n    }\n\n    var uploadID = cuid();\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs: fileIDs\n    });\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n      currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = {\n        fileIDs: fileIDs,\n        step: 0,\n        result: {}\n      }, _extends5))\n    });\n    return uploadID;\n  };\n\n  _proto.getUpload = function getUpload(uploadID) {\n    var _this$getState7 = this.getState(),\n        currentUploads = _this$getState7.currentUploads;\n\n    return currentUploads[uploadID];\n  }\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */\n  ;\n\n  _proto.addResultData = function addResultData(uploadID, data) {\n    var _extends6;\n\n    if (!this.getUpload(uploadID)) {\n      this.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      return;\n    }\n\n    var _this$getState8 = this.getState(),\n        currentUploads = _this$getState8.currentUploads;\n\n    var currentUpload = _extends({}, currentUploads[uploadID], {\n      result: _extends({}, currentUploads[uploadID].result, data)\n    });\n\n    this.setState({\n      currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = currentUpload, _extends6))\n    });\n  }\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */\n  ;\n\n  _proto.removeUpload = function removeUpload(uploadID) {\n    var currentUploads = _extends({}, this.getState().currentUploads);\n\n    delete currentUploads[uploadID];\n    this.setState({\n      currentUploads: currentUploads\n    });\n  }\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */\n  ;\n\n  _proto.runUpload = function runUpload(uploadID) {\n    var _this11 = this;\n\n    var uploadData = this.getState().currentUploads[uploadID];\n    var restoreStep = uploadData.step;\n    var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);\n    var lastStep = Promise.resolve();\n    steps.forEach(function (fn, step) {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return;\n      }\n\n      lastStep = lastStep.then(function () {\n        var _extends7;\n\n        var _this11$getState = _this11.getState(),\n            currentUploads = _this11$getState.currentUploads;\n\n        var currentUpload = currentUploads[uploadID];\n\n        if (!currentUpload) {\n          return;\n        }\n\n        var updatedUpload = _extends({}, currentUpload, {\n          step: step\n        });\n\n        _this11.setState({\n          currentUploads: _extends({}, currentUploads, (_extends7 = {}, _extends7[uploadID] = updatedUpload, _extends7))\n        }); // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n        // eslint-disable-next-line consistent-return\n\n\n        return fn(updatedUpload.fileIDs, uploadID);\n      }).then(function () {\n        return null;\n      });\n    }); // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n\n    lastStep.catch(function (err) {\n      _this11.emit('error', err);\n\n      _this11.removeUpload(uploadID);\n    });\n    return lastStep.then(function () {\n      // Set result data.\n      var _this11$getState2 = _this11.getState(),\n          currentUploads = _this11$getState2.currentUploads;\n\n      var currentUpload = currentUploads[uploadID];\n\n      if (!currentUpload) {\n        return;\n      } // Mark postprocessing step as complete if necessary; this addresses a case where we might get\n      // stuck in the postprocessing UI while the upload is fully complete.\n      // If the postprocessing steps do not do any work, they may not emit postprocessing events at\n      // all, and never mark the postprocessing as complete. This is fine on its own but we\n      // introduced code in the @uppy/core upload-success handler to prepare postprocessing progress\n      // state if any postprocessors are registered. That is to avoid a \"flash of completed state\"\n      // before the postprocessing plugins can emit events.\n      //\n      // So, just in case an upload with postprocessing plugins *has* completed *without* emitting\n      // postprocessing completion, we do it instead.\n\n\n      currentUpload.fileIDs.forEach(function (fileID) {\n        var file = _this11.getFile(fileID);\n\n        if (file && file.progress.postprocess) {\n          _this11.emit('postprocess-complete', file);\n        }\n      });\n      var files = currentUpload.fileIDs.map(function (fileID) {\n        return _this11.getFile(fileID);\n      });\n      var successful = files.filter(function (file) {\n        return !file.error;\n      });\n      var failed = files.filter(function (file) {\n        return file.error;\n      });\n\n      _this11.addResultData(uploadID, {\n        successful: successful,\n        failed: failed,\n        uploadID: uploadID\n      });\n    }).then(function () {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      var _this11$getState3 = _this11.getState(),\n          currentUploads = _this11$getState3.currentUploads;\n\n      if (!currentUploads[uploadID]) {\n        return;\n      }\n\n      var currentUpload = currentUploads[uploadID];\n      var result = currentUpload.result;\n\n      _this11.emit('complete', result);\n\n      _this11.removeUpload(uploadID); // eslint-disable-next-line consistent-return\n\n\n      return result;\n    }).then(function (result) {\n      if (result == null) {\n        _this11.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.upload = function upload() {\n    var _this12 = this;\n\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning');\n    }\n\n    var _this$getState9 = this.getState(),\n        files = _this$getState9.files;\n\n    var onBeforeUploadResult = this.opts.onBeforeUpload(files);\n\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));\n    }\n\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n\n      this.setState({\n        files: files\n      });\n    }\n\n    return Promise.resolve().then(function () {\n      _this12.checkMinNumberOfFiles(files);\n\n      _this12.checkRequiredMetaFields(files);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err);\n    }).then(function () {\n      var _this12$getState = _this12.getState(),\n          currentUploads = _this12$getState.currentUploads; // get a list of files that are currently assigned to uploads\n\n\n      var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {\n        return prev.concat(currentUploads[curr].fileIDs);\n      }, []);\n      var waitingFileIDs = [];\n      Object.keys(files).forEach(function (fileID) {\n        var file = _this12.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..\n\n\n        if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {\n          waitingFileIDs.push(file.id);\n        }\n      });\n\n      var uploadID = _this12.createUpload(waitingFileIDs);\n\n      return _this12.runUpload(uploadID);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err, {\n        showInformer: false\n      });\n    });\n  };\n\n  _createClass(Uppy, [{\n    key: \"state\",\n    get: function get() {\n      // Here, state is a non-enumerable property.\n      return this.getState();\n    }\n  }]);\n\n  return Uppy;\n}();\n\nUppy.VERSION = \"1.20.1\";\n\nmodule.exports = function core(opts) {\n  return new Uppy(opts);\n}; // Expose class constructor.\n\n\nmodule.exports.Uppy = Uppy;\nmodule.exports.Plugin = Plugin;\nmodule.exports.debugLogger = debugLogger;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/@uppy/core/lib/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","_wrapNativeSuper","Class","_cache","Map","undefined","_isNativeFunction","TypeError","has","get","set","Wrapper","_construct","_getPrototypeOf","value","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","push","Function","bind","instance","sham","Proxy","Boolean","valueOf","e","fn","toString","indexOf","o","p","setPrototypeOf","__proto__","getPrototypeOf","Translator","require","ee","cuid","throttle","prettierBytes","match","DefaultStore","getFileType","getFileNameAndExtension","generateFileID","findIndex","supportsUploadProgress","_require","justErrorsLogger","debugLogger","Plugin","RestrictionError","_Error","_this","_len","Array","_key","concat","isRestriction","Error","AggregateError","_Error2","message","errors","_this2","AggregateRestrictionError","_AggregateError","_this3","_len2","_key2","Uppy","opts","_this4","defaultLocale","strings","addBulkFilesFailed","youCanOnlyUploadX","youHaveToAtLeastSelectX","missingRequiredMetaField","missingRequiredMetaFieldOnFile","exceedsSize2","exceedsSize","inferiorSize","youCanOnlyUploadFileTypes","noNewAlreadyUploading","noDuplicates","companionError","companionUnauthorizeHint","failedToUpload","noInternetConnection","connectedToInternet","noFilesFound","selectX","selectAllFilesFromFolderNamed","unselectAllFilesFromFolderNamed","selectFileNamed","unselectFileNamed","openFolderNamed","cancel","logOut","filter","resetFilter","loading","authenticateWithTitle","authenticateWith","searchImages","enterTextToSearch","backToSearch","emptyFolderAdded","folderAdded","defaultOptions","id","autoProceed","allowMultipleUploads","debug","restrictions","maxFileSize","minFileSize","maxTotalFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","requiredMetaFields","meta","onBeforeFileAdded","currentFile","onBeforeUpload","files","store","logger","infoTimeout","log","VERSION","isArray","i18nInit","plugins","getState","getPlugin","setFileMeta","setFileState","info","hideInfo","addFile","removeFile","pauseResume","validateRestrictions","calculateProgress","leading","trailing","updateOnlineStatus","resetProgress","pauseAll","resumeAll","retryAll","cancelAll","retryUpload","upload","emitter","on","off","once","emit","preProcessors","uploaders","postProcessors","setState","currentUploads","allowNewUpload","capabilities","uploadProgress","individualCancellation","resumableUploads","totalProgress","isHidden","type","recoveredState","storeUnsubscribe","subscribe","prevState","nextState","patch","updateAll","window","addListeners","_proto","event","callback","state","iteratePlugins","plugin","update","fileID","_extends2","translator","locale","i18n","translate","i18nArray","translateArray","setOptions","newOpts","setMeta","defaultProgress","percentage","bytesUploaded","uploadComplete","uploadStarted","updatedFiles","keys","forEach","updatedFile","progress","addPreProcessor","removePreProcessor","splice","addPostProcessor","removePostProcessor","addUploader","removeUploader","data","updatedMeta","newMeta","getFile","getFiles","_this$getState","map","file","checkRestrictions","result","err","reason","_this$opts$restrictio","smart_count","isCorrectFileType","some","replace","extension","toLowerCase","substr","allowedFileTypesString","join","types","size","totalFilesSize","f","backwardsCompat","name","checkMinNumberOfFiles","checkRequiredMetaFields","fileIDs","_i","fileName","showOrLogErrorAndThrow","throwErr","_temp","_ref","_ref$showInformer","showInformer","_ref$file","_ref$throwErr","details","logMessageWithDetails","assertNewUploadAllowed","_this$getState2","checkAndCreateFileStateObject","fileType","onBeforeFileAddedResult","split","fileExtension","isRemote","isGhost","isFinite","newFile","bytesTotal","remote","preview","filesArray","startIfAutoProceed","_this5","scheduledAutoProceed","setTimeout","catch","stack","_extends3","_this$getState3","addFiles","fileDescriptors","_this6","newFiles","subError","removeFiles","_this7","_this$getState4","updatedUploads","removedFiles","fileIsNotRemoved","uploadFileID","uploadID","newFileIDs","stateUpdate","error","calculateTotalProgress","removedFileIDs","wasPaused","isPaused","inProgressUpdatedFiles","filesToRetry","Promise","resolve","successful","failed","createUpload","forceAllowNewUpload","runUpload","_this$getState5","reset","logout","provider","canHavePercentage","Math","round","inProgress","preprocess","postprocess","sizedFiles","unsizedFiles","progressMax","currentProgress","reduce","acc","_totalProgress","totalSize","averageSize","uploadedSize","_this8","errorHandler","response","errorMsg","newError","Date","now","uploadResp","mode","uploadURL","addEventListener","online","navigator","onLine","wasOffline","getID","use","msg","pluginId","existsPluginAlready","_msg","install","foundPlugin","method","_this9","pluginType","removePlugin","_extends4","uninstall","list","slice","index","item","updatedState","close","_this10","duration","isComplexMessage","clearTimeout","infoTimeoutID","newInfo","warn","run","restore","removeUpload","reject","_extends5","_opts","_opts$forceAllowNewUp","_this$getState6","step","getUpload","_this$getState7","addResultData","_extends6","_this$getState8","currentUpload","_this11","uploadData","restoreStep","steps","lastStep","then","_extends7","_this11$getState","updatedUpload","_this11$getState2","_this11$getState3","_this12","uploader","_this$getState9","onBeforeUploadResult","_this12$getState","currentlyUploadingFiles","prev","curr","waitingFileIDs","module","exports","core"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* global AggregateError */\nvar Translator = require('@uppy/utils/lib/Translator');\n\nvar ee = require('namespace-emitter');\n\nvar cuid = require('cuid');\n\nvar throttle = require('lodash.throttle');\n\nvar prettierBytes = require('@transloadit/prettier-bytes');\n\nvar match = require('mime-match');\n\nvar DefaultStore = require('@uppy/store-default');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar findIndex = require('@uppy/utils/lib/findIndex');\n\nvar supportsUploadProgress = require('./supportsUploadProgress');\n\nvar _require = require('./loggers'),\n    justErrorsLogger = _require.justErrorsLogger,\n    debugLogger = _require.debugLogger;\n\nvar Plugin = require('./Plugin'); // Exported from here.\n\n\nvar RestrictionError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RestrictionError, _Error);\n\n  function RestrictionError() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Error.call.apply(_Error, [this].concat(args)) || this;\n    _this.isRestriction = true;\n    return _this;\n  }\n\n  return RestrictionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nif (typeof AggregateError === 'undefined') {\n  // eslint-disable-next-line no-global-assign\n  AggregateError = /*#__PURE__*/function (_Error2) {\n    _inheritsLoose(AggregateError, _Error2);\n\n    function AggregateError(message, errors) {\n      var _this2;\n\n      _this2 = _Error2.call(this, message) || this;\n      _this2.errors = errors;\n      return _this2;\n    }\n\n    return AggregateError;\n  }( /*#__PURE__*/_wrapNativeSuper(Error));\n}\n\nvar AggregateRestrictionError = /*#__PURE__*/function (_AggregateError) {\n  _inheritsLoose(AggregateRestrictionError, _AggregateError);\n\n  function AggregateRestrictionError() {\n    var _this3;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _AggregateError.call.apply(_AggregateError, [this].concat(args)) || this;\n    _this3.isRestriction = true;\n    return _this3;\n  }\n\n  return AggregateRestrictionError;\n}(AggregateError);\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\n\n\nvar Uppy = /*#__PURE__*/function () {\n  // eslint-disable-next-line global-require\n\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts â€” Uppy options\n   */\n  function Uppy(opts) {\n    var _this4 = this;\n\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors'\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files'\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files'\n        },\n        missingRequiredMetaField: 'Missing required meta fields',\n        missingRequiredMetaFieldOnFile: 'Missing required meta fields in %{fileName}',\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: '%{file} exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}'\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        searchImages: 'Search for images',\n        enterTextToSearch: 'Enter text to search for images',\n        backToSearch: 'Back to Search',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    };\n    var defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxTotalFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null,\n        requiredMetaFields: []\n      },\n      meta: {},\n      onBeforeFileAdded: function onBeforeFileAdded(currentFile) {\n        return currentFile;\n      },\n      onBeforeUpload: function onBeforeUpload(files) {\n        return files;\n      },\n      store: DefaultStore(),\n      logger: justErrorsLogger,\n      infoTimeout: 5000\n    }; // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n\n    this.opts = _extends({}, defaultOptions, opts, {\n      restrictions: _extends({}, defaultOptions.restrictions, opts && opts.restrictions)\n    }); // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects â€” we set logger: justErrorsLogger in defaultOptions\n\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger;\n    }\n\n    this.log(\"Using Core v\" + this.constructor.VERSION);\n\n    if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array');\n    }\n\n    this.i18nInit(); // Container for different types of plugins\n\n    this.plugins = {};\n    this.getState = this.getState.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.setFileMeta = this.setFileMeta.bind(this);\n    this.setFileState = this.setFileState.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.hideInfo = this.hideInfo.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.pauseResume = this.pauseResume.bind(this);\n    this.validateRestrictions = this.validateRestrictions.bind(this); // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well\n    //    (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file,\n    //    and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n\n    this.calculateProgress = throttle(this.calculateProgress.bind(this), 500, {\n      leading: true,\n      trailing: true\n    });\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this);\n    this.resetProgress = this.resetProgress.bind(this);\n    this.pauseAll = this.pauseAll.bind(this);\n    this.resumeAll = this.resumeAll.bind(this);\n    this.retryAll = this.retryAll.bind(this);\n    this.cancelAll = this.cancelAll.bind(this);\n    this.retryUpload = this.retryUpload.bind(this);\n    this.upload = this.upload.bind(this);\n    this.emitter = ee();\n    this.on = this.on.bind(this);\n    this.off = this.off.bind(this);\n    this.once = this.emitter.once.bind(this.emitter);\n    this.emit = this.emitter.emit.bind(this.emitter);\n    this.preProcessors = [];\n    this.uploaders = [];\n    this.postProcessors = [];\n    this.store = this.opts.store;\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false\n      },\n      totalProgress: 0,\n      meta: _extends({}, this.opts.meta),\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: ''\n      },\n      recoveredState: null\n    });\n    this.storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {\n      _this4.emit('state-update', prevState, nextState, patch);\n\n      _this4.updateAll(nextState);\n    }); // Exposing uppy object on window for debugging and testing\n\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this;\n    }\n\n    this.addListeners(); // Re-enable if weâ€™ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n  } // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n\n  var _proto = Uppy.prototype;\n\n  _proto.on = function on(event, callback) {\n    this.emitter.on(event, callback);\n    return this;\n  };\n\n  _proto.off = function off(event, callback) {\n    this.emitter.off(event, callback);\n    return this;\n  }\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */\n  ;\n\n  _proto.updateAll = function updateAll(state) {\n    this.iteratePlugins(function (plugin) {\n      plugin.update(state);\n    });\n  }\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */\n  ;\n\n  _proto.setState = function setState(patch) {\n    this.store.setState(patch);\n  }\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */\n  ;\n\n  _proto.getState = function getState() {\n    return this.store.getState();\n  }\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   * @deprecated\n   */\n  ;\n\n  /**\n   * Shorthand to set state for a specific file.\n   */\n  _proto.setFileState = function setFileState(fileID, state) {\n    var _extends2;\n\n    if (!this.getState().files[fileID]) {\n      throw new Error(\"Can\\u2019t set state for \" + fileID + \" (the file could have been removed)\");\n    }\n\n    this.setState({\n      files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))\n    });\n  };\n\n  _proto.i18nInit = function i18nInit() {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale]);\n    this.locale = this.translator.locale;\n    this.i18n = this.translator.translate.bind(this.translator);\n    this.i18nArray = this.translator.translateArray.bind(this.translator);\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts, {\n      restrictions: _extends({}, this.opts.restrictions, newOpts && newOpts.restrictions)\n    });\n\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta);\n    }\n\n    this.i18nInit();\n\n    if (newOpts.locale) {\n      this.iteratePlugins(function (plugin) {\n        plugin.setOptions();\n      });\n    } // Note: this is not the preact `setState`, it's an internal function that has the same name.\n\n\n    this.setState(); // so that UI re-renders with new options\n  };\n\n  _proto.resetProgress = function resetProgress() {\n    var defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null\n    };\n\n    var files = _extends({}, this.getState().files);\n\n    var updatedFiles = {};\n    Object.keys(files).forEach(function (fileID) {\n      var updatedFile = _extends({}, files[fileID]);\n\n      updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);\n      updatedFiles[fileID] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0\n    });\n    this.emit('reset-progress');\n  };\n\n  _proto.addPreProcessor = function addPreProcessor(fn) {\n    this.preProcessors.push(fn);\n  };\n\n  _proto.removePreProcessor = function removePreProcessor(fn) {\n    var i = this.preProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addPostProcessor = function addPostProcessor(fn) {\n    this.postProcessors.push(fn);\n  };\n\n  _proto.removePostProcessor = function removePostProcessor(fn) {\n    var i = this.postProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addUploader = function addUploader(fn) {\n    this.uploaders.push(fn);\n  };\n\n  _proto.removeUploader = function removeUploader(fn) {\n    var i = this.uploaders.indexOf(fn);\n\n    if (i !== -1) {\n      this.uploaders.splice(i, 1);\n    }\n  };\n\n  _proto.setMeta = function setMeta(data) {\n    var updatedMeta = _extends({}, this.getState().meta, data);\n\n    var updatedFiles = _extends({}, this.getState().files);\n\n    Object.keys(updatedFiles).forEach(function (fileID) {\n      updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n        meta: _extends({}, updatedFiles[fileID].meta, data)\n      });\n    });\n    this.log('Adding metadata:');\n    this.log(data);\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles\n    });\n  };\n\n  _proto.setFileMeta = function setFileMeta(fileID, data) {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID);\n      return;\n    }\n\n    var newMeta = _extends({}, updatedFiles[fileID].meta, data);\n\n    updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n      meta: newMeta\n    });\n    this.setState({\n      files: updatedFiles\n    });\n  }\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */\n  ;\n\n  _proto.getFile = function getFile(fileID) {\n    return this.getState().files[fileID];\n  }\n  /**\n   * Get all files in an array.\n   */\n  ;\n\n  _proto.getFiles = function getFiles() {\n    var _this$getState = this.getState(),\n        files = _this$getState.files;\n\n    return Object.keys(files).map(function (fileID) {\n      return files[fileID];\n    });\n  }\n  /**\n   * A public wrapper for _checkRestrictions â€” checks if a file passes a set of restrictions.\n   * For use in UI pluigins (like Providers), to disallow selecting files that wonâ€™t pass restrictions.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @returns {object} { result: true/false, reason: why file didnâ€™t pass restrictions }\n   */\n  ;\n\n  _proto.validateRestrictions = function validateRestrictions(file, files) {\n    try {\n      this.checkRestrictions(file, files);\n      return {\n        result: true\n      };\n    } catch (err) {\n      return {\n        result: false,\n        reason: err.message\n      };\n    }\n  }\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @private\n   */\n  ;\n\n  _proto.checkRestrictions = function checkRestrictions(file, files) {\n    if (files === void 0) {\n      files = this.getFiles();\n    }\n\n    var _this$opts$restrictio = this.opts.restrictions,\n        maxFileSize = _this$opts$restrictio.maxFileSize,\n        minFileSize = _this$opts$restrictio.minFileSize,\n        maxTotalFileSize = _this$opts$restrictio.maxTotalFileSize,\n        maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,\n        allowedFileTypes = _this$opts$restrictio.allowedFileTypes;\n\n    if (maxNumberOfFiles) {\n      if (files.length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(\"\" + this.i18n('youCanOnlyUploadX', {\n          smart_count: maxNumberOfFiles\n        }));\n      }\n    }\n\n    if (allowedFileTypes) {\n      var isCorrectFileType = allowedFileTypes.some(function (type) {\n        // check if this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false;\n          return match(file.type.replace(/;.*?$/, ''), type);\n        } // otherwise this is likely an extension\n\n\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase();\n        }\n\n        return false;\n      });\n\n      if (!isCorrectFileType) {\n        var allowedFileTypesString = allowedFileTypes.join(', ');\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {\n          types: allowedFileTypesString\n        }));\n      }\n    } // We can't check maxTotalFileSize if the size is unknown.\n\n\n    if (maxTotalFileSize && file.size != null) {\n      var totalFilesSize = 0;\n      totalFilesSize += file.size;\n      files.forEach(function (f) {\n        totalFilesSize += f.size;\n      });\n\n      if (totalFilesSize > maxTotalFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxTotalFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check maxFileSize if the size is unknown.\n\n\n    if (maxFileSize && file.size != null) {\n      if (file.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check minFileSize if the size is unknown.\n\n\n    if (minFileSize && file.size != null) {\n      if (file.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize)\n        }));\n      }\n    }\n  }\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkMinNumberOfFiles = function checkMinNumberOfFiles(files) {\n    var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;\n\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(\"\" + this.i18n('youHaveToAtLeastSelectX', {\n        smart_count: minNumberOfFiles\n      }));\n    }\n  }\n  /**\n   * Check if requiredMetaField restriction is met before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkRequiredMetaFields = function checkRequiredMetaFields(files) {\n    var requiredMetaFields = this.opts.restrictions.requiredMetaFields;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var errors = [];\n    var fileIDs = Object.keys(files);\n\n    for (var i = 0; i < fileIDs.length; i++) {\n      var file = this.getFile(fileIDs[i]);\n\n      for (var _i = 0; _i < requiredMetaFields.length; _i++) {\n        if (!hasOwnProperty.call(file.meta, requiredMetaFields[_i]) || file.meta[requiredMetaFields[_i]] === '') {\n          var err = new RestrictionError(\"\" + this.i18n('missingRequiredMetaFieldOnFile', {\n            fileName: file.name\n          }));\n          errors.push(err);\n          this.showOrLogErrorAndThrow(err, {\n            file: file,\n            throwErr: false\n          });\n        }\n      }\n    }\n\n    if (errors.length) {\n      throw new AggregateRestrictionError(\"\" + this.i18n('missingRequiredMetaField'), errors);\n    }\n  }\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if itâ€™s a restriction error\n   *\n   * @param {object | string} err â€” Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] â€” Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] â€” File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] â€” Errors shouldnâ€™t be thrown, for example, in `upload-error` event\n   * @private\n   */\n  ;\n\n  _proto.showOrLogErrorAndThrow = function showOrLogErrorAndThrow(err, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$showInformer = _ref.showInformer,\n        showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,\n        _ref$file = _ref.file,\n        file = _ref$file === void 0 ? null : _ref$file,\n        _ref$throwErr = _ref.throwErr,\n        throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;\n\n    var message = typeof err === 'object' ? err.message : err;\n    var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n\n    var logMessageWithDetails = message;\n\n    if (details) {\n      logMessageWithDetails += \" \" + details;\n    }\n\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails);\n      this.emit('restriction-failed', file, err);\n    } else {\n      this.log(logMessageWithDetails, 'error');\n    } // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n\n\n    if (showInformer) {\n      this.info({\n        message: message,\n        details: details\n      }, 'error', this.opts.infoTimeout);\n    }\n\n    if (throwErr) {\n      throw typeof err === 'object' ? err : new Error(err);\n    }\n  };\n\n  _proto.assertNewUploadAllowed = function assertNewUploadAllowed(file) {\n    var _this$getState2 = this.getState(),\n        allowNewUpload = _this$getState2.allowNewUpload;\n\n    if (allowNewUpload === false) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {\n        file: file\n      });\n    }\n  }\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */\n  ;\n\n  _proto.checkAndCreateFileStateObject = function checkAndCreateFileStateObject(files, f) {\n    var fileType = getFileType(f);\n    var file = f;\n    file.type = fileType;\n    var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);\n\n    if (onBeforeFileAddedResult === false) {\n      // Donâ€™t show UI info for this error, as it should be done by the developer\n      this.showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {\n        showInformer: false,\n        file: file\n      });\n    }\n\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult;\n    }\n\n    var fileName;\n\n    if (file.name) {\n      fileName = file.name;\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = fileType.split('/')[0] + \".\" + fileType.split('/')[1];\n    } else {\n      fileName = 'noname';\n    }\n\n    var fileExtension = getFileNameAndExtension(fileName).extension;\n    var isRemote = file.isRemote || false;\n    var fileID = generateFileID(file);\n\n    if (files[fileID] && !files[fileID].isGhost) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {\n        fileName: fileName\n      })), {\n        file: file\n      });\n    }\n\n    var meta = file.meta || {};\n    meta.name = fileName;\n    meta.type = fileType; // `null` means the size is unknown.\n\n    var size = isFinite(file.data.size) ? file.data.size : null;\n    var newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: _extends({}, this.getState().meta, meta),\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null\n      },\n      size: size,\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    };\n\n    try {\n      var filesArray = Object.keys(files).map(function (i) {\n        return files[i];\n      });\n      this.checkRestrictions(newFile, filesArray);\n    } catch (err) {\n      this.showOrLogErrorAndThrow(err, {\n        file: newFile\n      });\n    }\n\n    return newFile;\n  } // Schedule an upload if `autoProceed` is enabled.\n  ;\n\n  _proto.startIfAutoProceed = function startIfAutoProceed() {\n    var _this5 = this;\n\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(function () {\n        _this5.scheduledAutoProceed = null;\n\n        _this5.upload().catch(function (err) {\n          if (!err.isRestriction) {\n            _this5.log(err.stack || err.message || err);\n          }\n        });\n      }, 4);\n    }\n  }\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var _extends3;\n\n    this.assertNewUploadAllowed(file);\n\n    var _this$getState3 = this.getState(),\n        files = _this$getState3.files;\n\n    var newFile = this.checkAndCreateFileStateObject(files, file); // Users are asked to re-select recovered files without data,\n    // and to keep the progress, meta and everthing else, we only replace said data\n\n    if (files[newFile.id] && files[newFile.id].isGhost) {\n      newFile = _extends({}, files[newFile.id], {\n        data: file.data,\n        isGhost: false\n      });\n      this.log(\"Replaced the blob in the restored ghost file: \" + newFile.name + \", \" + newFile.id);\n    }\n\n    this.setState({\n      files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))\n    });\n    this.emit('file-added', newFile);\n    this.emit('files-added', [newFile]);\n    this.log(\"Added file: \" + newFile.name + \", \" + newFile.id + \", mime type: \" + newFile.type);\n    this.startIfAutoProceed();\n    return newFile.id;\n  }\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified.\n   * This is good for UI plugins, but not for programmatic use.\n   * Programmatic users should usually still use `addFile()` on individual files.\n   */\n  ;\n\n  _proto.addFiles = function addFiles(fileDescriptors) {\n    var _this6 = this;\n\n    this.assertNewUploadAllowed(); // create a copy of the files object only once\n\n    var files = _extends({}, this.getState().files);\n\n    var newFiles = [];\n    var errors = [];\n\n    for (var i = 0; i < fileDescriptors.length; i++) {\n      try {\n        var newFile = this.checkAndCreateFileStateObject(files, fileDescriptors[i]); // Users are asked to re-select recovered files without data,\n        // and to keep the progress, meta and everthing else, we only replace said data\n\n        if (files[newFile.id] && files[newFile.id].isGhost) {\n          newFile = _extends({}, files[newFile.id], {\n            data: fileDescriptors[i].data,\n            isGhost: false\n          });\n          this.log(\"Replaced blob in a ghost file: \" + newFile.name + \", \" + newFile.id);\n        }\n\n        files[newFile.id] = newFile;\n        newFiles.push(newFile);\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err);\n        }\n      }\n    }\n\n    this.setState({\n      files: files\n    });\n    newFiles.forEach(function (newFile) {\n      _this6.emit('file-added', newFile);\n    });\n    this.emit('files-added', newFiles);\n\n    if (newFiles.length > 5) {\n      this.log(\"Added batch of \" + newFiles.length + \" files\");\n    } else {\n      Object.keys(newFiles).forEach(function (fileID) {\n        _this6.log(\"Added file: \" + newFiles[fileID].name + \"\\n id: \" + newFiles[fileID].id + \"\\n type: \" + newFiles[fileID].type);\n      });\n    }\n\n    if (newFiles.length > 0) {\n      this.startIfAutoProceed();\n    }\n\n    if (errors.length > 0) {\n      var message = 'Multiple errors occurred while adding files:\\n';\n      errors.forEach(function (subError) {\n        message += \"\\n * \" + subError.message;\n      });\n      this.info({\n        message: this.i18n('addBulkFilesFailed', {\n          smart_count: errors.length\n        }),\n        details: message\n      }, 'error', this.opts.infoTimeout);\n\n      if (typeof AggregateError === 'function') {\n        throw new AggregateError(errors, message);\n      } else {\n        var err = new Error(message);\n        err.errors = errors;\n        throw err;\n      }\n    }\n  };\n\n  _proto.removeFiles = function removeFiles(fileIDs, reason) {\n    var _this7 = this;\n\n    var _this$getState4 = this.getState(),\n        files = _this$getState4.files,\n        currentUploads = _this$getState4.currentUploads;\n\n    var updatedFiles = _extends({}, files);\n\n    var updatedUploads = _extends({}, currentUploads);\n\n    var removedFiles = Object.create(null);\n    fileIDs.forEach(function (fileID) {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID];\n        delete updatedFiles[fileID];\n      }\n    }); // Remove files from the `fileIDs` list in each upload.\n\n    function fileIsNotRemoved(uploadFileID) {\n      return removedFiles[uploadFileID] === undefined;\n    }\n\n    Object.keys(updatedUploads).forEach(function (uploadID) {\n      var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.\n\n      if (newFileIDs.length === 0) {\n        delete updatedUploads[uploadID];\n        return;\n      }\n\n      updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {\n        fileIDs: newFileIDs\n      });\n    });\n    var stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles\n    }; // If all files were removed - allow new uploads,\n    // and clear recoveredState\n\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true;\n      stateUpdate.error = null;\n      stateUpdate.recoveredState = null;\n    }\n\n    this.setState(stateUpdate);\n    this.calculateTotalProgress();\n    var removedFileIDs = Object.keys(removedFiles);\n    removedFileIDs.forEach(function (fileID) {\n      _this7.emit('file-removed', removedFiles[fileID], reason);\n    });\n\n    if (removedFileIDs.length > 5) {\n      this.log(\"Removed \" + removedFileIDs.length + \" files\");\n    } else {\n      this.log(\"Removed files: \" + removedFileIDs.join(', '));\n    }\n  };\n\n  _proto.removeFile = function removeFile(fileID, reason) {\n    if (reason === void 0) {\n      reason = null;\n    }\n\n    this.removeFiles([fileID], reason);\n  };\n\n  _proto.pauseResume = function pauseResume(fileID) {\n    if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {\n      return undefined;\n    }\n\n    var wasPaused = this.getFile(fileID).isPaused || false;\n    var isPaused = !wasPaused;\n    this.setFileState(fileID, {\n      isPaused: isPaused\n    });\n    this.emit('upload-pause', fileID, isPaused);\n    return isPaused;\n  };\n\n  _proto.pauseAll = function pauseAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: true\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('pause-all');\n  };\n\n  _proto.resumeAll = function resumeAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('resume-all');\n  };\n\n  _proto.retryAll = function retryAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var filesToRetry = Object.keys(updatedFiles).filter(function (file) {\n      return updatedFiles[file].error;\n    });\n    filesToRetry.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      error: null\n    });\n    this.emit('retry-all', filesToRetry);\n\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: []\n      });\n    }\n\n    var uploadID = this.createUpload(filesToRetry, {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n    return this.runUpload(uploadID);\n  };\n\n  _proto.cancelAll = function cancelAll() {\n    this.emit('cancel-all');\n\n    var _this$getState5 = this.getState(),\n        files = _this$getState5.files;\n\n    var fileIDs = Object.keys(files);\n\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all');\n    }\n\n    this.setState({\n      totalProgress: 0,\n      error: null,\n      recoveredState: null\n    });\n  };\n\n  _proto.retryUpload = function retryUpload(fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false\n    });\n    this.emit('upload-retry', fileID);\n    var uploadID = this.createUpload([fileID], {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n    return this.runUpload(uploadID);\n  };\n\n  _proto.reset = function reset() {\n    this.cancelAll();\n  };\n\n  _proto.logout = function logout() {\n    this.iteratePlugins(function (plugin) {\n      if (plugin.provider && plugin.provider.logout) {\n        plugin.provider.logout();\n      }\n    });\n  };\n\n  _proto.calculateProgress = function calculateProgress(file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(\"Not setting progress for a file that has been removed: \" + file.id);\n      return;\n    } // bytesTotal may be null or zero; in that case we can't divide by it\n\n\n    var canHavePercentage = isFinite(data.bytesTotal) && data.bytesTotal > 0;\n    this.setFileState(file.id, {\n      progress: _extends({}, this.getFile(file.id).progress, {\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n        // we get more accurate calculations if we don't round this at all.\n        ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0\n      })\n    });\n    this.calculateTotalProgress();\n  };\n\n  _proto.calculateTotalProgress = function calculateTotalProgress() {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    var files = this.getFiles();\n    var inProgress = files.filter(function (file) {\n      return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;\n    });\n\n    if (inProgress.length === 0) {\n      this.emit('progress', 0);\n      this.setState({\n        totalProgress: 0\n      });\n      return;\n    }\n\n    var sizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal != null;\n    });\n    var unsizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal == null;\n    });\n\n    if (sizedFiles.length === 0) {\n      var progressMax = inProgress.length * 100;\n      var currentProgress = unsizedFiles.reduce(function (acc, file) {\n        return acc + file.progress.percentage;\n      }, 0);\n\n      var _totalProgress = Math.round(currentProgress / progressMax * 100);\n\n      this.setState({\n        totalProgress: _totalProgress\n      });\n      return;\n    }\n\n    var totalSize = sizedFiles.reduce(function (acc, file) {\n      return acc + file.progress.bytesTotal;\n    }, 0);\n    var averageSize = totalSize / sizedFiles.length;\n    totalSize += averageSize * unsizedFiles.length;\n    var uploadedSize = 0;\n    sizedFiles.forEach(function (file) {\n      uploadedSize += file.progress.bytesUploaded;\n    });\n    unsizedFiles.forEach(function (file) {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100;\n    });\n    var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n\n    if (totalProgress > 100) {\n      totalProgress = 100;\n    }\n\n    this.setState({\n      totalProgress: totalProgress\n    });\n    this.emit('progress', totalProgress);\n  }\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */\n  ;\n\n  _proto.addListeners = function addListeners() {\n    var _this8 = this;\n\n    /**\n     * @param {Error} error\n     * @param {object} [file]\n     * @param {object} [response]\n     */\n    var errorHandler = function errorHandler(error, file, response) {\n      var errorMsg = error.message || 'Unknown error';\n\n      if (error.details) {\n        errorMsg += \" \" + error.details;\n      }\n\n      _this8.setState({\n        error: errorMsg\n      }); // When a file is also given, we store the error on the file object.\n\n\n      if (file != null && typeof file.id === 'string') {\n        _this8.setFileState(file.id, {\n          error: errorMsg,\n          response: response\n        });\n      }\n    };\n\n    this.on('error', errorHandler);\n    this.on('upload-error', function (file, error, response) {\n      errorHandler(error, file, response);\n\n      if (typeof error === 'object' && error.message) {\n        var newError = new Error(error.message);\n        newError.details = error.message;\n\n        if (error.details) {\n          newError.details += \" \" + error.details;\n        }\n\n        newError.message = _this8.i18n('failedToUpload', {\n          file: file.name\n        });\n\n        _this8.showOrLogErrorAndThrow(newError, {\n          throwErr: false\n        });\n      } else {\n        _this8.showOrLogErrorAndThrow(error, {\n          throwErr: false\n        });\n      }\n    });\n    this.on('upload', function () {\n      _this8.setState({\n        error: null\n      });\n    });\n    this.on('upload-started', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size\n        }\n      });\n    });\n    this.on('upload-progress', this.calculateProgress);\n    this.on('upload-success', function (file, uploadResp) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var currentProgress = _this8.getFile(file.id).progress;\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, currentProgress, {\n          postprocess: _this8.postProcessors.length > 0 ? {\n            mode: 'indeterminate'\n          } : null,\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal\n        }),\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false\n      }); // Remote providers sometimes don't tell us the file size,\n      // but we can know how many bytes we uploaded once the upload is complete.\n\n\n      if (file.size == null) {\n        _this8.setFileState(file.id, {\n          size: uploadResp.bytesUploaded || currentProgress.bytesTotal\n        });\n      }\n\n      _this8.calculateTotalProgress();\n    });\n    this.on('preprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getFile(file.id).progress, {\n          preprocess: progress\n        })\n      });\n    });\n    this.on('preprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this8.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.preprocess;\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('postprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getState().files[file.id].progress, {\n          postprocess: progress\n        })\n      });\n    });\n    this.on('postprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this8.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is uploadâ€¦fully completeâ€¦rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('restored', function () {\n      // Files may have changed--ensure progress is still accurate.\n      _this8.calculateTotalProgress();\n    }); // show informer if offline\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', function () {\n        return _this8.updateOnlineStatus();\n      });\n      window.addEventListener('offline', function () {\n        return _this8.updateOnlineStatus();\n      });\n      setTimeout(function () {\n        return _this8.updateOnlineStatus();\n      }, 3000);\n    }\n  };\n\n  _proto.updateOnlineStatus = function updateOnlineStatus() {\n    var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;\n\n    if (!online) {\n      this.emit('is-offline');\n      this.info(this.i18n('noInternetConnection'), 'error', 0);\n      this.wasOffline = true;\n    } else {\n      this.emit('is-online');\n\n      if (this.wasOffline) {\n        this.emit('back-online');\n        this.info(this.i18n('connectedToInternet'), 'success', 3000);\n        this.wasOffline = false;\n      }\n    }\n  };\n\n  _proto.getID = function getID() {\n    return this.opts.id;\n  }\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  // eslint-disable-next-line no-shadow\n  ;\n\n  _proto.use = function use(Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      var msg = \"Expected a plugin class, but got \" + (Plugin === null ? 'null' : typeof Plugin) + \".\" + ' Please verify that the plugin was imported and spelled correctly.';\n      throw new TypeError(msg);\n    } // Instantiate\n\n\n    var plugin = new Plugin(this, opts);\n    var pluginId = plugin.id;\n    this.plugins[plugin.type] = this.plugins[plugin.type] || [];\n\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id');\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type');\n    }\n\n    var existsPluginAlready = this.getPlugin(pluginId);\n\n    if (existsPluginAlready) {\n      var _msg = \"Already found a plugin named '\" + existsPluginAlready.id + \"'. \" + (\"Tried to use: '\" + pluginId + \"'.\\n\") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';\n\n      throw new Error(_msg);\n    }\n\n    if (Plugin.VERSION) {\n      this.log(\"Using \" + pluginId + \" v\" + Plugin.VERSION);\n    }\n\n    this.plugins[plugin.type].push(plugin);\n    plugin.install();\n    return this;\n  }\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */\n  ;\n\n  _proto.getPlugin = function getPlugin(id) {\n    var foundPlugin = null;\n    this.iteratePlugins(function (plugin) {\n      if (plugin.id === id) {\n        foundPlugin = plugin;\n        return false;\n      }\n    });\n    return foundPlugin;\n  }\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */\n  ;\n\n  _proto.iteratePlugins = function iteratePlugins(method) {\n    var _this9 = this;\n\n    Object.keys(this.plugins).forEach(function (pluginType) {\n      _this9.plugins[pluginType].forEach(method);\n    });\n  }\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */\n  ;\n\n  _proto.removePlugin = function removePlugin(instance) {\n    var _extends4;\n\n    this.log(\"Removing plugin \" + instance.id);\n    this.emit('plugin-remove', instance);\n\n    if (instance.uninstall) {\n      instance.uninstall();\n    }\n\n    var list = this.plugins[instance.type].slice(); // list.indexOf failed here, because Vue3 converted the plugin instance\n    // to a Proxy object, which failed the strict comparison test:\n    // obj !== objProxy\n\n    var index = findIndex(list, function (item) {\n      return item.id === instance.id;\n    });\n\n    if (index !== -1) {\n      list.splice(index, 1);\n      this.plugins[instance.type] = list;\n    }\n\n    var state = this.getState();\n    var updatedState = {\n      plugins: _extends({}, state.plugins, (_extends4 = {}, _extends4[instance.id] = undefined, _extends4))\n    };\n    this.setState(updatedState);\n  }\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  ;\n\n  _proto.close = function close() {\n    var _this10 = this;\n\n    this.log(\"Closing Uppy instance \" + this.opts.id + \": removing all files and uninstalling plugins\");\n    this.reset();\n    this.storeUnsubscribe();\n    this.iteratePlugins(function (plugin) {\n      _this10.removePlugin(plugin);\n    });\n  }\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */\n  ;\n\n  _proto.info = function info(message, type, duration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (duration === void 0) {\n      duration = 3000;\n    }\n\n    var isComplexMessage = typeof message === 'object';\n    this.setState({\n      info: {\n        isHidden: false,\n        type: type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null\n      }\n    });\n    this.emit('info-visible');\n    clearTimeout(this.infoTimeoutID);\n\n    if (duration === 0) {\n      this.infoTimeoutID = undefined;\n      return;\n    } // hide the informer after `duration` milliseconds\n\n\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration);\n  };\n\n  _proto.hideInfo = function hideInfo() {\n    var newInfo = _extends({}, this.getState().info, {\n      isHidden: true\n    });\n\n    this.setState({\n      info: newInfo\n    });\n    this.emit('info-hidden');\n  }\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */\n  ;\n\n  _proto.log = function log(message, type) {\n    var logger = this.opts.logger;\n\n    switch (type) {\n      case 'error':\n        logger.error(message);\n        break;\n\n      case 'warning':\n        logger.warn(message);\n        break;\n\n      default:\n        logger.debug(message);\n        break;\n    }\n  }\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */\n  ;\n\n  _proto.run = function run() {\n    this.log('Calling run() is no longer necessary.', 'warning');\n    return this;\n  }\n  /**\n   * Restore an upload by its ID.\n   */\n  ;\n\n  _proto.restore = function restore(uploadID) {\n    this.log(\"Core: attempting to restore upload \\\"\" + uploadID + \"\\\"\");\n\n    if (!this.getState().currentUploads[uploadID]) {\n      this.removeUpload(uploadID);\n      return Promise.reject(new Error('Nonexistent upload'));\n    }\n\n    return this.runUpload(uploadID);\n  }\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */\n  ;\n\n  _proto.createUpload = function createUpload(fileIDs, opts) {\n    var _extends5;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    // uppy.retryAll sets this to true â€” when retrying we want to ignore `allowNewUpload: false`\n    var _opts = opts,\n        _opts$forceAllowNewUp = _opts.forceAllowNewUpload,\n        forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;\n\n    var _this$getState6 = this.getState(),\n        allowNewUpload = _this$getState6.allowNewUpload,\n        currentUploads = _this$getState6.currentUploads;\n\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.');\n    }\n\n    var uploadID = cuid();\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs: fileIDs\n    });\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n      currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = {\n        fileIDs: fileIDs,\n        step: 0,\n        result: {}\n      }, _extends5))\n    });\n    return uploadID;\n  };\n\n  _proto.getUpload = function getUpload(uploadID) {\n    var _this$getState7 = this.getState(),\n        currentUploads = _this$getState7.currentUploads;\n\n    return currentUploads[uploadID];\n  }\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */\n  ;\n\n  _proto.addResultData = function addResultData(uploadID, data) {\n    var _extends6;\n\n    if (!this.getUpload(uploadID)) {\n      this.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      return;\n    }\n\n    var _this$getState8 = this.getState(),\n        currentUploads = _this$getState8.currentUploads;\n\n    var currentUpload = _extends({}, currentUploads[uploadID], {\n      result: _extends({}, currentUploads[uploadID].result, data)\n    });\n\n    this.setState({\n      currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = currentUpload, _extends6))\n    });\n  }\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */\n  ;\n\n  _proto.removeUpload = function removeUpload(uploadID) {\n    var currentUploads = _extends({}, this.getState().currentUploads);\n\n    delete currentUploads[uploadID];\n    this.setState({\n      currentUploads: currentUploads\n    });\n  }\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */\n  ;\n\n  _proto.runUpload = function runUpload(uploadID) {\n    var _this11 = this;\n\n    var uploadData = this.getState().currentUploads[uploadID];\n    var restoreStep = uploadData.step;\n    var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);\n    var lastStep = Promise.resolve();\n    steps.forEach(function (fn, step) {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return;\n      }\n\n      lastStep = lastStep.then(function () {\n        var _extends7;\n\n        var _this11$getState = _this11.getState(),\n            currentUploads = _this11$getState.currentUploads;\n\n        var currentUpload = currentUploads[uploadID];\n\n        if (!currentUpload) {\n          return;\n        }\n\n        var updatedUpload = _extends({}, currentUpload, {\n          step: step\n        });\n\n        _this11.setState({\n          currentUploads: _extends({}, currentUploads, (_extends7 = {}, _extends7[uploadID] = updatedUpload, _extends7))\n        }); // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n        // eslint-disable-next-line consistent-return\n\n\n        return fn(updatedUpload.fileIDs, uploadID);\n      }).then(function () {\n        return null;\n      });\n    }); // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n\n    lastStep.catch(function (err) {\n      _this11.emit('error', err);\n\n      _this11.removeUpload(uploadID);\n    });\n    return lastStep.then(function () {\n      // Set result data.\n      var _this11$getState2 = _this11.getState(),\n          currentUploads = _this11$getState2.currentUploads;\n\n      var currentUpload = currentUploads[uploadID];\n\n      if (!currentUpload) {\n        return;\n      } // Mark postprocessing step as complete if necessary; this addresses a case where we might get\n      // stuck in the postprocessing UI while the upload is fully complete.\n      // If the postprocessing steps do not do any work, they may not emit postprocessing events at\n      // all, and never mark the postprocessing as complete. This is fine on its own but we\n      // introduced code in the @uppy/core upload-success handler to prepare postprocessing progress\n      // state if any postprocessors are registered. That is to avoid a \"flash of completed state\"\n      // before the postprocessing plugins can emit events.\n      //\n      // So, just in case an upload with postprocessing plugins *has* completed *without* emitting\n      // postprocessing completion, we do it instead.\n\n\n      currentUpload.fileIDs.forEach(function (fileID) {\n        var file = _this11.getFile(fileID);\n\n        if (file && file.progress.postprocess) {\n          _this11.emit('postprocess-complete', file);\n        }\n      });\n      var files = currentUpload.fileIDs.map(function (fileID) {\n        return _this11.getFile(fileID);\n      });\n      var successful = files.filter(function (file) {\n        return !file.error;\n      });\n      var failed = files.filter(function (file) {\n        return file.error;\n      });\n\n      _this11.addResultData(uploadID, {\n        successful: successful,\n        failed: failed,\n        uploadID: uploadID\n      });\n    }).then(function () {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      var _this11$getState3 = _this11.getState(),\n          currentUploads = _this11$getState3.currentUploads;\n\n      if (!currentUploads[uploadID]) {\n        return;\n      }\n\n      var currentUpload = currentUploads[uploadID];\n      var result = currentUpload.result;\n\n      _this11.emit('complete', result);\n\n      _this11.removeUpload(uploadID); // eslint-disable-next-line consistent-return\n\n\n      return result;\n    }).then(function (result) {\n      if (result == null) {\n        _this11.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.upload = function upload() {\n    var _this12 = this;\n\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning');\n    }\n\n    var _this$getState9 = this.getState(),\n        files = _this$getState9.files;\n\n    var onBeforeUploadResult = this.opts.onBeforeUpload(files);\n\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));\n    }\n\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n\n      this.setState({\n        files: files\n      });\n    }\n\n    return Promise.resolve().then(function () {\n      _this12.checkMinNumberOfFiles(files);\n\n      _this12.checkRequiredMetaFields(files);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err);\n    }).then(function () {\n      var _this12$getState = _this12.getState(),\n          currentUploads = _this12$getState.currentUploads; // get a list of files that are currently assigned to uploads\n\n\n      var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {\n        return prev.concat(currentUploads[curr].fileIDs);\n      }, []);\n      var waitingFileIDs = [];\n      Object.keys(files).forEach(function (fileID) {\n        var file = _this12.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..\n\n\n        if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {\n          waitingFileIDs.push(file.id);\n        }\n      });\n\n      var uploadID = _this12.createUpload(waitingFileIDs);\n\n      return _this12.runUpload(uploadID);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err, {\n        showInformer: false\n      });\n    });\n  };\n\n  _createClass(Uppy, [{\n    key: \"state\",\n    get: function get() {\n      // Here, state is a non-enumerable property.\n      return this.getState();\n    }\n  }]);\n\n  return Uppy;\n}();\n\nUppy.VERSION = \"1.20.1\";\n\nmodule.exports = function core(opts) {\n  return new Uppy(opts);\n}; // Expose class constructor.\n\n\nmodule.exports.Uppy = Uppy;\nmodule.exports.Plugin = Plugin;\nmodule.exports.debugLogger = debugLogger;"]},"metadata":{},"sourceType":"script"}