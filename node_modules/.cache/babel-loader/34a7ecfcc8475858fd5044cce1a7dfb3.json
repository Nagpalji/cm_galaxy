{"ast":null,"code":"import{Fragment,useEffect}from'react';import Prism from'prismjs';import{Row,Col,CardText}from'reactstrap';import ModalBasic from'./ModalBasic';import ModalThemes from'./ModalThemes';import ModalSizes from'./ModalSizes';import ModalEvents from'./ModalEvents';import ModalFormAndScroll from'./ModalFormAndScroll';import ModalUnmount from'./ModalUnmount';import BreadCrumbs from'@components/breadcrumbs';import Card from'@components/card-snippet';import{modalBasic,modalTheme,modalSizes,modalEvents,modalForm,modalUnmount}from'./ModalSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Modals=function Modals(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Modal\",breadCrumbParent:\"Components\",breadCrumbActive:\"Modal\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Modal Basic\",code:modalBasic,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"Modal\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"ModalBody\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"ModalFooter\"}),\" tags to create a Modal with reactstrap.\"]}),/*#__PURE__*/_jsx(ModalBasic,{})]})})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Modal Themes\",code:modalTheme,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".modal-[color]\"}),\" with your \",/*#__PURE__*/_jsx(\"code\",{children:\".modal\"}),\" to change theme of modal\"]}),/*#__PURE__*/_jsx(ModalThemes,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Modal Sizes\",code:modalSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use class \",/*#__PURE__*/_jsx(\"code\",{children:\".modal-[xs/sm/lg/xl]\"}),\" with \",/*#__PURE__*/_jsx(\"code\",{children:\"ModalHeader\"}),\" to change modal Size.\"]}),/*#__PURE__*/_jsx(ModalSizes,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Modal Events\",code:modalEvents,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use props \",/*#__PURE__*/_jsx(\"code\",{children:\"onClosed / onOpened\"}),\" for modal events.\"]}),/*#__PURE__*/_jsx(ModalEvents,{})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Form & Scrolling Modals\",code:modalForm,children:/*#__PURE__*/_jsx(ModalFormAndScroll,{})})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Unmount On Close\",code:modalUnmount,children:[/*#__PURE__*/_jsx(CardText,{children:\"Write something (data should remain in modal if unmountOnClose is set to false).\"}),/*#__PURE__*/_jsx(ModalUnmount,{})]})})]})]});};export default Modals;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/components/modal/index.js"],"names":["Fragment","useEffect","Prism","Row","Col","CardText","ModalBasic","ModalThemes","ModalSizes","ModalEvents","ModalFormAndScroll","ModalUnmount","BreadCrumbs","Card","modalBasic","modalTheme","modalSizes","modalEvents","modalForm","modalUnmount","Modals","highlightAll"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,OAASC,UAAT,CAAqBC,UAArB,CAAiCC,UAAjC,CAA6CC,WAA7C,CAA0DC,SAA1D,CAAqEC,YAArE,KAAyF,mBAAzF,C,wFACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBnB,SAAS,CAAC,UAAM,CACdC,KAAK,CAACmB,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,OAA7B,CAAqC,gBAAgB,CAAC,YAAtD,CAAmE,gBAAgB,CAAC,OAApF,EADF,cAEE,KAAC,GAAD,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,aAAZ,CAA0B,IAAI,CAAEP,UAAhC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,+BACM,+BADN,mBAC0B,mCAD1B,sBACqD,qCADrD,8CADF,cAKE,KAAC,UAAD,IALF,GADF,EADF,EAFF,cAaE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,IAAI,CAAEC,UAAjC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,qCACY,wCADZ,4BACkD,gCADlD,+BADF,cAIE,KAAC,WAAD,IAJF,GADF,EADF,cASE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,aAAZ,CAA0B,IAAI,CAAEC,UAAhC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,qCACY,8CADZ,uBACmD,qCADnD,4BADF,cAIE,KAAC,UAAD,IAJF,GADF,EATF,cAiBE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,IAAI,CAAEC,WAAjC,wBACE,MAAC,QAAD,EAAU,SAAS,CAAC,MAApB,qCACY,6CADZ,wBADF,cAIE,KAAC,WAAD,IAJF,GADF,EAjBF,GAbF,cAuCE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,KAAC,IAAD,EAAM,KAAK,CAAC,yBAAZ,CAAsC,IAAI,CAAEC,SAA5C,uBACE,KAAC,kBAAD,IADF,EADF,EADF,cAME,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,kBAAZ,CAA+B,IAAI,CAAEC,YAArC,wBACE,KAAC,QAAD,+FADF,cAEE,KAAC,YAAD,IAFF,GADF,EANF,GAvCF,GADF,CAuDD,CA5DD,CA6DA,cAAeC,CAAAA,MAAf","sourcesContent":["import { Fragment, useEffect } from 'react'\r\nimport Prism from 'prismjs'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport ModalBasic from './ModalBasic'\r\nimport ModalThemes from './ModalThemes'\r\nimport ModalSizes from './ModalSizes'\r\nimport ModalEvents from './ModalEvents'\r\nimport ModalFormAndScroll from './ModalFormAndScroll'\r\nimport ModalUnmount from './ModalUnmount'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport { modalBasic, modalTheme, modalSizes, modalEvents, modalForm, modalUnmount } from './ModalSourceCode'\r\nconst Modals = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Modal' breadCrumbParent='Components' breadCrumbActive='Modal' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Modal Basic' code={modalBasic}>\r\n            <CardText className='mb-0'>\r\n              Use <code>Modal</code>, <code>ModalBody</code> and <code>ModalFooter</code> tags to create a Modal with\r\n              reactstrap.\r\n            </CardText>\r\n            <ModalBasic />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Modal Themes' code={modalTheme}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.modal-[color]</code> with your <code>.modal</code> to change theme of modal\r\n            </CardText>\r\n            <ModalThemes />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Modal Sizes' code={modalSizes}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.modal-[xs/sm/lg/xl]</code> with <code>ModalHeader</code> to change modal Size.\r\n            </CardText>\r\n            <ModalSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Modal Events' code={modalEvents}>\r\n            <CardText className='mb-0'>\r\n              Use props <code>onClosed / onOpened</code> for modal events.\r\n            </CardText>\r\n            <ModalEvents />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Form & Scrolling Modals' code={modalForm}>\r\n            <ModalFormAndScroll />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Unmount On Close' code={modalUnmount}>\r\n            <CardText>Write something (data should remain in modal if unmountOnClose is set to false).</CardText>\r\n            <ModalUnmount />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Modals\r\n"]},"metadata":{},"sourceType":"module"}