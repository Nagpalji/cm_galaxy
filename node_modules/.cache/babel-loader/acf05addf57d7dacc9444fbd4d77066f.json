{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import { useState, useContext, Fragment } from 'react'\n// import Avatar from '@components/avatar'\n// import { isUserLoggedIn } from '@utils'\n// import { useSkin } from '@hooks/useSkin'\n// import { ChevronLeft, Coffee } from 'react-feather'\n// import { Link, Redirect } from 'react-router-dom'\n// import { toast, Slide } from 'react-toastify'\n// // Logo component start\n// import signin from '@src/assets/images/avatars/logo.png'\n// // Logo component End\n// import { Row, Col, CardTitle, CardText, Form, FormGroup, CardImg, Label, Input, Button } from 'reactstrap'\n// import '@styles/base/pages/page-auth.scss'\n// const ForgotPassword = () => {\n//   const [skin, setSkin] = useSkin()\n//   const illustration = skin === 'dark' ? 'forgot-password-v2-dark.svg' : 'forgot-password-v2.svg',\n//     source = require(`@src/assets/images/pages/${illustration}`).default\n//     const ToastContent = ({ name, role }) => (\n//       <Fragment>\n//         <div className='toastify-header'>\n//           <div className='title-wrapper'>\n//             <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n//             <h6 className='toast-title font-weight-bold'>Forgot Password</h6>\n//           </div>\n//         </div>\n//         <div className='toastify-body'>\n//           <span>Recovery link is send on email.</span>\n//         </div>\n//       </Fragment>\n//     )\n//   function handleSubmitCustom(e) {\n//     // alert(\"zzz\")\n//       e.preventDefault()\n//     const fet = 'https://srvr1px.cyberads.io/forgot_password/?user_name='\n//     const username = document.getElementById('login-email').value\n//       fetch(fet + username, \n//       {\n//         method: 'POST'\n//       }).then(res => res.json())\n//       .then(\n//         (result) => {\n//           console.log(JSON.stringify(result))  \n//           //alert(JSON.stringify(result))\n//           if (result.status === 200) { \n//              //alert(\"Recovery link is send on email.\")\n//              toast.success(\n//               <ToastContent username={username} />,\n//               { transition: Slide, hideProgressBar: true, autoClose: 5000 }\n//             )\n//             } else { \n//               alert(\"Something is wrong.\") \n//         }\n//         },\n//           (error) => {\n//             //setError({ error })\n//           }\n//         )\n//   }\n//   if (!isUserLoggedIn()) {\n//     return (\n//       <div className='auth-wrapper auth-v2'>\n//         <Row className='auth-inner m-0'>\n//           <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n//           <CardImg top src={signin} className='SignLogo'  alt='card1' />\n//             {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\n//           </Link>\n//           <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n//             <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n//               <img className='img-fluid' src={source} alt='Login V2' />\n//             </div>\n//           </Col>\n//           <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n//             <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n//               <CardTitle tag='h2' className='font-weight-bold mb-1'>\n//                 Forgot Password?\n//               </CardTitle>\n//               <CardText className='mb-2'>\n//               Can't log in? We'll send a recovery link to\n//               </CardText>\n//               <Form className='auth-forgot-password-form mt-2' onSubmit={handleSubmitCustom}>\n//                 <FormGroup>\n//                   <Label className='form-label' for='login-email'>\n//                     Email\n//                   </Label>\n//                   <Input type='email' id='login-email' autoFocus />\n//                 </FormGroup>\n//                 <Button.Ripple color='primary' type=\"submit\" block>\n//                   Send recovery link\n//                 </Button.Ripple>\n//               </Form>\n//               <p className='text-center mt-2'>\n//                 <Link to='/login'>\n//                   <ChevronLeft className='mr-25' size={14} />\n//                   <span className='align-middle'>Back to login</span>\n//                 </Link>\n//               </p>\n//             </Col>\n//           </Col>\n//         </Row>\n//       </div>\n//     )\n//   } else {\n//     return <Redirect to='/' />\n//   }\n// }\n// export default ForgotPassword\nimport{useState,useContext,Fragment}from'react';import Avatar from'@components/avatar';import{isUserLoggedIn}from'@utils';import{useSkin}from'@hooks/useSkin';import{ChevronLeft,Coffee}from'react-feather';import{Link,Redirect}from'react-router-dom';import{toast,Slide}from'react-toastify';// Logo component start\nimport signin from'@src/assets/images/avatars/logo.png';// Logo component End\nimport{Row,Col,CardTitle,CardText,Form,FormGroup,CardImg,Label,Input,Button,Spinner}from'reactstrap';import'@styles/base/pages/page-auth.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgotPassword=function ForgotPassword(){var _useSkin=useSkin(),_useSkin2=_slicedToArray(_useSkin,2),skin=_useSkin2[0],setSkin=_useSkin2[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),forgoterror=_useState2[0],setForgoterror=_useState2[1];var illustration=skin==='dark'?'forgot-password-v2-dark.svg':'forgot-password-v2.svg',source=require(\"@src/assets/images/pages/\".concat(illustration)).default;var ToastContent=function ToastContent(_ref){var name=_ref.name,role=_ref.role;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Coffee,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title font-weight-bold\",children:\"Forgot Password\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Recovery link is send on email.\"})})]});};function setEmail(e){setForgoterror('');}function handleSubmitCustom(e){e.preventDefault();if(document.getElementById('login-email').value===\"\"){setForgoterror('Please provide registered email for recovery link.');//return false\n}else{setForgoterror('');document.getElementById('btnforgot').style.display='none';document.getElementById('loaderimg').style.display='block';var fet='https://srvr1px.cyberads.io/forgot_password/?user_name=';var username=document.getElementById('login-email').value;fetch(fet+username,{method:'POST'}).then(function(res){return res.json();}).then(function(result){console.log(JSON.stringify(result));//alert(JSON.stringify(result))\nif(result.status===200){//alert(\"Recovery link is send on email.\")\ntoast.success(/*#__PURE__*/_jsx(ToastContent,{username:username}),{transition:Slide,hideProgressBar:true,autoClose:5000});document.getElementById('btnforgot').style.display='block';document.getElementById('loaderimg').style.display='none';}else{alert(\"Something is wrong.\");}},function(error){//setError({ error })\n});}}if(!isUserLoggedIn()){return/*#__PURE__*/_jsx(\"div\",{className:\"auth-wrapper auth-v2\",children:/*#__PURE__*/_jsxs(Row,{className:\"auth-inner m-0\",children:[/*#__PURE__*/_jsx(Link,{to:\"/index\",className:\"brand-logo\",children:/*#__PURE__*/_jsx(CardImg,{top:true,src:signin,className:\"SignLogo\",alt:\"card1\"})}),/*#__PURE__*/_jsx(Col,{className:\"d-none d-lg-flex align-items-center p-5\",lg:\"8\",sm:\"12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-100 d-lg-flex align-items-center justify-content-center px-5\",children:/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid\",src:source,alt:\"Login V2\"})})}),/*#__PURE__*/_jsx(Col,{className:\"d-flex align-items-center auth-bg px-2 p-lg-5\",lg:\"4\",sm:\"12\",children:/*#__PURE__*/_jsxs(Col,{className:\"px-xl-2 mx-auto\",sm:\"8\",md:\"6\",lg:\"12\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h2\",className:\"font-weight-bold mb-1\",children:\"Forgot Password?\"}),/*#__PURE__*/_jsx(CardText,{className:\"mb-2\",children:\"Can't log in? We'll send a recovery link to\"}),/*#__PURE__*/_jsxs(Form,{className:\"auth-forgot-password-form mt-2\",onSubmit:handleSubmitCustom,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"login-email\",children:\"Email\"}),/*#__PURE__*/_jsx(Input,{type:\"email\",id:\"login-email\",autoFocus:true,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"small\",{style:{color:\"red\"},children:forgoterror})]}),/*#__PURE__*/_jsx(Button.Ripple,{color:\"primary\",type:\"submit\",id:\"btnforgot\",block:true,children:\"Send recovery link\"}),/*#__PURE__*/_jsx(\"div\",{className:\"demo-inline-spacing justify-content-between loader_mobileal\",style:{marginLeft:30,display:'none'},id:\"loaderimg\",children:/*#__PURE__*/_jsx(Spinner,{color:\"primary\"})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center mt-2\",children:/*#__PURE__*/_jsxs(Link,{to:\"/login\",children:[/*#__PURE__*/_jsx(ChevronLeft,{className:\"mr-25\",size:14}),/*#__PURE__*/_jsx(\"span\",{className:\"align-middle\",children:\"Back to login\"})]})})]})})]})});}else{return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}};export default ForgotPassword;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/pages/authentication/ForgotPassword.js"],"names":["useState","useContext","Fragment","Avatar","isUserLoggedIn","useSkin","ChevronLeft","Coffee","Link","Redirect","toast","Slide","signin","Row","Col","CardTitle","CardText","Form","FormGroup","CardImg","Label","Input","Button","Spinner","ForgotPassword","skin","setSkin","forgoterror","setForgoterror","illustration","source","require","default","ToastContent","name","role","setEmail","e","handleSubmitCustom","preventDefault","document","getElementById","value","style","display","fet","username","fetch","method","then","res","json","result","console","log","JSON","stringify","status","success","transition","hideProgressBar","autoClose","alert","error","target","color","marginLeft"],"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","sourcesContent":["// import { useState, useContext, Fragment } from 'react'\r\n// import Avatar from '@components/avatar'\r\n// import { isUserLoggedIn } from '@utils'\r\n// import { useSkin } from '@hooks/useSkin'\r\n// import { ChevronLeft, Coffee } from 'react-feather'\r\n// import { Link, Redirect } from 'react-router-dom'\r\n// import { toast, Slide } from 'react-toastify'\r\n// // Logo component start\r\n// import signin from '@src/assets/images/avatars/logo.png'\r\n// // Logo component End\r\n// import { Row, Col, CardTitle, CardText, Form, FormGroup, CardImg, Label, Input, Button } from 'reactstrap'\r\n// import '@styles/base/pages/page-auth.scss'\r\n\r\n// const ForgotPassword = () => {\r\n//   const [skin, setSkin] = useSkin()\r\n\r\n//   const illustration = skin === 'dark' ? 'forgot-password-v2-dark.svg' : 'forgot-password-v2.svg',\r\n//     source = require(`@src/assets/images/pages/${illustration}`).default\r\n//     const ToastContent = ({ name, role }) => (\r\n//       <Fragment>\r\n//         <div className='toastify-header'>\r\n//           <div className='title-wrapper'>\r\n//             <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n//             <h6 className='toast-title font-weight-bold'>Forgot Password</h6>\r\n//           </div>\r\n//         </div>\r\n//         <div className='toastify-body'>\r\n//           <span>Recovery link is send on email.</span>\r\n//         </div>\r\n//       </Fragment>\r\n//     )\r\n//   function handleSubmitCustom(e) {\r\n//     // alert(\"zzz\")\r\n//       e.preventDefault()\r\n//     const fet = 'https://srvr1px.cyberads.io/forgot_password/?user_name='\r\n//     const username = document.getElementById('login-email').value\r\n//       fetch(fet + username, \r\n//       {\r\n//         method: 'POST'\r\n\r\n//       }).then(res => res.json())\r\n//       .then(\r\n//         (result) => {\r\n//           console.log(JSON.stringify(result))  \r\n//           //alert(JSON.stringify(result))\r\n//           if (result.status === 200) { \r\n//              //alert(\"Recovery link is send on email.\")\r\n//              toast.success(\r\n//               <ToastContent username={username} />,\r\n\r\n//               { transition: Slide, hideProgressBar: true, autoClose: 5000 }\r\n//             )\r\n//             } else { \r\n//               alert(\"Something is wrong.\") \r\n//         }\r\n\r\n//         },\r\n//           (error) => {\r\n//             //setError({ error })\r\n//           }\r\n//         )\r\n\r\n//   }\r\n\r\n//   if (!isUserLoggedIn()) {\r\n//     return (\r\n//       <div className='auth-wrapper auth-v2'>\r\n//         <Row className='auth-inner m-0'>\r\n//           <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n//           <CardImg top src={signin} className='SignLogo'  alt='card1' />\r\n//             {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\r\n//           </Link>\r\n//           <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n//             <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n//               <img className='img-fluid' src={source} alt='Login V2' />\r\n//             </div>\r\n//           </Col>\r\n//           <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n//             <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n//               <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n//                 Forgot Password?\r\n//               </CardTitle>\r\n//               <CardText className='mb-2'>\r\n//               Can't log in? We'll send a recovery link to\r\n//               </CardText>\r\n//               <Form className='auth-forgot-password-form mt-2' onSubmit={handleSubmitCustom}>\r\n//                 <FormGroup>\r\n//                   <Label className='form-label' for='login-email'>\r\n//                     Email\r\n//                   </Label>\r\n//                   <Input type='email' id='login-email' autoFocus />\r\n//                 </FormGroup>\r\n//                 <Button.Ripple color='primary' type=\"submit\" block>\r\n//                   Send recovery link\r\n//                 </Button.Ripple>\r\n//               </Form>\r\n//               <p className='text-center mt-2'>\r\n//                 <Link to='/login'>\r\n//                   <ChevronLeft className='mr-25' size={14} />\r\n//                   <span className='align-middle'>Back to login</span>\r\n//                 </Link>\r\n//               </p>\r\n//             </Col>\r\n//           </Col>\r\n//         </Row>\r\n//       </div>\r\n//     )\r\n//   } else {\r\n//     return <Redirect to='/' />\r\n//   }\r\n// }\r\n\r\n// export default ForgotPassword\r\nimport { useState, useContext, Fragment } from 'react'\r\nimport Avatar from '@components/avatar'\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { ChevronLeft, Coffee } from 'react-feather'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { toast, Slide } from 'react-toastify'\r\n// Logo component start\r\nimport signin from '@src/assets/images/avatars/logo.png'\r\n// Logo component End\r\nimport { Row, Col, CardTitle, CardText, Form, FormGroup, CardImg, Label, Input, Button, Spinner } from 'reactstrap'\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\nconst ForgotPassword = () => {\r\n  const [skin, setSkin] = useSkin()\r\n  const [forgoterror, setForgoterror] = useState('')\r\n  const illustration = skin === 'dark' ? 'forgot-password-v2-dark.svg' : 'forgot-password-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n  const ToastContent = ({ name, role }) => (\r\n    <Fragment>\r\n      <div className='toastify-header'>\r\n        <div className='title-wrapper'>\r\n          <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n          <h6 className='toast-title font-weight-bold'>Forgot Password</h6>\r\n        </div>\r\n      </div>\r\n      <div className='toastify-body'>\r\n        <span>Recovery link is send on email.</span>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n  function setEmail(e) {\r\n    setForgoterror('')\r\n  }\r\n  function handleSubmitCustom(e) {\r\n    e.preventDefault()\r\n    if (document.getElementById('login-email').value === \"\") {\r\n      setForgoterror('Please provide registered email for recovery link.')\r\n      //return false\r\n    } else {\r\n      setForgoterror('')\r\n      document.getElementById('btnforgot').style.display = 'none'\r\n      document.getElementById('loaderimg').style.display = 'block'\r\n      const fet = 'https://srvr1px.cyberads.io/forgot_password/?user_name='\r\n      const username = document.getElementById('login-email').value\r\n      fetch(fet + username,\r\n        {\r\n          method: 'POST'\r\n\r\n        }).then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n\r\n            console.log(JSON.stringify(result))\r\n            //alert(JSON.stringify(result))\r\n            if (result.status === 200) {\r\n              //alert(\"Recovery link is send on email.\")\r\n              toast.success(\r\n                <ToastContent username={username} />,\r\n\r\n                { transition: Slide, hideProgressBar: true, autoClose: 5000 }\r\n              )\r\n              document.getElementById('btnforgot').style.display = 'block'\r\n              document.getElementById('loaderimg').style.display = 'none'\r\n            } else {\r\n              alert(\"Something is wrong.\")\r\n            }\r\n\r\n          },\r\n          (error) => {\r\n            //setError({ error })\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  if (!isUserLoggedIn()) {\r\n    return (\r\n      <div className='auth-wrapper auth-v2'>\r\n        <Row className='auth-inner m-0'>\r\n          {/* <Link  to='/index' className='brand-logo' onClick={e => e.preventDefault()}> */}\r\n          <Link to='/index' className='brand-logo'>\r\n            <CardImg top src={signin} className='SignLogo' alt='card1' />\r\n            {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\r\n          </Link>\r\n          <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n            <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n              <img className='img-fluid' src={source} alt='Login V2' />\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n            <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n              <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n                Forgot Password?\r\n              </CardTitle>\r\n              <CardText className='mb-2'>\r\n                Can't log in? We'll send a recovery link to\r\n              </CardText>\r\n              <Form className='auth-forgot-password-form mt-2' onSubmit={handleSubmitCustom}>\r\n                <FormGroup>\r\n                  <Label className='form-label' for='login-email'>\r\n                    Email\r\n                  </Label>\r\n                  <Input type='email' id='login-email' autoFocus onChange={e => setEmail(e.target.value)} />\r\n                  <small style={{ color: \"red\" }}>{forgoterror}</small>\r\n                </FormGroup>\r\n                <Button.Ripple color='primary' type=\"submit\" id=\"btnforgot\" block>\r\n                  Send recovery link\r\n                </Button.Ripple>\r\n                <div className='demo-inline-spacing justify-content-between loader_mobileal' style={{ marginLeft: 30, display: 'none' }} id='loaderimg'>\r\n                  <Spinner color='primary' />\r\n                </div>\r\n              </Form>\r\n              <p className='text-center mt-2'>\r\n                <Link to='/login'>\r\n                  <ChevronLeft className='mr-25' size={14} />\r\n                  <span className='align-middle'>Back to login</span>\r\n                </Link>\r\n              </p>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  } else {\r\n    return <Redirect to='/' />\r\n  }\r\n}\r\n\r\nexport default ForgotPassword\r\n"]},"metadata":{},"sourceType":"module"}