{"ast":null,"code":"import { geometry as geom } from '@progress/kendo-drawing';\nimport { last } from '../../common';\nimport { X, Y } from '../../common/constants';\nvar StepLineMixin = {\n  calculateStepPoints: function calculateStepPoints(points) {\n    var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\n    var ref = categoryAxis.options;\n    var justified = ref.justified;\n    var vertical = ref.vertical;\n    var reverse = ref.reverse;\n    var stepAxis = vertical ? X : Y;\n    var axis = vertical ? Y : X;\n    var stepDir = reverse ? 2 : 1;\n    var dir = stepDir;\n    var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\n    var result = [previousPoint];\n\n    for (var idx = 1; idx < points.length; idx++) {\n      var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\n\n      if (previousPoint[stepAxis] !== point[stepAxis]) {\n        var stepPoint = new geom.Point();\n        stepPoint[stepAxis] = previousPoint[stepAxis];\n        stepPoint[axis] = point[axis];\n        result.push(stepPoint, point);\n      }\n\n      previousPoint = point;\n    }\n\n    if (!justified) {\n      result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\n    } else if (previousPoint !== last(result)) {\n      result.push(previousPoint);\n    }\n\n    return result;\n  }\n};\n\nfunction toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\n  var box = lintPoint.box;\n  var result = new geom.Point();\n  result[stepAxis] = box[stepAxis + stepDir];\n  result[axis] = box[axis + dir];\n  return result;\n}\n\nexport default StepLineMixin;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/chart/line-chart/step-line-mixin.js"],"names":["geometry","geom","last","X","Y","StepLineMixin","calculateStepPoints","points","categoryAxis","parent","plotArea","seriesCategoryAxis","series","ref","options","justified","vertical","reverse","stepAxis","axis","stepDir","dir","previousPoint","toGeometryPoint","result","idx","length","point","stepPoint","Point","push","lintPoint","box"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,IAArB,QAAiC,yBAAjC;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,CAAT,EAAYC,CAAZ,QAAqB,wBAArB;AAEA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,mBAAmB,EAAE,6BAASC,MAAT,EAAiB;AAClC,QAAIC,YAAY,GAAG,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,kBAArB,CAAwC,KAAKC,MAA7C,CAAnB;AACA,QAAIC,GAAG,GAAGL,YAAY,CAACM,OAAvB;AACA,QAAIC,SAAS,GAAGF,GAAG,CAACE,SAApB;AACA,QAAIC,QAAQ,GAAGH,GAAG,CAACG,QAAnB;AACA,QAAIC,OAAO,GAAGJ,GAAG,CAACI,OAAlB;AAEA,QAAIC,QAAQ,GAAGF,QAAQ,GAAGb,CAAH,GAAOC,CAA9B;AACA,QAAIe,IAAI,GAAGH,QAAQ,GAAGZ,CAAH,GAAOD,CAA1B;AACA,QAAIiB,OAAO,GAAGH,OAAO,GAAG,CAAH,GAAO,CAA5B;AACA,QAAII,GAAG,GAAGD,OAAV;AAEA,QAAIE,aAAa,GAAGC,eAAe,CAAChB,MAAM,CAAC,CAAD,CAAP,EAAYW,QAAZ,EAAsBE,OAAtB,EAA+BD,IAA/B,EAAqCE,GAArC,CAAnC;AACA,QAAIG,MAAM,GAAG,CAAEF,aAAF,CAAb;;AAEA,SAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGlB,MAAM,CAACmB,MAA/B,EAAuCD,GAAG,EAA1C,EAA8C;AAC1C,UAAIE,KAAK,GAAGJ,eAAe,CAAChB,MAAM,CAACkB,GAAD,CAAP,EAAcP,QAAd,EAAwBE,OAAxB,EAAiCD,IAAjC,EAAuCE,GAAvC,CAA3B;;AAEA,UAAIC,aAAa,CAACJ,QAAD,CAAb,KAA4BS,KAAK,CAACT,QAAD,CAArC,EAAiD;AAC7C,YAAIU,SAAS,GAAG,IAAI3B,IAAI,CAAC4B,KAAT,EAAhB;AACAD,QAAAA,SAAS,CAACV,QAAD,CAAT,GAAsBI,aAAa,CAACJ,QAAD,CAAnC;AACAU,QAAAA,SAAS,CAACT,IAAD,CAAT,GAAkBQ,KAAK,CAACR,IAAD,CAAvB;AAEAK,QAAAA,MAAM,CAACM,IAAP,CAAYF,SAAZ,EAAuBD,KAAvB;AACH;;AAEDL,MAAAA,aAAa,GAAGK,KAAhB;AACH;;AAED,QAAI,CAACZ,SAAL,EAAgB;AACZS,MAAAA,MAAM,CAACM,IAAP,CAAYP,eAAe,CAACrB,IAAI,CAACK,MAAD,CAAL,EAAeW,QAAf,EAAyBE,OAAzB,EAAkCD,IAAlC,EAAwCF,OAAO,GAAG,CAAH,GAAO,CAAtD,CAA3B;AACH,KAFD,MAEO,IAAIK,aAAa,KAAKpB,IAAI,CAACsB,MAAD,CAA1B,EAAoC;AACvCA,MAAAA,MAAM,CAACM,IAAP,CAAYR,aAAZ;AACH;;AAED,WAAOE,MAAP;AAEH;AAtCe,CAApB;;AAyCA,SAASD,eAAT,CAAyBQ,SAAzB,EAAoCb,QAApC,EAA8CE,OAA9C,EAAuDD,IAAvD,EAA6DE,GAA7D,EAAkE;AAC9D,MAAIW,GAAG,GAAGD,SAAS,CAACC,GAApB;AACA,MAAIR,MAAM,GAAG,IAAIvB,IAAI,CAAC4B,KAAT,EAAb;AAEAL,EAAAA,MAAM,CAACN,QAAD,CAAN,GAAmBc,GAAG,CAACd,QAAQ,GAAGE,OAAZ,CAAtB;AACAI,EAAAA,MAAM,CAACL,IAAD,CAAN,GAAea,GAAG,CAACb,IAAI,GAAGE,GAAR,CAAlB;AAEA,SAAOG,MAAP;AACH;;AAED,eAAenB,aAAf","sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\r\n\r\nimport { last } from '../../common';\r\nimport { X, Y } from '../../common/constants';\r\n\r\nvar StepLineMixin = {\r\n    calculateStepPoints: function(points) {\r\n        var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\r\n        var ref = categoryAxis.options;\r\n        var justified = ref.justified;\r\n        var vertical = ref.vertical;\r\n        var reverse = ref.reverse;\r\n\r\n        var stepAxis = vertical ? X : Y;\r\n        var axis = vertical ? Y : X;\r\n        var stepDir = reverse ? 2 : 1;\r\n        var dir = stepDir;\r\n\r\n        var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\r\n        var result = [ previousPoint ];\r\n\r\n        for (var idx = 1; idx < points.length; idx++) {\r\n            var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\r\n\r\n            if (previousPoint[stepAxis] !== point[stepAxis]) {\r\n                var stepPoint = new geom.Point();\r\n                stepPoint[stepAxis] = previousPoint[stepAxis];\r\n                stepPoint[axis] = point[axis];\r\n\r\n                result.push(stepPoint, point);\r\n            }\r\n\r\n            previousPoint = point;\r\n        }\r\n\r\n        if (!justified) {\r\n            result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\r\n        } else if (previousPoint !== last(result)) {\r\n            result.push(previousPoint);\r\n        }\r\n\r\n        return result;\r\n\r\n    }\r\n};\r\n\r\nfunction toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\r\n    var box = lintPoint.box;\r\n    var result = new geom.Point();\r\n\r\n    result[stepAxis] = box[stepAxis + stepDir];\r\n    result[axis] = box[axis + dir];\r\n\r\n    return result;\r\n}\r\n\r\nexport default StepLineMixin;"]},"metadata":{},"sourceType":"module"}