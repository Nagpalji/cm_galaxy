{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\views\\\\manage-user\\\\user\\\\list\\\\columns.js\",\n    _this = this;\n\n// // ** React Imports\n// import { Link } from 'react-router-dom'\n// // ** Custom Components\n// import Avatar from '@components/avatar'\n// // ** Store & Actions\n// import { getUser, deleteUser } from '../store/action'\n// import { store } from '@store/storeConfig/store'\n// // ** Third Party Components\n// import { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n// import { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\n// // icon\n// import { FaUserEdit, FaTrash } from \"react-icons/fa\"\n// // ** Renders Client Columns\n// const renderClient = row => {\n//   const stateNum = Math.floor(Math.random() * 6),\n//     states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n//     color = states[stateNum]\n//   if (row.avatar.length) {\n//     return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\n//   } else {\n//     return <Avatar color={color || 'primary'} className='mr-1' content={row.fullName || 'John Doe'} initials />\n//   }\n// }\n// // ** Renders Role Columns\n// // const renderRole = row => {\n// //   const roleObj = {\n// //     subscriber: {\n// //       class: 'text-primary',\n// //       icon: User\n// //     },\n// //     maintainer: {\n// //       class: 'text-success',\n// //       icon: Database\n// //     },\n// //     editor: {\n// //       class: 'text-info',\n// //       icon: Edit2\n// //     },\n// //     author: {\n// //       class: 'text-warning',\n// //       icon: Settings\n// //     },\n// //     admin: {\n// //       class: 'text-danger',\n// //       icon: Slack\n// //     }\n// //   }\n// //   const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n// //   return (\n// //     <span className='text-truncate text-capitalize align-middle'>\n// //       <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} mr-50`} />\n// //       {row.role}\n// //     </span>\n// //   )\n// // }\n// const statusObj = {\n//   pending: 'light-warning',\n//   active: 'light-success',\n//   inactive: 'light-secondary'\n// }\n// export const columns = [\n//   {\n//     name: 'Advertiser',\n//     minWidth: '120px',\n//     selector: 'email',\n//     sortable: true\n//     // cell: row => row.email\n//   },\n//   {\n//     name: 'User Name',\n//     minWidth: '120px',\n//     selector: 'email',\n//     sortable: true\n//     // cell: row => row.email\n//   },\n//   {\n//     name: 'Brand Name',\n//     minWidth: '120px',\n//     selector: 'brand_name',\n//     sortable: true\n//     // cell: row => row.fullName\n//   },\n//   {\n//     name: 'User Type',\n//     minWidth: '120px',\n//     selector: 'user_type',\n//     sortable: true\n//     // cell: row => (\n//     //   <Badge className='text-capitalize' color={statusObj[row.user_type]} pill>\n//     //     {row.status}\n//     //   </Badge>\n//     // )\n//   },\n//   {\n//     name: 'Actions',\n//     minWidth: '75px',\n//     cell: row => (\n//       <UncontrolledDropdown>\n//         <DropdownToggle tag='div' className='btn btn-sm'>\n//           <MoreVertical size={18} className='cursor-pointer' />\n//         </DropdownToggle>\n//         <DropdownMenu right>\n//           <DropdownItem\n//             tag={Link}\n//             to={`/manage-user/user/edit/${row.id}`}\n//             className='w-100'\n//             onClick={() => store.dispatch(getUser(row.id))} >\n//             <FaUserEdit size={20} className='mr-50' />\n//             <span className='align-middle'>Edit User</span>\n//           </DropdownItem>\n//           <DropdownItem className='w-100' onClick={() => store.dispatch(deleteUser(row.id))}>\n//             <FaTrash size={16} className='mr-50' />\n//             <span className='align-middle'>Delete</span>\n//           </DropdownItem>\n//         </DropdownMenu>\n//       </UncontrolledDropdown>\n//     )\n//   }\n// ]\n// ** React Imports\nimport { Link } from 'react-router-dom'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Store & Actions\n\nimport { getUser, deleteUser } from '../store/action';\nimport { store } from '@store/storeConfig/store'; // ** Third Party Components\n\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'; // icon\n\nimport { FaUserEdit, FaTrash } from \"react-icons/fa\"; // ** Renders Client Columns\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar renderClient = function renderClient(row) {\n  var stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum];\n\n  if (row.avatar.length) {\n    return /*#__PURE__*/_jsxDEV(Avatar, {\n      className: \"mr-1\",\n      img: row.avatar,\n      width: \"32\",\n      height: \"32\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, _this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Avatar, {\n      color: color || 'primary',\n      className: \"mr-1\",\n      content: row.fullName || 'John Doe',\n      initials: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, _this);\n  }\n}; // ** Renders Role Columns\n// const renderRole = row => {\n//   const roleObj = {\n//     subscriber: {\n//       class: 'text-primary',\n//       icon: User\n//     },\n//     maintainer: {\n//       class: 'text-success',\n//       icon: Database\n//     },\n//     editor: {\n//       class: 'text-info',\n//       icon: Edit2\n//     },\n//     author: {\n//       class: 'text-warning',\n//       icon: Settings\n//     },\n//     admin: {\n//       class: 'text-danger',\n//       icon: Slack\n//     }\n//   }\n//   const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n//   return (\n//     <span className='text-truncate text-capitalize align-middle'>\n//       <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} mr-50`} />\n//       {row.role}\n//     </span>\n//   )\n// }\n\n\nvar statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n};\nvar dat = [{\n  name: \"hello\"\n}, {\n  name: \"hello2\"\n}, {\n  name: \"hello3\"\n}];\nexport var columns = [{\n  name: 'Advertisers',\n  minWidth: '120px',\n  selector: 'email',\n  sortable: true,\n  cell: function cell(row) {\n    return row.email;\n  }\n}, {\n  name: 'User Name',\n  minWidth: '120px',\n  selector: 'email',\n  sortable: true,\n  cell: function cell(row) {\n    return row.email;\n  }\n}, {\n  name: 'Brand',\n  minWidth: '120px',\n  selector: 'brand_name',\n  sortable: true,\n  cell: function cell(row) {\n    return row.brand_name;\n  }\n}, {\n  name: 'User Type',\n  minWidth: '120px',\n  selector: 'user_type',\n  sortable: true,\n  cell: function cell(row) {\n    return row.user_type;\n  } // <Badge className='text-capitalize' color={statusObj[row.status]} pill>\n  //   {row.status}\n  // </Badge>\n\n}, {\n  name: 'Actions',\n  minWidth: '75px',\n  cell: function cell(row) {\n    return /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n        tag: \"div\",\n        className: \"btn btn-sm\",\n        children: /*#__PURE__*/_jsxDEV(MoreVertical, {\n          size: 18,\n          className: \"cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        right: true,\n        children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n          tag: Link,\n          to: \"/manage-user/user/edit/\".concat(row.id),\n          className: \"w-100\",\n          onClick: function onClick() {\n            return store.dispatch(getUser(row.id));\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {\n            size: 20,\n            className: \"mr-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle\",\n            children: \"Edit User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n          className: \"w-100\",\n          onClick: function onClick() {\n            return store.dispatch(deleteUser(row.id));\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaTrash, {\n            size: 16,\n            className: \"mr-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, _this);\n  }\n}];","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/manage-user/user/list/columns.js"],"names":["Link","Avatar","getUser","deleteUser","store","Badge","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Slack","User","Settings","Database","Edit2","MoreVertical","FileText","Trash2","Archive","FaUserEdit","FaTrash","renderClient","row","stateNum","Math","floor","random","states","color","avatar","length","fullName","statusObj","pending","active","inactive","dat","name","columns","minWidth","selector","sortable","cell","email","brand_name","user_type","id","dispatch"],"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","sourcesContent":["// // ** React Imports\r\n// import { Link } from 'react-router-dom'\r\n\r\n// // ** Custom Components\r\n// import Avatar from '@components/avatar'\r\n\r\n// // ** Store & Actions\r\n// import { getUser, deleteUser } from '../store/action'\r\n// import { store } from '@store/storeConfig/store'\r\n\r\n// // ** Third Party Components\r\n// import { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n// import { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\n// // icon\r\n// import { FaUserEdit, FaTrash } from \"react-icons/fa\"\r\n// // ** Renders Client Columns\r\n// const renderClient = row => {\r\n//   const stateNum = Math.floor(Math.random() * 6),\r\n//     states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n//     color = states[stateNum]\r\n\r\n//   if (row.avatar.length) {\r\n//     return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\r\n//   } else {\r\n//     return <Avatar color={color || 'primary'} className='mr-1' content={row.fullName || 'John Doe'} initials />\r\n//   }\r\n// }\r\n\r\n// // ** Renders Role Columns\r\n// // const renderRole = row => {\r\n// //   const roleObj = {\r\n// //     subscriber: {\r\n// //       class: 'text-primary',\r\n// //       icon: User\r\n// //     },\r\n// //     maintainer: {\r\n// //       class: 'text-success',\r\n// //       icon: Database\r\n// //     },\r\n// //     editor: {\r\n// //       class: 'text-info',\r\n// //       icon: Edit2\r\n// //     },\r\n// //     author: {\r\n// //       class: 'text-warning',\r\n// //       icon: Settings\r\n// //     },\r\n// //     admin: {\r\n// //       class: 'text-danger',\r\n// //       icon: Slack\r\n// //     }\r\n// //   }\r\n\r\n// //   const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n// //   return (\r\n// //     <span className='text-truncate text-capitalize align-middle'>\r\n// //       <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} mr-50`} />\r\n// //       {row.role}\r\n// //     </span>\r\n// //   )\r\n// // }\r\n\r\n// const statusObj = {\r\n//   pending: 'light-warning',\r\n//   active: 'light-success',\r\n//   inactive: 'light-secondary'\r\n// }\r\n\r\n// export const columns = [\r\n//   {\r\n//     name: 'Advertiser',\r\n//     minWidth: '120px',\r\n//     selector: 'email',\r\n//     sortable: true\r\n//     // cell: row => row.email\r\n//   },\r\n\r\n//   {\r\n//     name: 'User Name',\r\n//     minWidth: '120px',\r\n//     selector: 'email',\r\n//     sortable: true\r\n//     // cell: row => row.email\r\n//   },\r\n//   {\r\n//     name: 'Brand Name',\r\n//     minWidth: '120px',\r\n//     selector: 'brand_name',\r\n//     sortable: true\r\n//     // cell: row => row.fullName\r\n//   },\r\n//   {\r\n//     name: 'User Type',\r\n//     minWidth: '120px',\r\n//     selector: 'user_type',\r\n//     sortable: true\r\n//     // cell: row => (\r\n//     //   <Badge className='text-capitalize' color={statusObj[row.user_type]} pill>\r\n//     //     {row.status}\r\n//     //   </Badge>\r\n//     // )\r\n//   },\r\n//   {\r\n//     name: 'Actions',\r\n//     minWidth: '75px',\r\n//     cell: row => (\r\n//       <UncontrolledDropdown>\r\n//         <DropdownToggle tag='div' className='btn btn-sm'>\r\n//           <MoreVertical size={18} className='cursor-pointer' />\r\n//         </DropdownToggle>\r\n//         <DropdownMenu right>\r\n\r\n//           <DropdownItem\r\n//             tag={Link}\r\n//             to={`/manage-user/user/edit/${row.id}`}\r\n//             className='w-100'\r\n//             onClick={() => store.dispatch(getUser(row.id))} >\r\n//             <FaUserEdit size={20} className='mr-50' />\r\n//             <span className='align-middle'>Edit User</span>\r\n//           </DropdownItem>\r\n\r\n//           <DropdownItem className='w-100' onClick={() => store.dispatch(deleteUser(row.id))}>\r\n//             <FaTrash size={16} className='mr-50' />\r\n//             <span className='align-middle'>Delete</span>\r\n//           </DropdownItem>\r\n//         </DropdownMenu>\r\n//       </UncontrolledDropdown>\r\n//     )\r\n//   }\r\n// ]\r\n// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { getUser, deleteUser } from '../store/action'\r\nimport { store } from '@store/storeConfig/store'\r\n\r\n// ** Third Party Components\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\n// icon\r\nimport { FaUserEdit, FaTrash } from \"react-icons/fa\"\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row.avatar.length) {\r\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return <Avatar color={color || 'primary'} className='mr-1' content={row.fullName || 'John Doe'} initials />\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\n// const renderRole = row => {\r\n//   const roleObj = {\r\n//     subscriber: {\r\n//       class: 'text-primary',\r\n//       icon: User\r\n//     },\r\n//     maintainer: {\r\n//       class: 'text-success',\r\n//       icon: Database\r\n//     },\r\n//     editor: {\r\n//       class: 'text-info',\r\n//       icon: Edit2\r\n//     },\r\n//     author: {\r\n//       class: 'text-warning',\r\n//       icon: Settings\r\n//     },\r\n//     admin: {\r\n//       class: 'text-danger',\r\n//       icon: Slack\r\n//     }\r\n//   }\r\n\r\n//   const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n//   return (\r\n//     <span className='text-truncate text-capitalize align-middle'>\r\n//       <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} mr-50`} />\r\n//       {row.role}\r\n//     </span>\r\n//   )\r\n// }\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\nconst dat = [\r\n  {\r\n    name:\"hello\"\r\n  },\r\n   {\r\n    name:\"hello2\"\r\n  },\r\n    \r\n  {name:\"hello3\"\r\n}\r\n]\r\nexport const columns = [\r\n  {\r\n    name: 'Advertisers',\r\n    minWidth: '120px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: row => row.email\r\n  },\r\n  {\r\n    name: 'User Name',\r\n    minWidth: '120px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: row => row.email\r\n  },\r\n  {\r\n    name: 'Brand',\r\n    minWidth: '120px',\r\n    selector: 'brand_name',\r\n    sortable: true,\r\n    cell: row => row.brand_name\r\n  },\r\n  {\r\n    name: 'User Type',\r\n    minWidth: '120px',\r\n    selector: 'user_type',\r\n    sortable: true,\r\n    cell: row => row.user_type\r\n      // <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n      //   {row.status}\r\n      // </Badge>\r\n    \r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '75px',\r\n    cell: row => (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle tag='div' className='btn btn-sm'>\r\n          <MoreVertical size={18} className='cursor-pointer' />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n\r\n          <DropdownItem\r\n            tag={Link}\r\n            to={`/manage-user/user/edit/${row.id}`}\r\n            className='w-100'\r\n            onClick={() => store.dispatch(getUser(row.id))} >\r\n            <FaUserEdit size={20} className='mr-50' />\r\n            <span className='align-middle'>Edit User</span>\r\n          </DropdownItem>\r\n\r\n          <DropdownItem className='w-100' onClick={() => store.dispatch(deleteUser(row.id))}>\r\n            <FaTrash size={16} className='mr-50' />\r\n            <span className='align-middle'>Delete</span>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    )\r\n  }\r\n]\r\n"]},"metadata":{},"sourceType":"module"}