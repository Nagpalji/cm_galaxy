{"ast":null,"code":"import axios from'axios';// ** Fetch Events\nexport var fetchEvents=function fetchEvents(calendars){return function(dispatch){axios.get('/apps/calendar/events',{calendars:calendars}).then(function(response){dispatch({type:'FETCH_EVENTS',events:response.data});});};};// ** Add Event\nexport var addEvent=function addEvent(event){return function(dispatch,getState){axios.post('/apps/calendar/add-event',{event:event}).then(function(){dispatch({type:'ADD_EVENT'});dispatch(fetchEvents(getState().calendar.selectedCalendars));});};};// ** Update Event\nexport var updateEvent=function updateEvent(event){return function(dispatch){axios.post('/apps/calendar/update-event',{event:event}).then(function(){dispatch({type:'UPDATE_EVENT'});});};};// ** Filter Events\nexport var updateFilter=function updateFilter(filter){return function(dispatch,getState){dispatch({type:'UPDATE_FILTERS',filter:filter});dispatch(fetchEvents(getState().calendar.selectedCalendars));};};// ** Add/Remove All Filters\nexport var updateAllFilters=function updateAllFilters(value){return function(dispatch,getState){dispatch({type:'UPDATE_ALL_FILTERS',value:value});dispatch(fetchEvents(getState().calendar.selectedCalendars));};};// ** remove Event\nexport var removeEvent=function removeEvent(id){return function(dispatch){axios.delete('/apps/calendar/remove-event',{id:id}).then(function(){dispatch({type:'REMOVE_EVENT'});});};};// ** Select Event (get event data on click)\nexport var selectEvent=function selectEvent(event){return function(dispatch){dispatch({type:'SELECT_EVENT',event:event});};};","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/apps/calendar/store/actions/index.js"],"names":["axios","fetchEvents","calendars","dispatch","get","then","response","type","events","data","addEvent","event","getState","post","calendar","selectedCalendars","updateEvent","updateFilter","filter","updateAllFilters","value","removeEvent","id","delete","selectEvent"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,SAAS,CAAI,CACtC,MAAO,UAAAC,QAAQ,CAAI,CACjBH,KAAK,CAACI,GAAN,CAAU,uBAAV,CAAmC,CAAEF,SAAS,CAATA,SAAF,CAAnC,EAAkDG,IAAlD,CAAuD,SAAAC,QAAQ,CAAI,CACjEH,QAAQ,CAAC,CACPI,IAAI,CAAE,cADC,CAEPC,MAAM,CAAEF,QAAQ,CAACG,IAFV,CAAD,CAAR,CAID,CALD,EAMD,CAPD,CAQD,CATM,CAWP;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CAC/B,MAAO,UAACR,QAAD,CAAWS,QAAX,CAAwB,CAC7BZ,KAAK,CAACa,IAAN,CAAW,0BAAX,CAAuC,CAAEF,KAAK,CAALA,KAAF,CAAvC,EAAkDN,IAAlD,CAAuD,UAAM,CAC3DF,QAAQ,CAAC,CACPI,IAAI,CAAE,WADC,CAAD,CAAR,CAGAJ,QAAQ,CAACF,WAAW,CAACW,QAAQ,GAAGE,QAAX,CAAoBC,iBAArB,CAAZ,CAAR,CACD,CALD,EAMD,CAPD,CAQD,CATM,CAWP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAL,KAAK,CAAI,CAClC,MAAO,UAAAR,QAAQ,CAAI,CACjBH,KAAK,CAACa,IAAN,CAAW,6BAAX,CAA0C,CAAEF,KAAK,CAALA,KAAF,CAA1C,EAAqDN,IAArD,CAA0D,UAAM,CAC9DF,QAAQ,CAAC,CACPI,IAAI,CAAE,cADC,CAAD,CAAR,CAGD,CAJD,EAKD,CAND,CAOD,CARM,CAUP;AACA,MAAO,IAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,MAAM,CAAI,CACpC,MAAO,UAACf,QAAD,CAAWS,QAAX,CAAwB,CAC7BT,QAAQ,CAAC,CACPI,IAAI,CAAE,gBADC,CAEPW,MAAM,CAANA,MAFO,CAAD,CAAR,CAIAf,QAAQ,CAACF,WAAW,CAACW,QAAQ,GAAGE,QAAX,CAAoBC,iBAArB,CAAZ,CAAR,CACD,CAND,CAOD,CARM,CAUP;AACA,MAAO,IAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,KAAK,CAAI,CACvC,MAAO,UAACjB,QAAD,CAAWS,QAAX,CAAwB,CAC7BT,QAAQ,CAAC,CACPI,IAAI,CAAE,oBADC,CAEPa,KAAK,CAALA,KAFO,CAAD,CAAR,CAIAjB,QAAQ,CAACF,WAAW,CAACW,QAAQ,GAAGE,QAAX,CAAoBC,iBAArB,CAAZ,CAAR,CACD,CAND,CAOD,CARM,CAUP;AACA,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,EAAE,CAAI,CAC/B,MAAO,UAAAnB,QAAQ,CAAI,CACjBH,KAAK,CAACuB,MAAN,CAAa,6BAAb,CAA4C,CAAED,EAAE,CAAFA,EAAF,CAA5C,EAAoDjB,IAApD,CAAyD,UAAM,CAC7DF,QAAQ,CAAC,CACPI,IAAI,CAAE,cADC,CAAD,CAAR,CAGD,CAJD,EAKD,CAND,CAOD,CARM,CAUP;AACA,MAAO,IAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAb,KAAK,CAAI,CAClC,MAAO,UAAAR,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CACPI,IAAI,CAAE,cADC,CAEPI,KAAK,CAALA,KAFO,CAAD,CAAR,CAID,CALD,CAMD,CAPM","sourcesContent":["import axios from 'axios'\r\n\r\n// ** Fetch Events\r\nexport const fetchEvents = calendars => {\r\n  return dispatch => {\r\n    axios.get('/apps/calendar/events', { calendars }).then(response => {\r\n      dispatch({\r\n        type: 'FETCH_EVENTS',\r\n        events: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Add Event\r\nexport const addEvent = event => {\r\n  return (dispatch, getState) => {\r\n    axios.post('/apps/calendar/add-event', { event }).then(() => {\r\n      dispatch({\r\n        type: 'ADD_EVENT'\r\n      })\r\n      dispatch(fetchEvents(getState().calendar.selectedCalendars))\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update Event\r\nexport const updateEvent = event => {\r\n  return dispatch => {\r\n    axios.post('/apps/calendar/update-event', { event }).then(() => {\r\n      dispatch({\r\n        type: 'UPDATE_EVENT'\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Filter Events\r\nexport const updateFilter = filter => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: 'UPDATE_FILTERS',\r\n      filter\r\n    })\r\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\r\n  }\r\n}\r\n\r\n// ** Add/Remove All Filters\r\nexport const updateAllFilters = value => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: 'UPDATE_ALL_FILTERS',\r\n      value\r\n    })\r\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\r\n  }\r\n}\r\n\r\n// ** remove Event\r\nexport const removeEvent = id => {\r\n  return dispatch => {\r\n    axios.delete('/apps/calendar/remove-event', { id }).then(() => {\r\n      dispatch({\r\n        type: 'REMOVE_EVENT'\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Select Event (get event data on click)\r\nexport const selectEvent = event => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SELECT_EVENT',\r\n      event\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}