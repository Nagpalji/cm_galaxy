{"ast":null,"code":"import _defineProperty from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt';\nvar config = useJwt.jwtConfig; // ** Handle User Login\n\nexport var handleLogin = function handleLogin(data) {\n  return function (dispatch) {\n    var _dispatch;\n\n    dispatch((_dispatch = {\n      type: 'LOGIN',\n      data: data,\n      config: config\n    }, _defineProperty(_dispatch, config.storageTokenKeyName, data[config.storageTokenKeyName]), _defineProperty(_dispatch, config.storageRefreshTokenKeyName, data[config.storageRefreshTokenKeyName]), _dispatch)); // ** Add to user, accessToken & refreshToken to localStorage\n\n    localStorage.setItem('userData', JSON.stringify(data));\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken));\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken));\n    var d = new Date();\n    d.setDate(d.getDate() - 7);\n    var d1 = new Date();\n    d1.setDate(d1.getDate() - 1);\n    localStorage.setItem(\"sy\", d.getFullYear());\n    localStorage.setItem(\"sm\", d.getMonth() + 1);\n    localStorage.setItem(\"sd\", d.getDate());\n    localStorage.setItem(\"ey\", d1.getFullYear());\n    localStorage.setItem(\"em\", d1.getMonth() + 1);\n    localStorage.setItem(\"ed\", d1.getDate()); // sessionStorage.setItem(\"nam\", \"Overall Snapshot\")\n  };\n}; // ** Handle User Logout\n\nexport var handleLogout = function handleLogout() {\n  return function (dispatch) {\n    var _dispatch2;\n\n    dispatch((_dispatch2 = {\n      type: 'LOGOUT'\n    }, _defineProperty(_dispatch2, config.storageTokenKeyName, null), _defineProperty(_dispatch2, config.storageRefreshTokenKeyName, null), _dispatch2)); // ** Remove user, accessToken & refreshToken from localStorage\n\n    localStorage.removeItem('userData');\n    localStorage.removeItem('sd');\n    localStorage.removeItem('sm');\n    localStorage.removeItem('sy');\n    localStorage.removeItem('ed');\n    localStorage.removeItem('em');\n    localStorage.removeItem('ey');\n    localStorage.removeItem(config.storageTokenKeyName);\n    localStorage.removeItem(config.storageRefreshTokenKeyName);\n  };\n};","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/src/redux/actions/auth/index.js"],"names":["useJwt","config","jwtConfig","handleLogin","data","dispatch","type","storageTokenKeyName","storageRefreshTokenKeyName","localStorage","setItem","JSON","stringify","accessToken","refreshToken","d","Date","setDate","getDate","d1","getFullYear","getMonth","handleLogout","removeItem"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,SAAtB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACjC,SAAO,UAAAC,QAAQ,EAAI;AAAA;;AACjBA,IAAAA,QAAQ;AACNC,MAAAA,IAAI,EAAE,OADA;AAENF,MAAAA,IAAI,EAAJA,IAFM;AAGNH,MAAAA,MAAM,EAANA;AAHM,kCAILA,MAAM,CAACM,mBAJF,EAIwBH,IAAI,CAACH,MAAM,CAACM,mBAAR,CAJ5B,8BAKLN,MAAM,CAACO,0BALF,EAK+BJ,IAAI,CAACH,MAAM,CAACO,0BAAR,CALnC,cAAR,CADiB,CASjB;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAjC;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqBT,MAAM,CAACM,mBAA5B,EAAiDI,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACS,WAApB,CAAjD;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqBT,MAAM,CAACO,0BAA5B,EAAwDG,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACU,YAApB,CAAxD;AAEA,QAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAc,CAAxB;AACA,QAAMC,EAAE,GAAG,IAAIH,IAAJ,EAAX;AACAG,IAAAA,EAAE,CAACF,OAAH,CAAWE,EAAE,CAACD,OAAH,KAAe,CAA1B;AAEAT,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BK,CAAC,CAACK,WAAF,EAA3B;AACAX,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BK,CAAC,CAACM,QAAF,KAAe,CAA1C;AACAZ,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BK,CAAC,CAACG,OAAF,EAA3B;AACAT,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BS,EAAE,CAACC,WAAH,EAA3B;AACAX,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BS,EAAE,CAACE,QAAH,KAAgB,CAA3C;AACAZ,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BS,EAAE,CAACD,OAAH,EAA3B,EAxBiB,CAyBjB;AAED,GA3BD;AA4BD,CA7BM,C,CA+BP;;AACA,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO,UAAAjB,QAAQ,EAAI;AAAA;;AACjBA,IAAAA,QAAQ;AAAGC,MAAAA,IAAI,EAAE;AAAT,mCAAoBL,MAAM,CAACM,mBAA3B,EAAiD,IAAjD,+BAAwDN,MAAM,CAACO,0BAA/D,EAA4F,IAA5F,eAAR,CADiB,CAGjB;;AACAC,IAAAA,YAAY,CAACc,UAAb,CAAwB,UAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwB,IAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwB,IAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwB,IAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwB,IAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwB,IAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwB,IAAxB;AACAd,IAAAA,YAAY,CAACc,UAAb,CAAwBtB,MAAM,CAACM,mBAA/B;AACAE,IAAAA,YAAY,CAACc,UAAb,CAAwBtB,MAAM,CAACO,0BAA/B;AACD,GAbD;AAcD,CAfM","sourcesContent":["// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n    \n    const d = new Date()\n    d.setDate(d.getDate() - 7)\n    const d1 = new Date()\n    d1.setDate(d1.getDate() - 1)\n\n    localStorage.setItem(\"sy\", d.getFullYear())\n    localStorage.setItem(\"sm\", d.getMonth() + 1)\n    localStorage.setItem(\"sd\", d.getDate())\n    localStorage.setItem(\"ey\", d1.getFullYear())\n    localStorage.setItem(\"em\", d1.getMonth() + 1)\n    localStorage.setItem(\"ed\", d1.getDate())\n    // sessionStorage.setItem(\"nam\", \"Overall Snapshot\")\n\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem('sd')\n    localStorage.removeItem('sm')\n    localStorage.removeItem('sy')\n    localStorage.removeItem('ed')\n    localStorage.removeItem('em')\n    localStorage.removeItem('ey')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}