{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\n//** React Imports\nimport { useEffect } from 'react'; // ** Actions & Store\n\nimport { handleSkin } from '../../redux/actions/layout';\nimport { useSelector, useDispatch } from 'react-redux';\nexport var useSkin = function useSkin() {\n  _s();\n\n  var dispatch = useDispatch();\n  var skin = useSelector(function (state) {\n    return state.layout.skin;\n  }); // ** Return a wrapped version of useState's setter function\n\n  var setValue = function setValue(value) {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      var valueToStore = value instanceof Function ? value(skin) : value; // ** Save to store & local storage\n\n      dispatch(handleSkin(value));\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore));\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  useEffect(function () {\n    var _element$classList;\n\n    // ** Get Body Tag\n    var element = window.document.body; // ** Define classnames for skins\n\n    var classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }; // ** Remove all classes from Body on mount\n\n    (_element$classList = element.classList).remove.apply(_element$classList, _toConsumableArray(element.classList)); // ** If skin is not light add skin class\n\n\n    if (skin !== 'light') {\n      element.classList.add(classNames[skin]);\n    }\n  }, [skin]);\n  return [skin, setValue];\n};\n\n_s(useSkin, \"/Z7p8ZwAD+8RYthZwSrfhv1jDSw=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/utility/hooks/useSkin.js"],"names":["useEffect","handleSkin","useSelector","useDispatch","useSkin","dispatch","skin","state","layout","setValue","value","valueToStore","Function","window","localStorage","setItem","JSON","stringify","error","console","log","element","document","body","classNames","dark","bordered","classList","remove","add"],"mappings":";;;;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAC3B,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,MAAMG,IAAI,GAAGJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAN,CAAaF,IAAjB;AAAA,GAAN,CAAxB,CAF2B,CAI3B;;AACA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,QAAI;AACF;AACA,UAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACJ,IAAD,CAAjC,GAA0CI,KAA/D,CAFE,CAGF;;AACAL,MAAAA,QAAQ,CAACJ,UAAU,CAACS,KAAD,CAAX,CAAR;AACAG,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCC,IAAI,CAACC,SAAL,CAAeN,YAAf,CAApC;AACD,KAND,CAME,OAAOO,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaAlB,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd;AACA,QAAMqB,OAAO,GAAGR,MAAM,CAACS,QAAP,CAAgBC,IAAhC,CAFc,CAId;;AACA,QAAMC,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAE,aADW;AAEjBC,MAAAA,QAAQ,EAAE,iBAFO;AAGjB,mBAAa;AAHI,KAAnB,CALc,CAWd;;AACA,0BAAAL,OAAO,CAACM,SAAR,EAAkBC,MAAlB,8CAA4BP,OAAO,CAACM,SAApC,GAZc,CAcd;;;AACA,QAAIrB,IAAI,KAAK,OAAb,EAAsB;AACpBe,MAAAA,OAAO,CAACM,SAAR,CAAkBE,GAAlB,CAAsBL,UAAU,CAAClB,IAAD,CAAhC;AACD;AACF,GAlBQ,EAkBN,CAACA,IAAD,CAlBM,CAAT;AAoBA,SAAO,CAACA,IAAD,EAAOG,QAAP,CAAP;AACD,CAvCM;;GAAML,O;UACMD,W,EACJD,W","sourcesContent":["//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Actions & Store\r\nimport { handleSkin } from '../../redux/actions/layout'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport const useSkin = () => {\r\n  const dispatch = useDispatch()\r\n  const skin = useSelector(state => state.layout.skin)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Save to store & local storage\r\n      dispatch(handleSkin(value))\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}