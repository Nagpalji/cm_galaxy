{"ast":null,"code":"import _objectSpread from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";// ** React Imports\nimport{Fragment}from'react';// ** Third Party Components\nimport classnames from'classnames';import{UncontrolledTooltip}from'reactstrap';// ** Custom Components\nimport Avatar from'@components/avatar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AvatarGroup=function AvatarGroup(props){// ** Props\nvar data=props.data,tag=props.tag,className=props.className;// ** Conditional Tag\nvar Tag=tag?tag:'div';// ** Render Data\nvar renderData=function renderData(){return data.map(function(item,i){var ItemTag=item.tag?item.tag:'div';return/*#__PURE__*/_jsxs(Fragment,{children:[item.title?/*#__PURE__*/_jsx(UncontrolledTooltip,{placement:item.placement,target:item.title.split(' ').join('-'),children:item.title}):null,!item.meta?/*#__PURE__*/_jsx(Avatar,_objectSpread(_objectSpread({tag:ItemTag,className:classnames('pull-up',_defineProperty({},item.className,item.className))},item.title?{id:item.title.split(' ').join('-')}:{}),{},{title:undefined,meta:undefined},item)):null,item.meta?/*#__PURE__*/_jsx(ItemTag,{className:\"d-flex align-items-center pl-1\",children:item.meta}):null]},i);});};return/*#__PURE__*/_jsx(Tag,{className:classnames('avatar-group',_defineProperty({},className,className)),children:renderData()});};export default AvatarGroup;// ** PropTypes","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/@core/components/avatar-group/index.js"],"names":["Fragment","classnames","UncontrolledTooltip","Avatar","AvatarGroup","props","data","tag","className","Tag","renderData","map","item","i","ItemTag","title","placement","split","join","meta","id","undefined"],"mappings":"6VAAA;AACA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,mBAAT,KAAoC,YAApC,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC3B;AACA,GAAQC,CAAAA,IAAR,CAAiCD,KAAjC,CAAQC,IAAR,CAAcC,GAAd,CAAiCF,KAAjC,CAAcE,GAAd,CAAmBC,SAAnB,CAAiCH,KAAjC,CAAmBG,SAAnB,CAEA;AACA,GAAMC,CAAAA,GAAG,CAAGF,GAAG,CAAGA,GAAH,CAAS,KAAxB,CAEA;AACA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,MAAOJ,CAAAA,IAAI,CAACK,GAAL,CAAS,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC3B,GAAMC,CAAAA,OAAO,CAAGF,IAAI,CAACL,GAAL,CAAWK,IAAI,CAACL,GAAhB,CAAsB,KAAtC,CACA,mBACE,MAAC,QAAD,YACGK,IAAI,CAACG,KAAL,cACC,KAAC,mBAAD,EAAqB,SAAS,CAAEH,IAAI,CAACI,SAArC,CAAgD,MAAM,CAAEJ,IAAI,CAACG,KAAL,CAAWE,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAAxD,UACGN,IAAI,CAACG,KADR,EADD,CAIG,IALN,CAMG,CAACH,IAAI,CAACO,IAAN,cACC,KAAC,MAAD,8BACE,GAAG,CAAEL,OADP,CAEE,SAAS,CAAEb,UAAU,CAAC,SAAD,oBAClBW,IAAI,CAACJ,SADa,CACDI,IAAI,CAACJ,SADJ,EAFvB,EAKOI,IAAI,CAACG,KAAL,CAAa,CAAEK,EAAE,CAAER,IAAI,CAACG,KAAL,CAAWE,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAAN,CAAb,CAAuD,EAL9D,MAME,KAAK,CAAEG,SANT,CAOE,IAAI,CAAEA,SAPR,EAQMT,IARN,EADD,CAWG,IAjBN,CAkBGA,IAAI,CAACO,IAAL,cAAY,KAAC,OAAD,EAAS,SAAS,CAAC,gCAAnB,UAAqDP,IAAI,CAACO,IAA1D,EAAZ,CAAwF,IAlB3F,GAAeN,CAAf,CADF,CAsBD,CAxBM,CAAP,CAyBD,CA1BD,CA4BA,mBACE,KAAC,GAAD,EACE,SAAS,CAAEZ,UAAU,CAAC,cAAD,oBAClBO,SADkB,CACNA,SADM,EADvB,UAKGE,UAAU,EALb,EADF,CASD,CA7CD,CA+CA,cAAeN,CAAAA,WAAf,CAEA","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarGroup = props => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : 'div'\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      const ItemTag = item.tag ? item.tag : 'div'\r\n      return (\r\n        <Fragment key={i}>\r\n          {item.title ? (\r\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null}\r\n          {!item.meta ? (\r\n            <Avatar\r\n              tag={ItemTag}\r\n              className={classnames('pull-up', {\r\n                [item.className]: item.className\r\n              })}\r\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\r\n              title={undefined}\r\n              meta={undefined}\r\n              {...item}\r\n            />\r\n          ) : null}\r\n          {item.meta ? <ItemTag className='d-flex align-items-center pl-1'>{item.meta}</ItemTag> : null}\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar-group', {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}