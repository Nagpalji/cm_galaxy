{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import axios from'axios';import AutoComplete from'@components/autocomplete';import{jsx as _jsx}from\"react/jsx-runtime\";var AutoCompleteAjax=function AutoCompleteAjax(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),suggestions=_useState2[0],setSuggestions=_useState2[1];useEffect(function(){axios.get('/api/autocomplete/data').then(function(response){return setSuggestions(response.data.autoComplete);});},[]);return suggestions.length?/*#__PURE__*/_jsx(AutoComplete,{suggestions:suggestions,className:\"form-control\",filterKey:\"title\",suggestionLimit:4,placeholder:\"Search for any of the top 250 IMDB movies\"}):null;};export default AutoCompleteAjax;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/components/autocomplete/AutoCompleteAjax.js"],"names":["useState","useEffect","axios","AutoComplete","AutoCompleteAjax","suggestions","setSuggestions","get","then","response","data","autoComplete","length"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,cAAsCJ,QAAQ,CAAC,EAAD,CAA9C,wCAAOK,WAAP,eAAoBC,cAApB,eAEAL,SAAS,CAAC,UAAM,CACdC,KAAK,CAACK,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAAyC,SAAAC,QAAQ,QAAIH,CAAAA,cAAc,CAACG,QAAQ,CAACC,IAAT,CAAcC,YAAf,CAAlB,EAAjD,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,MAAON,CAAAA,WAAW,CAACO,MAAZ,cACL,KAAC,YAAD,EACE,WAAW,CAAEP,WADf,CAEE,SAAS,CAAC,cAFZ,CAGE,SAAS,CAAC,OAHZ,CAIE,eAAe,CAAE,CAJnB,CAKE,WAAW,CAAC,2CALd,EADK,CAQH,IARJ,CASD,CAhBD,CAiBA,cAAeD,CAAAA,gBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AutoComplete from '@components/autocomplete'\r\n\r\nconst AutoCompleteAjax = () => {\r\n  const [suggestions, setSuggestions] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/autocomplete/data').then(response => setSuggestions(response.data.autoComplete))\r\n  }, [])\r\n\r\n  return suggestions.length ? (\r\n    <AutoComplete\r\n      suggestions={suggestions}\r\n      className='form-control'\r\n      filterKey='title'\r\n      suggestionLimit={4}\r\n      placeholder='Search for any of the top 250 IMDB movies'\r\n    />\r\n  ) : null\r\n}\r\nexport default AutoCompleteAjax\r\n"]},"metadata":{},"sourceType":"module"}