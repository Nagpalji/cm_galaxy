{"ast":null,"code":"import{Fragment}from'react';import{Check}from'react-feather';import{toast}from'react-toastify';import Avatar from'@components/avatar';import{useForm}from'react-hook-form';import{Card,CardHeader,CardTitle,CardBody,Button,Form,FormGroup,Label,Input}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SuccessToast=function SuccessToast(_ref){var data=_ref.data;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Check,{size:12})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Form Submitted!\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"list-unstyled mb-0\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"firstName\"}),\": \",data.firstName]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"lastName\"}),\": \",data.lastName]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"email\"}),\": \",data.email]})]})})]});};var BasicHookForm=function BasicHookForm(){var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;var onSubmit=function onSubmit(data){toast.success(/*#__PURE__*/_jsx(SuccessToast,{data:data}),{hideProgressBar:true});};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Basic\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"firstNameBasic\",children:\"First Name\"}),/*#__PURE__*/_jsx(Input,{id:\"firstNameBasic\",name:\"firstNameBasic\",innerRef:register({required:true}),invalid:errors.firstNameBasic&&true,placeholder:\"Bruce\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"lastNameBasic\",children:\"Last Name\"}),/*#__PURE__*/_jsx(Input,{id:\"lastNameBasic\",name:\"lastNameBasic\",innerRef:register({required:true}),invalid:errors.lastNameBasic&&true,placeholder:\"Wayne\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"emailBasic\",children:\"Email\"}),/*#__PURE__*/_jsx(Input,{type:\"email\",name:\"emailBasic\",id:\"emailBasic\",innerRef:register({required:true}),invalid:errors.emailBasic&&true,placeholder:\"bruce.wayne@email.com\"})]}),/*#__PURE__*/_jsxs(FormGroup,{className:\"d-flex mb-0\",children:[/*#__PURE__*/_jsx(Button.Ripple,{className:\"mr-1\",color:\"primary\",type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(Button.Ripple,{outline:true,color:\"secondary\",type:\"reset\",children:\"Reset\"})]})]})})]});};export default BasicHookForm;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/forms/validations/react-hook-form/BasicHookForm.js"],"names":["Fragment","Check","toast","Avatar","useForm","Card","CardHeader","CardTitle","CardBody","Button","Form","FormGroup","Label","Input","SuccessToast","data","firstName","lastName","email","BasicHookForm","register","errors","handleSubmit","onSubmit","success","hideProgressBar","required","firstNameBasic","lastNameBasic","emailBasic"],"mappings":"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","sourcesContent":["import { Fragment } from 'react'\r\nimport { Check } from 'react-feather'\r\nimport { toast } from 'react-toastify'\r\nimport Avatar from '@components/avatar'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, Form, FormGroup, Label, Input } from 'reactstrap'\r\n\r\nconst SuccessToast = ({ data }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='toastify-header'>\r\n        <div className='title-wrapper'>\r\n          <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n          <h6 className='toast-title'>Form Submitted!</h6>\r\n        </div>\r\n      </div>\r\n      <div className='toastify-body'>\r\n        <ul className='list-unstyled mb-0'>\r\n          <li>\r\n            <strong>firstName</strong>: {data.firstName}\r\n          </li>\r\n          <li>\r\n            <strong>lastName</strong>: {data.lastName}\r\n          </li>\r\n          <li>\r\n            <strong>email</strong>: {data.email}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst BasicHookForm = () => {\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  const onSubmit = data => {\r\n    toast.success(<SuccessToast data={data} />, { hideProgressBar: true })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Basic</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormGroup>\r\n            <Label for='firstNameBasic'>First Name</Label>\r\n            <Input\r\n              id='firstNameBasic'\r\n              name='firstNameBasic'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.firstNameBasic && true}\r\n              placeholder='Bruce'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for='lastNameBasic'>Last Name</Label>\r\n            <Input\r\n              id='lastNameBasic'\r\n              name='lastNameBasic'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.lastNameBasic && true}\r\n              placeholder='Wayne'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for='emailBasic'>Email</Label>\r\n            <Input\r\n              type='email'\r\n              name='emailBasic'\r\n              id='emailBasic'\r\n              innerRef={register({ required: true })}\r\n              invalid={errors.emailBasic && true}\r\n              placeholder='bruce.wayne@email.com'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className='d-flex mb-0'>\r\n            <Button.Ripple className='mr-1' color='primary' type='submit'>\r\n              Submit\r\n            </Button.Ripple>\r\n            <Button.Ripple outline color='secondary' type='reset'>\r\n              Reset\r\n            </Button.Ripple>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BasicHookForm\r\n"]},"metadata":{},"sourceType":"module"}