{"ast":null,"code":"import{Fragment,useEffect}from'react';import{Row,Col,CardText}from'reactstrap';import Prism from'prismjs';import BreadCrumbs from'@components/breadcrumbs';import Card from'@components/card-snippet';import SpinnerBorder from'./SpinnerBorder';import SpinnerColors from'./SpinnerColors';import SpinnerGrow from'./SpinnerGrowing';import SpinnerGrowColors from'./SpinnerGrowingColored';import SpinnerFlex from'./SpinnerFlex';import SpinnerFloat from'./SpinnerFloat';import SpinnerTextAlignment from'./SpinnerTextAlignment';import SpinnerSizes from'./SpinnerSizes';import SpinnerButtons from'./SpinnerButtons';import{spinnerBorder,spinnerButton,spinnerColors,spinnerFlex,spinnerFloat,spinnerGrowColors,spinnerGrowing,spinnerSizes,spinnerTextAlignment}from'./SpinnerSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Spinners=function Spinners(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Spinners\",breadCrumbParent:\"Components\",breadCrumbActive:\"Spinners\"}),/*#__PURE__*/_jsxs(Row,{className:\"match-height\",children:[/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Border Spinner\",code:spinnerBorder,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"Spinner\"}),\" tag to create a bordered spinner.\"]}),/*#__PURE__*/_jsx(SpinnerBorder,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Colors\",code:spinnerColors,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"color\"}),\" attribute to create a colored spinner.\"]}),/*#__PURE__*/_jsx(SpinnerColors,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Growing Spinner\",code:spinnerGrowing,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"type=\\\"grow\\\"\"}),\" with spinner tag to create a growing spinner.\"]}),/*#__PURE__*/_jsx(SpinnerGrow,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Colored Growing Spinners\",code:spinnerGrowColors,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"color\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\"type\"}),\" attribute to create a colored growing spinner.\"]}),/*#__PURE__*/_jsx(SpinnerGrowColors,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Flex\",code:spinnerFlex,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use Flexbox utilities to place spinners.Use \",/*#__PURE__*/_jsx(\"code\",{children:\".d-flex\"}),\" and \",/*#__PURE__*/_jsx(\"code\",{children:\".justify-content-[side]\"}),\".\"]}),/*#__PURE__*/_jsx(SpinnerFlex,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Float\",code:spinnerFloat,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\".float-[side]\"}),\" with spinner tag to change spinner's position.\"]}),/*#__PURE__*/_jsx(SpinnerFloat,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Text Alignment\",code:spinnerTextAlignment,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"You can also use \",/*#__PURE__*/_jsx(\"code\",{children:\".text-[side]\"}),\" as a wrapper to spinner tag to change spinner's position.\"]}),/*#__PURE__*/_jsx(SpinnerTextAlignment,{})]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Sizes\",code:spinnerSizes,children:[/*#__PURE__*/_jsxs(CardText,{className:\"mb-0\",children:[\"Use prop \",/*#__PURE__*/_jsx(\"code\",{children:\"size=\\\"sm\\\"\"}),\" for Small spinner or use \",/*#__PURE__*/_jsx(\"code\",{children:\"style\"}),\" prop for custom size.\"]}),/*#__PURE__*/_jsx(SpinnerSizes,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{title:\"Buttons\",code:spinnerButton,children:/*#__PURE__*/_jsx(SpinnerButtons,{})})})]})]});};export default Spinners;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/components/spinners/index.js"],"names":["Fragment","useEffect","Row","Col","CardText","Prism","BreadCrumbs","Card","SpinnerBorder","SpinnerColors","SpinnerGrow","SpinnerGrowColors","SpinnerFlex","SpinnerFloat","SpinnerTextAlignment","SpinnerSizes","SpinnerButtons","spinnerBorder","spinnerButton","spinnerColors","spinnerFlex","spinnerFloat","spinnerGrowColors","spinnerGrowing","spinnerSizes","spinnerTextAlignment","Spinners","highlightAll"],"mappings":"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","sourcesContent":["import { Fragment, useEffect } from 'react'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport Prism from 'prismjs'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport SpinnerBorder from './SpinnerBorder'\r\nimport SpinnerColors from './SpinnerColors'\r\nimport SpinnerGrow from './SpinnerGrowing'\r\nimport SpinnerGrowColors from './SpinnerGrowingColored'\r\nimport SpinnerFlex from './SpinnerFlex'\r\nimport SpinnerFloat from './SpinnerFloat'\r\nimport SpinnerTextAlignment from './SpinnerTextAlignment'\r\nimport SpinnerSizes from './SpinnerSizes'\r\nimport SpinnerButtons from './SpinnerButtons'\r\nimport {\r\n  spinnerBorder,\r\n  spinnerButton,\r\n  spinnerColors,\r\n  spinnerFlex,\r\n  spinnerFloat,\r\n  spinnerGrowColors,\r\n  spinnerGrowing,\r\n  spinnerSizes,\r\n  spinnerTextAlignment\r\n} from './SpinnerSourceCode'\r\n\r\nconst Spinners = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Spinners' breadCrumbParent='Components' breadCrumbActive='Spinners' />\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Border Spinner' code={spinnerBorder}>\r\n            <CardText>\r\n              Use <code>Spinner</code> tag to create a bordered spinner.\r\n            </CardText>\r\n            <SpinnerBorder />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Colors' code={spinnerColors}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color</code> attribute to create a colored spinner.\r\n            </CardText>\r\n            <SpinnerColors />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Growing Spinner' code={spinnerGrowing}>\r\n            <CardText>\r\n              Use <code>type=\"grow\"</code> with spinner tag to create a growing spinner.\r\n            </CardText>\r\n            <SpinnerGrow />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Colored Growing Spinners' code={spinnerGrowColors}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color</code> and <code>type</code> attribute to create a colored growing spinner.\r\n            </CardText>\r\n            <SpinnerGrowColors />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Flex' code={spinnerFlex}>\r\n            <CardText>\r\n              Use Flexbox utilities to place spinners.Use <code>.d-flex</code> and <code>.justify-content-[side]</code>.\r\n            </CardText>\r\n            <SpinnerFlex />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Float' code={spinnerFloat}>\r\n            <CardText>\r\n              Use <code>.float-[side]</code> with spinner tag to change spinner's position.\r\n            </CardText>\r\n            <SpinnerFloat />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Text Alignment' code={spinnerTextAlignment}>\r\n            <CardText>\r\n              You can also use <code>.text-[side]</code> as a wrapper to spinner tag to change spinner's position.\r\n            </CardText>\r\n            <SpinnerTextAlignment />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Sizes' code={spinnerSizes}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>size=\"sm\"</code> for Small spinner or use <code>style</code> prop for custom size.\r\n            </CardText>\r\n            <SpinnerSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Buttons' code={spinnerButton}>\r\n            <SpinnerButtons />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Spinners\r\n"]},"metadata":{},"sourceType":"module"}