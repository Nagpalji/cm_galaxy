{"ast":null,"code":"import withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport Rect from '../geometry/rect';\nimport toMatrix from '../geometry/to-matrix';\nimport { defined } from '../util';\n\nvar Image = function (superclass) {\n  function Image(src, rect, options) {\n    if (rect === void 0) rect = new Rect();\n    if (options === void 0) options = {};\n    superclass.call(this, options);\n    this.src(src);\n    this.rect(rect);\n  }\n\n  if (superclass) Image.__proto__ = superclass;\n  Image.prototype = Object.create(superclass && superclass.prototype);\n  Image.prototype.constructor = Image;\n  var prototypeAccessors = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  prototypeAccessors.nodeType.get = function () {\n    return \"Image\";\n  };\n\n  Image.prototype.src = function src(value) {\n    if (defined(value)) {\n      this.options.set(\"src\", value);\n      return this;\n    }\n\n    return this.options.get(\"src\");\n  };\n\n  Image.prototype.bbox = function bbox(transformation) {\n    var combinedMatrix = toMatrix(this.currentTransform(transformation));\n    return this._rect.bbox(combinedMatrix);\n  };\n\n  Image.prototype.rawBBox = function rawBBox() {\n    return this._rect.bbox();\n  };\n\n  Image.prototype._containsPoint = function _containsPoint(point) {\n    return this._rect.containsPoint(point);\n  };\n\n  Image.prototype._hasFill = function _hasFill() {\n    return this.src();\n  };\n\n  Object.defineProperties(Image.prototype, prototypeAccessors);\n  return Image;\n}(withGeometry(Element, [\"rect\"]));\n\nexport default Image;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-drawing/dist/es/shapes/image.js"],"names":["withGeometry","Element","Rect","toMatrix","defined","Image","superclass","src","rect","options","call","__proto__","prototype","Object","create","constructor","prototypeAccessors","nodeType","configurable","get","value","set","bbox","transformation","combinedMatrix","currentTransform","_rect","rawBBox","_containsPoint","point","containsPoint","_hasFill","defineProperties"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,SAAxB;;AAGA,IAAIC,KAAK,GAAI,UAAUC,UAAV,EAAsB;AAC/B,WAASD,KAAT,CAAeE,GAAf,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AAC/B,QAAKD,IAAI,KAAK,KAAK,CAAnB,EAAuBA,IAAI,GAAG,IAAIN,IAAJ,EAAP;AACvB,QAAKO,OAAO,KAAK,KAAK,CAAtB,EAA0BA,OAAO,GAAG,EAAV;AAE1BH,IAAAA,UAAU,CAACI,IAAX,CAAgB,IAAhB,EAAsBD,OAAtB;AAEA,SAAKF,GAAL,CAASA,GAAT;AACA,SAAKC,IAAL,CAAUA,IAAV;AACH;;AAED,MAAKF,UAAL,EAAkBD,KAAK,CAACM,SAAN,GAAkBL,UAAlB;AAClBD,EAAAA,KAAK,CAACO,SAAN,GAAkBC,MAAM,CAACC,MAAP,CAAeR,UAAU,IAAIA,UAAU,CAACM,SAAxC,CAAlB;AACAP,EAAAA,KAAK,CAACO,SAAN,CAAgBG,WAAhB,GAA8BV,KAA9B;AAEA,MAAIW,kBAAkB,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAZ,GAAzB;;AAEAF,EAAAA,kBAAkB,CAACC,QAAnB,CAA4BE,GAA5B,GAAkC,YAAY;AAC1C,WAAO,OAAP;AACH,GAFD;;AAIAd,EAAAA,KAAK,CAACO,SAAN,CAAgBL,GAAhB,GAAsB,SAASA,GAAT,CAAca,KAAd,EAAqB;AACvC,QAAIhB,OAAO,CAACgB,KAAD,CAAX,EAAoB;AAChB,WAAKX,OAAL,CAAaY,GAAb,CAAiB,KAAjB,EAAwBD,KAAxB;AACA,aAAO,IAAP;AACH;;AAED,WAAO,KAAKX,OAAL,CAAaU,GAAb,CAAiB,KAAjB,CAAP;AACH,GAPD;;AASAd,EAAAA,KAAK,CAACO,SAAN,CAAgBU,IAAhB,GAAuB,SAASA,IAAT,CAAeC,cAAf,EAA+B;AAClD,QAAIC,cAAc,GAAGrB,QAAQ,CAAC,KAAKsB,gBAAL,CAAsBF,cAAtB,CAAD,CAA7B;AACA,WAAO,KAAKG,KAAL,CAAWJ,IAAX,CAAgBE,cAAhB,CAAP;AACH,GAHD;;AAKAnB,EAAAA,KAAK,CAACO,SAAN,CAAgBe,OAAhB,GAA0B,SAASA,OAAT,GAAoB;AAC1C,WAAO,KAAKD,KAAL,CAAWJ,IAAX,EAAP;AACH,GAFD;;AAIAjB,EAAAA,KAAK,CAACO,SAAN,CAAgBgB,cAAhB,GAAiC,SAASA,cAAT,CAAyBC,KAAzB,EAAgC;AAC7D,WAAO,KAAKH,KAAL,CAAWI,aAAX,CAAyBD,KAAzB,CAAP;AACH,GAFD;;AAIAxB,EAAAA,KAAK,CAACO,SAAN,CAAgBmB,QAAhB,GAA2B,SAASA,QAAT,GAAqB;AAC5C,WAAO,KAAKxB,GAAL,EAAP;AACH,GAFD;;AAIAM,EAAAA,MAAM,CAACmB,gBAAP,CAAyB3B,KAAK,CAACO,SAA/B,EAA0CI,kBAA1C;AAEA,SAAOX,KAAP;AACH,CAlDY,CAkDXL,YAAY,CAACC,OAAD,EAAU,CAAE,MAAF,CAAV,CAlDD,CAAb;;AAoDA,eAAeI,KAAf","sourcesContent":["import withGeometry from '../mixins/with-geometry';\r\nimport Element from './element';\r\nimport Rect from '../geometry/rect';\r\nimport toMatrix from '../geometry/to-matrix';\r\nimport { defined } from '../util';\r\n\r\n\r\nvar Image = (function (superclass) {\r\n    function Image(src, rect, options) {\r\n        if ( rect === void 0 ) rect = new Rect();\r\n        if ( options === void 0 ) options = {};\r\n\r\n        superclass.call(this, options);\r\n\r\n        this.src(src);\r\n        this.rect(rect);\r\n    }\r\n\r\n    if ( superclass ) Image.__proto__ = superclass;\r\n    Image.prototype = Object.create( superclass && superclass.prototype );\r\n    Image.prototype.constructor = Image;\r\n\r\n    var prototypeAccessors = { nodeType: { configurable: true } };\r\n\r\n    prototypeAccessors.nodeType.get = function () {\r\n        return \"Image\";\r\n    };\r\n\r\n    Image.prototype.src = function src (value) {\r\n        if (defined(value)) {\r\n            this.options.set(\"src\", value);\r\n            return this;\r\n        }\r\n\r\n        return this.options.get(\"src\");\r\n    };\r\n\r\n    Image.prototype.bbox = function bbox (transformation) {\r\n        var combinedMatrix = toMatrix(this.currentTransform(transformation));\r\n        return this._rect.bbox(combinedMatrix);\r\n    };\r\n\r\n    Image.prototype.rawBBox = function rawBBox () {\r\n        return this._rect.bbox();\r\n    };\r\n\r\n    Image.prototype._containsPoint = function _containsPoint (point) {\r\n        return this._rect.containsPoint(point);\r\n    };\r\n\r\n    Image.prototype._hasFill = function _hasFill () {\r\n        return this.src();\r\n    };\r\n\r\n    Object.defineProperties( Image.prototype, prototypeAccessors );\r\n\r\n    return Image;\r\n}(withGeometry(Element, [ \"rect\" ])));\r\n\r\nexport default Image;"]},"metadata":{},"sourceType":"module"}