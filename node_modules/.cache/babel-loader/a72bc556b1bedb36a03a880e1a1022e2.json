{"ast":null,"code":"import _objectSpread from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"color\", \"className\", \"imgClassName\", \"initials\", \"size\", \"badgeUp\", \"content\", \"icon\", \"badgeColor\", \"badgeText\", \"img\", \"imgHeight\", \"imgWidth\", \"status\", \"tag\", \"contentStyles\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\@core\\\\components\\\\avatar\\\\index.js\",\n    _this = this;\n\n// ** React Imports\nimport { forwardRef } from 'react'; // ** Third Party Components\n\nimport Proptypes from 'prop-types';\nimport { Badge } from 'reactstrap';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Avatar = /*#__PURE__*/forwardRef(_c = function _c(props, ref) {\n  var _classnames, _classnames3;\n\n  // ** Props\n  var color = props.color,\n      className = props.className,\n      imgClassName = props.imgClassName,\n      initials = props.initials,\n      size = props.size,\n      badgeUp = props.badgeUp,\n      content = props.content,\n      icon = props.icon,\n      badgeColor = props.badgeColor,\n      badgeText = props.badgeText,\n      img = props.img,\n      imgHeight = props.imgHeight,\n      imgWidth = props.imgWidth,\n      status = props.status,\n      Tag = props.tag,\n      contentStyles = props.contentStyles,\n      rest = _objectWithoutProperties(props, _excluded); // ** Function to extract initials from content\n\n\n  var getInitials = function getInitials(str) {\n    var results = [];\n    var wordArray = str.split(' ');\n    wordArray.forEach(function (e) {\n      results.push(e[0]);\n    });\n    return results.join('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tag, _objectSpread(_objectSpread({\n    className: classnames('avatar', (_classnames = {}, _defineProperty(_classnames, className, className), _defineProperty(_classnames, \"bg-\".concat(color), color), _defineProperty(_classnames, \"avatar-\".concat(size), size), _classnames)),\n    ref: ref\n  }, rest), {}, {\n    children: [img === false || img === undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames('avatar-content', {\n        'position-relative': badgeUp\n      }),\n      style: contentStyles,\n      children: [initials ? getInitials(content) : content, icon ? icon : null, badgeUp ? /*#__PURE__*/_jsxDEV(Badge, {\n        color: badgeColor ? badgeColor : 'primary',\n        className: \"badge-sm badge-up\",\n        pill: true,\n        children: badgeText ? badgeText : '0'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classnames(_defineProperty({}, imgClassName, imgClassName)),\n      src: img,\n      alt: \"avatarImg\",\n      height: imgHeight && !size ? imgHeight : 32,\n      width: imgWidth && !size ? imgWidth : 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, _this), status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames((_classnames3 = {}, _defineProperty(_classnames3, \"avatar-status-\".concat(status), status), _defineProperty(_classnames3, \"avatar-status-\".concat(size), size), _classnames3))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, _this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n});\n_c2 = Avatar;\nexport default Avatar; // ** PropTypes\n\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf(['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light-primary', 'light-secondary', 'light-success', 'light-danger', 'light-info', 'light-warning', 'light-dark']),\n  color: Proptypes.oneOf(['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light-primary', 'light-secondary', 'light-success', 'light-danger', 'light-info', 'light-warning', 'light-dark']),\n  initials: function initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.');\n    }\n\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.');\n    }\n\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!');\n    }\n  }\n}; // ** Default Props\n\nAvatar.defaultProps = {\n  tag: 'div'\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Avatar$forwardRef\");\n$RefreshReg$(_c2, \"Avatar\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/@core/components/avatar/index.js"],"names":["forwardRef","Proptypes","Badge","classnames","Avatar","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","getInitials","str","results","wordArray","split","forEach","e","push","join","undefined","propTypes","string","src","oneOfType","func","bool","node","object","number","oneOf","Error","defaultProps"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    color,\r\n    className,\r\n    imgClassName,\r\n    initials,\r\n    size,\r\n    badgeUp,\r\n    content,\r\n    icon,\r\n    badgeColor,\r\n    badgeText,\r\n    img,\r\n    imgHeight,\r\n    imgWidth,\r\n    status,\r\n    tag: Tag,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  imgClassName: Proptypes.string,\r\n  className: Proptypes.string,\r\n  src: Proptypes.string,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  icon: Proptypes.node,\r\n  contentStyles: Proptypes.object,\r\n  badgeText: Proptypes.string,\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}