{"ast":null,"code":"import QuadRoot from './quad-root';\nimport { Rect } from '../geometry';\nimport { append } from '../util';\n\nvar QuadNode = function (QuadRoot) {\n  function QuadNode(rect) {\n    QuadRoot.call(this);\n    this.children = [];\n    this.rect = rect;\n  }\n\n  if (QuadRoot) QuadNode.__proto__ = QuadRoot;\n  QuadNode.prototype = Object.create(QuadRoot && QuadRoot.prototype);\n  QuadNode.prototype.constructor = QuadNode;\n\n  QuadNode.prototype.inBounds = function inBounds(rect) {\n    var nodeRect = this.rect;\n    var nodeBottomRight = nodeRect.bottomRight();\n    var bottomRight = rect.bottomRight();\n    var inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n    return inBounds;\n  };\n\n  QuadNode.prototype.pointShapes = function pointShapes(point) {\n    var children = this.children;\n    var length = children.length;\n    var result = QuadRoot.prototype.pointShapes.call(this, point);\n\n    for (var idx = 0; idx < length; idx++) {\n      append(result, children[idx].pointShapes(point));\n    }\n\n    return result;\n  };\n\n  QuadNode.prototype.insert = function insert(shape, bbox) {\n    var children = this.children;\n    var inserted = false;\n\n    if (this.inBounds(bbox)) {\n      if (this.shapes.length < 4) {\n        this._add(shape, bbox);\n      } else {\n        if (!children.length) {\n          this._initChildren();\n        }\n\n        for (var idx = 0; idx < children.length; idx++) {\n          if (children[idx].insert(shape, bbox)) {\n            inserted = true;\n            break;\n          }\n        }\n\n        if (!inserted) {\n          this._add(shape, bbox);\n        }\n      }\n\n      inserted = true;\n    }\n\n    return inserted;\n  };\n\n  QuadNode.prototype._initChildren = function _initChildren() {\n    var ref = this;\n    var rect = ref.rect;\n    var children = ref.children;\n    var center = rect.center();\n    var halfWidth = rect.width() / 2;\n    var halfHeight = rect.height() / 2;\n    children.push(new QuadNode(new Rect([rect.origin.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([rect.origin.x, center.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, center.y], [halfWidth, halfHeight])));\n  };\n\n  return QuadNode;\n}(QuadRoot);\n\nexport default QuadNode;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-drawing/dist/es/search/quad-node.js"],"names":["QuadRoot","Rect","append","QuadNode","rect","call","children","__proto__","prototype","Object","create","constructor","inBounds","nodeRect","nodeBottomRight","bottomRight","origin","x","y","pointShapes","point","length","result","idx","insert","shape","bbox","inserted","shapes","_add","_initChildren","ref","center","halfWidth","width","halfHeight","height","push"],"mappings":"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","sourcesContent":["import QuadRoot from './quad-root';\r\nimport { Rect } from '../geometry';\r\nimport { append } from '../util';\r\n\r\nvar QuadNode = (function (QuadRoot) {\r\n    function QuadNode(rect) {\r\n        QuadRoot.call(this);\r\n        this.children = [];\r\n        this.rect = rect;\r\n    }\r\n\r\n    if ( QuadRoot ) QuadNode.__proto__ = QuadRoot;\r\n    QuadNode.prototype = Object.create( QuadRoot && QuadRoot.prototype );\r\n    QuadNode.prototype.constructor = QuadNode;\r\n\r\n    QuadNode.prototype.inBounds = function inBounds (rect) {\r\n        var nodeRect = this.rect;\r\n        var nodeBottomRight = nodeRect.bottomRight();\r\n        var bottomRight = rect.bottomRight();\r\n        var inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x &&\r\n            bottomRight.y <= nodeBottomRight.y;\r\n        return inBounds;\r\n    };\r\n\r\n    QuadNode.prototype.pointShapes = function pointShapes (point) {\r\n        var children = this.children;\r\n        var length = children.length;\r\n        var result = QuadRoot.prototype.pointShapes.call(this, point);\r\n        for (var idx = 0; idx < length; idx++) {\r\n            append(result, children[idx].pointShapes(point));\r\n        }\r\n        return result;\r\n    };\r\n\r\n    QuadNode.prototype.insert = function insert (shape, bbox) {\r\n        var children = this.children;\r\n        var inserted = false;\r\n\r\n        if (this.inBounds(bbox)) {\r\n            if (this.shapes.length < 4) {\r\n                this._add(shape, bbox);\r\n            } else {\r\n                if (!children.length) {\r\n                    this._initChildren();\r\n                }\r\n\r\n                for (var idx = 0; idx < children.length; idx++) {\r\n                    if (children[idx].insert(shape, bbox)) {\r\n                        inserted = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!inserted) {\r\n                    this._add(shape, bbox);\r\n                }\r\n            }\r\n            inserted = true;\r\n        }\r\n\r\n        return inserted;\r\n    };\r\n\r\n    QuadNode.prototype._initChildren = function _initChildren () {\r\n        var ref = this;\r\n        var rect = ref.rect;\r\n        var children = ref.children;\r\n        var center = rect.center();\r\n        var halfWidth = rect.width() / 2;\r\n        var halfHeight = rect.height() / 2;\r\n\r\n        children.push(\r\n            new QuadNode(new Rect([ rect.origin.x, rect.origin.y ], [ halfWidth, halfHeight ])),\r\n            new QuadNode(new Rect([ center.x, rect.origin.y ], [ halfWidth, halfHeight ])),\r\n            new QuadNode(new Rect([ rect.origin.x, center.y ], [ halfWidth, halfHeight ])),\r\n            new QuadNode(new Rect([ center.x, center.y ], [ halfWidth, halfHeight ]))\r\n        );\r\n    };\r\n\r\n    return QuadNode;\r\n}(QuadRoot));\r\n\r\nexport default QuadNode;"]},"metadata":{},"sourceType":"module"}