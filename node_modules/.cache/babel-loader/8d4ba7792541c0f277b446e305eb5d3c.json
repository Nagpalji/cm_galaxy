{"ast":null,"code":"import { drawing as draw, Color } from '@progress/kendo-drawing';\nimport { ChartElement, Point } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\nimport { TOOLTIP_OFFSET } from '../constants';\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\nimport { WHITE, LEFT, TOP } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, setDefaultOptions, valueOrDefault } from '../../common';\n\nvar Candlestick = function (ChartElement) {\n  function Candlestick(value, options) {\n    ChartElement.call(this, options);\n    this.value = value;\n  }\n\n  if (ChartElement) Candlestick.__proto__ = ChartElement;\n  Candlestick.prototype = Object.create(ChartElement && ChartElement.prototype);\n  Candlestick.prototype.constructor = Candlestick;\n\n  Candlestick.prototype.reflow = function reflow(box) {\n    var ref = this;\n    var options = ref.options;\n    var value = ref.value;\n    var chart = ref.owner;\n    var valueAxis = chart.seriesValueAxis(options);\n    var ocSlot = valueAxis.getSlot(value.open, value.close);\n    var lhSlot = valueAxis.getSlot(value.low, value.high);\n    ocSlot.x1 = lhSlot.x1 = box.x1;\n    ocSlot.x2 = lhSlot.x2 = box.x2;\n    this.realBody = ocSlot;\n    var mid = lhSlot.center().x;\n    var points = [];\n    points.push([[mid, lhSlot.y1], [mid, ocSlot.y1]]);\n    points.push([[mid, ocSlot.y2], [mid, lhSlot.y2]]);\n    this.lines = points;\n    this.box = lhSlot.clone().wrap(ocSlot);\n\n    if (!this._rendered) {\n      this._rendered = true;\n      this.createNote();\n    }\n\n    this.reflowNote();\n  };\n\n  Candlestick.prototype.reflowNote = function reflowNote() {\n    if (this.note) {\n      this.note.reflow(this.box);\n    }\n  };\n\n  Candlestick.prototype.createVisual = function createVisual() {\n    ChartElement.prototype.createVisual.call(this);\n    this._mainVisual = this.mainVisual(this.options);\n    this.visual.append(this._mainVisual);\n    this.createOverlay();\n  };\n\n  Candlestick.prototype.mainVisual = function mainVisual(options) {\n    var group = new draw.Group();\n    this.createBody(group, options);\n    this.createLines(group, options);\n    return group;\n  };\n\n  Candlestick.prototype.createBody = function createBody(container, options) {\n    var body = draw.Path.fromRect(this.realBody.toRect(), {\n      fill: {\n        color: this.color,\n        opacity: options.opacity\n      },\n      stroke: null\n    });\n\n    if (options.border.width > 0) {\n      body.options.set(\"stroke\", {\n        color: this.getBorderColor(),\n        width: options.border.width,\n        dashType: options.border.dashType,\n        opacity: valueOrDefault(options.border.opacity, options.opacity)\n      });\n    }\n\n    alignPathToPixel(body);\n    container.append(body);\n\n    if (hasGradientOverlay(options)) {\n      container.append(this.createGradientOverlay(body, {\n        baseColor: this.color\n      }, deepExtend({\n        end: !options.vertical ? [0, 1] : undefined\n      }, options.overlay)));\n    }\n  };\n\n  Candlestick.prototype.createLines = function createLines(container, options) {\n    this.drawLines(container, options, this.lines, options.line);\n  };\n\n  Candlestick.prototype.drawLines = function drawLines(container, options, lines, lineOptions) {\n    if (!lines) {\n      return;\n    }\n\n    var lineStyle = {\n      stroke: {\n        color: lineOptions.color || this.color,\n        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n        width: lineOptions.width,\n        dashType: lineOptions.dashType,\n        lineCap: \"butt\"\n      }\n    };\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = draw.Path.fromPoints(lines[i], lineStyle);\n      alignPathToPixel(line);\n      container.append(line);\n    }\n  };\n\n  Candlestick.prototype.getBorderColor = function getBorderColor() {\n    var border = this.options.border;\n    var borderColor = border.color;\n\n    if (!defined(borderColor)) {\n      borderColor = new Color(this.color).brightness(border._brightness).toHex();\n    }\n\n    return borderColor;\n  };\n\n  Candlestick.prototype.createOverlay = function createOverlay() {\n    var overlay = draw.Path.fromRect(this.box.toRect(), {\n      fill: {\n        color: WHITE,\n        opacity: 0\n      },\n      stroke: null\n    });\n    this.visual.append(overlay);\n  };\n\n  Candlestick.prototype.createHighlight = function createHighlight() {\n    var highlight = this.options.highlight;\n    var normalColor = this.color;\n    this.color = highlight.color || this.color;\n    var overlay = this.mainVisual(deepExtend({}, this.options, {\n      line: {\n        color: this.getBorderColor()\n      }\n    }, highlight));\n    this.color = normalColor;\n    return overlay;\n  };\n\n  Candlestick.prototype.highlightVisual = function highlightVisual() {\n    return this._mainVisual;\n  };\n\n  Candlestick.prototype.highlightVisualArgs = function highlightVisualArgs() {\n    return {\n      options: this.options,\n      rect: this.box.toRect(),\n      visual: this._mainVisual\n    };\n  };\n\n  Candlestick.prototype.tooltipAnchor = function tooltipAnchor() {\n    var box = this.box;\n    var clipBox = this.owner.pane.clipBox() || box;\n    return {\n      point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n      align: {\n        horizontal: LEFT,\n        vertical: TOP\n      }\n    };\n  };\n\n  Candlestick.prototype.formatValue = function formatValue(format) {\n    return this.owner.formatPointValue(this, format);\n  };\n\n  Candlestick.prototype.overlapsBox = function overlapsBox(box) {\n    return this.box.overlaps(box);\n  };\n\n  return Candlestick;\n}(ChartElement);\n\nsetDefaultOptions(Candlestick, {\n  vertical: true,\n  border: {\n    _brightness: 0.8\n  },\n  line: {\n    width: 2\n  },\n  overlay: {\n    gradient: \"glass\"\n  },\n  tooltip: {\n    format: \"<table>\" + \"<tr><th colspan='2'>{4:d}</th></tr>\" + \"<tr><td>Open:</td><td>{0:C}</td></tr>\" + \"<tr><td>High:</td><td>{1:C}</td></tr>\" + \"<tr><td>Low:</td><td>{2:C}</td></tr>\" + \"<tr><td>Close:</td><td>{3:C}</td></tr>\" + \"</table>\"\n  },\n  highlight: {\n    opacity: 1,\n    border: {\n      width: 1,\n      opacity: 1\n    },\n    line: {\n      width: 1,\n      opacity: 1\n    }\n  },\n  notes: {\n    visible: true,\n    label: {}\n  }\n});\ndeepExtend(Candlestick.prototype, PointEventsMixin);\ndeepExtend(Candlestick.prototype, NoteMixin);\nexport default Candlestick;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/chart/candlestick-chart/candlestick.js"],"names":["drawing","draw","Color","ChartElement","Point","PointEventsMixin","NoteMixin","TOOLTIP_OFFSET","hasGradientOverlay","WHITE","LEFT","TOP","alignPathToPixel","deepExtend","defined","setDefaultOptions","valueOrDefault","Candlestick","value","options","call","__proto__","prototype","Object","create","constructor","reflow","box","ref","chart","owner","valueAxis","seriesValueAxis","ocSlot","getSlot","open","close","lhSlot","low","high","x1","x2","realBody","mid","center","x","points","push","y1","y2","lines","clone","wrap","_rendered","createNote","reflowNote","note","createVisual","_mainVisual","mainVisual","visual","append","createOverlay","group","Group","createBody","createLines","container","body","Path","fromRect","toRect","fill","color","opacity","stroke","border","width","set","getBorderColor","dashType","createGradientOverlay","baseColor","end","vertical","undefined","overlay","drawLines","line","lineOptions","lineStyle","lineCap","i","length","fromPoints","borderColor","brightness","_brightness","toHex","createHighlight","highlight","normalColor","highlightVisual","highlightVisualArgs","rect","tooltipAnchor","clipBox","pane","point","Math","max","align","horizontal","formatValue","format","formatPointValue","overlapsBox","overlaps","gradient","tooltip","notes","visible","label"],"mappings":"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","sourcesContent":["import { drawing as draw, Color } from '@progress/kendo-drawing';\r\n\r\nimport { ChartElement, Point } from '../../core';\r\nimport PointEventsMixin from '../mixins/point-events-mixin';\r\nimport NoteMixin from '../mixins/note-mixin';\r\n\r\nimport { TOOLTIP_OFFSET } from '../constants';\r\nimport hasGradientOverlay from '../utils/has-gradient-overlay';\r\n\r\nimport { WHITE, LEFT, TOP } from '../../common/constants';\r\nimport { alignPathToPixel, deepExtend, defined, setDefaultOptions, valueOrDefault } from '../../common';\r\n\r\nvar Candlestick = (function (ChartElement) {\r\n    function Candlestick(value, options) {\r\n        ChartElement.call(this, options);\r\n        this.value = value;\r\n    }\r\n\r\n    if ( ChartElement ) Candlestick.__proto__ = ChartElement;\r\n    Candlestick.prototype = Object.create( ChartElement && ChartElement.prototype );\r\n    Candlestick.prototype.constructor = Candlestick;\r\n\r\n    Candlestick.prototype.reflow = function reflow (box) {\r\n        var ref = this;\r\n        var options = ref.options;\r\n        var value = ref.value;\r\n        var chart = ref.owner;\r\n        var valueAxis = chart.seriesValueAxis(options);\r\n        var ocSlot = valueAxis.getSlot(value.open, value.close);\r\n        var lhSlot = valueAxis.getSlot(value.low, value.high);\r\n\r\n        ocSlot.x1 = lhSlot.x1 = box.x1;\r\n        ocSlot.x2 = lhSlot.x2 = box.x2;\r\n\r\n        this.realBody = ocSlot;\r\n\r\n        var mid = lhSlot.center().x;\r\n        var points = [];\r\n\r\n        points.push([ [ mid, lhSlot.y1 ], [ mid, ocSlot.y1 ] ]);\r\n        points.push([ [ mid, ocSlot.y2 ], [ mid, lhSlot.y2 ] ]);\r\n\r\n        this.lines = points;\r\n\r\n        this.box = lhSlot.clone().wrap(ocSlot);\r\n\r\n        if (!this._rendered) {\r\n            this._rendered = true;\r\n            this.createNote();\r\n        }\r\n\r\n        this.reflowNote();\r\n    };\r\n\r\n    Candlestick.prototype.reflowNote = function reflowNote () {\r\n        if (this.note) {\r\n            this.note.reflow(this.box);\r\n        }\r\n    };\r\n\r\n    Candlestick.prototype.createVisual = function createVisual () {\r\n        ChartElement.prototype.createVisual.call(this);\r\n        this._mainVisual = this.mainVisual(this.options);\r\n        this.visual.append(\r\n            this._mainVisual\r\n        );\r\n\r\n        this.createOverlay();\r\n    };\r\n\r\n    Candlestick.prototype.mainVisual = function mainVisual (options) {\r\n        var group = new draw.Group();\r\n\r\n        this.createBody(group, options);\r\n        this.createLines(group, options);\r\n\r\n        return group;\r\n    };\r\n\r\n    Candlestick.prototype.createBody = function createBody (container, options) {\r\n        var body = draw.Path.fromRect(this.realBody.toRect(), {\r\n            fill: {\r\n                color: this.color,\r\n                opacity: options.opacity\r\n            },\r\n            stroke: null\r\n        });\r\n\r\n        if (options.border.width > 0) {\r\n            body.options.set(\"stroke\", {\r\n                color: this.getBorderColor(),\r\n                width: options.border.width,\r\n                dashType: options.border.dashType,\r\n                opacity: valueOrDefault(options.border.opacity, options.opacity)\r\n            });\r\n        }\r\n\r\n        alignPathToPixel(body);\r\n        container.append(body);\r\n\r\n        if (hasGradientOverlay(options)) {\r\n            container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\r\n                end: !options.vertical ? [ 0, 1 ] : undefined\r\n            }, options.overlay)));\r\n        }\r\n    };\r\n\r\n    Candlestick.prototype.createLines = function createLines (container, options) {\r\n        this.drawLines(container, options, this.lines, options.line);\r\n    };\r\n\r\n    Candlestick.prototype.drawLines = function drawLines (container, options, lines, lineOptions) {\r\n        if (!lines) {\r\n            return;\r\n        }\r\n\r\n        var lineStyle = {\r\n            stroke: {\r\n                color: lineOptions.color || this.color,\r\n                opacity: valueOrDefault(lineOptions.opacity, options.opacity),\r\n                width: lineOptions.width,\r\n                dashType: lineOptions.dashType,\r\n                lineCap: \"butt\"\r\n            }\r\n        };\r\n\r\n        for (var i = 0; i < lines.length; i++) {\r\n            var line = draw.Path.fromPoints(lines[i], lineStyle);\r\n            alignPathToPixel(line);\r\n            container.append(line);\r\n        }\r\n    };\r\n\r\n    Candlestick.prototype.getBorderColor = function getBorderColor () {\r\n        var border = this.options.border;\r\n        var borderColor = border.color;\r\n\r\n        if (!defined(borderColor)) {\r\n            borderColor = new Color(this.color).brightness(border._brightness).toHex();\r\n        }\r\n\r\n        return borderColor;\r\n    };\r\n\r\n    Candlestick.prototype.createOverlay = function createOverlay () {\r\n        var overlay = draw.Path.fromRect(this.box.toRect(), {\r\n            fill: {\r\n                color: WHITE,\r\n                opacity: 0\r\n            },\r\n            stroke: null\r\n        });\r\n\r\n        this.visual.append(overlay);\r\n    };\r\n\r\n    Candlestick.prototype.createHighlight = function createHighlight () {\r\n        var highlight = this.options.highlight;\r\n        var normalColor = this.color;\r\n\r\n        this.color = highlight.color || this.color;\r\n        var overlay = this.mainVisual(\r\n            deepExtend({}, this.options, {\r\n                line: {\r\n                    color: this.getBorderColor()\r\n                }\r\n            }, highlight)\r\n        );\r\n        this.color = normalColor;\r\n\r\n        return overlay;\r\n    };\r\n\r\n    Candlestick.prototype.highlightVisual = function highlightVisual () {\r\n        return this._mainVisual;\r\n    };\r\n\r\n    Candlestick.prototype.highlightVisualArgs = function highlightVisualArgs () {\r\n        return {\r\n            options: this.options,\r\n            rect: this.box.toRect(),\r\n            visual: this._mainVisual\r\n        };\r\n    };\r\n\r\n    Candlestick.prototype.tooltipAnchor = function tooltipAnchor () {\r\n        var box = this.box;\r\n        var clipBox = this.owner.pane.clipBox() || box;\r\n\r\n        return {\r\n            point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\r\n            align: {\r\n                horizontal: LEFT,\r\n                vertical: TOP\r\n            }\r\n        };\r\n    };\r\n\r\n    Candlestick.prototype.formatValue = function formatValue (format) {\r\n        return this.owner.formatPointValue(this, format);\r\n    };\r\n\r\n    Candlestick.prototype.overlapsBox = function overlapsBox (box) {\r\n        return this.box.overlaps(box);\r\n    };\r\n\r\n    return Candlestick;\r\n}(ChartElement));\r\n\r\nsetDefaultOptions(Candlestick, {\r\n    vertical: true,\r\n    border: {\r\n        _brightness: 0.8\r\n    },\r\n    line: {\r\n        width: 2\r\n    },\r\n    overlay: {\r\n        gradient: \"glass\"\r\n    },\r\n    tooltip: {\r\n        format: \"<table>\" +\r\n                    \"<tr><th colspan='2'>{4:d}</th></tr>\" +\r\n                    \"<tr><td>Open:</td><td>{0:C}</td></tr>\" +\r\n                    \"<tr><td>High:</td><td>{1:C}</td></tr>\" +\r\n                    \"<tr><td>Low:</td><td>{2:C}</td></tr>\" +\r\n                    \"<tr><td>Close:</td><td>{3:C}</td></tr>\" +\r\n                \"</table>\"\r\n    },\r\n    highlight: {\r\n        opacity: 1,\r\n        border: {\r\n            width: 1,\r\n            opacity: 1\r\n        },\r\n        line: {\r\n            width: 1,\r\n            opacity: 1\r\n        }\r\n    },\r\n    notes: {\r\n        visible: true,\r\n        label: {}\r\n    }\r\n});\r\n\r\ndeepExtend(Candlestick.prototype, PointEventsMixin);\r\ndeepExtend(Candlestick.prototype, NoteMixin);\r\n\r\nexport default Candlestick;"]},"metadata":{},"sourceType":"module"}