{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment,useState}from'react';import{toast}from'react-toastify';import{Check}from'react-feather';import Avatar from'@components/avatar';import{CopyToClipboard}from'react-copy-to-clipboard';import ExtensionsHeader from'@components/extensions-header';import{Row,Col,Card,CardHeader,CardTitle,CardBody,Button,Input}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ToastSuccess=function ToastSuccess(){return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header pb-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Check,{})}),/*#__PURE__*/_jsx(\"h6\",{className:\"toast-title\",children:\"Copied To Clipboard !\"})]})})});};/*eslint-disable */var Clipboard=function Clipboard(){var _useState=useState('Copy Me!'),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),copied=_useState4[0],setCopied=_useState4[1];/*eslint-enable */var handleCopy=function handleCopy(_ref){var value=_ref.target.value;setValue(value);setCopied(false);};var onCopy=function onCopy(){setCopied(true);toast.success(/*#__PURE__*/_jsx(ToastSuccess,{}),{autoClose:3000,hideProgressBar:true,closeButton:false});};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(ExtensionsHeader,{title:\"React Copy To Clipboard\",subTitle:\"Copy to clipboard React component\",link:\"https://github.com/nkbt/react-copy-to-clipboard\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Clipboard\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:\"3\",md:\"4\",sm:\"6\",className:\"pr-sm-0 mb-md-0 mb-1\",children:/*#__PURE__*/_jsx(Input,{value:value,onChange:handleCopy})}),/*#__PURE__*/_jsx(Col,{md:\"2\",sm:\"12\",children:/*#__PURE__*/_jsx(CopyToClipboard,{onCopy:onCopy,text:value,children:/*#__PURE__*/_jsx(Button.Ripple,{color:\"primary\",outline:true,children:\"Copy!\"})})})]})})]})})})]});};export default Clipboard;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/extensions/copy-to-clipboard/index.js"],"names":["Fragment","useState","toast","Check","Avatar","CopyToClipboard","ExtensionsHeader","Row","Col","Card","CardHeader","CardTitle","CardBody","Button","Input","ToastSuccess","Clipboard","value","setValue","copied","setCopied","handleCopy","target","onCopy","success","autoClose","hideProgressBar","closeButton"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,UAAzB,CAAqCC,SAArC,CAAgDC,QAAhD,CAA0DC,MAA1D,CAAkEC,KAAlE,KAA+E,YAA/E,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBACnB,KAAC,QAAD,wBACE,YAAK,SAAS,CAAC,sBAAf,uBACE,aAAK,SAAS,CAAC,eAAf,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,KAAK,CAAC,SAAxB,CAAkC,IAAI,cAAE,KAAC,KAAD,IAAxC,EADF,cAEE,WAAI,SAAS,CAAC,aAAd,mCAFF,GADF,EADF,EADmB,EAArB,CAWA,mBACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,cAA0Bf,QAAQ,CAAC,UAAD,CAAlC,wCAAOgB,KAAP,eAAcC,QAAd,eACA,eAA4BjB,QAAQ,CAAC,KAAD,CAApC,yCAAOkB,MAAP,eAAeC,SAAf,eACA,kBAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA2B,IAAdJ,CAAAA,KAAc,MAAxBK,MAAwB,CAAdL,KAAc,CAC5CC,QAAQ,CAACD,KAAD,CAAR,CACAG,SAAS,CAAC,KAAD,CAAT,CACD,CAHD,CAKA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBH,SAAS,CAAC,IAAD,CAAT,CACAlB,KAAK,CAACsB,OAAN,cAAc,KAAC,YAAD,IAAd,CAAgC,CAC9BC,SAAS,CAAE,IADmB,CAE9BC,eAAe,CAAE,IAFa,CAG9BC,WAAW,CAAE,KAHiB,CAAhC,EAKD,CAPD,CASA,mBACE,MAAC,QAAD,yBACE,KAAC,gBAAD,EACE,KAAK,CAAC,yBADR,CAEE,QAAQ,CAAC,mCAFX,CAGE,IAAI,CAAC,iDAHP,EADF,cAME,KAAC,GAAD,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,yBACE,KAAC,UAAD,wBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,uBADF,EADF,cAIE,KAAC,QAAD,wBACE,MAAC,GAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,GAAf,CAAmB,EAAE,CAAC,GAAtB,CAA0B,SAAS,CAAC,sBAApC,uBACE,KAAC,KAAD,EAAO,KAAK,CAAEV,KAAd,CAAqB,QAAQ,CAAEI,UAA/B,EADF,EADF,cAIE,KAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,uBACE,KAAC,eAAD,EAAiB,MAAM,CAAEE,MAAzB,CAAiC,IAAI,CAAEN,KAAvC,uBACE,KAAC,MAAD,CAAQ,MAAR,EAAe,KAAK,CAAC,SAArB,CAA+B,OAAO,KAAtC,mBADF,EADF,EAJF,GADF,EAJF,GADF,EADF,EANF,GADF,CAgCD,CAnDD,CAqDA,cAAeD,CAAAA,SAAf","sourcesContent":["import { Fragment, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { Check } from 'react-feather'\r\nimport Avatar from '@components/avatar'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Input } from 'reactstrap'\r\n\r\nconst ToastSuccess = () => (\r\n  <Fragment>\r\n    <div className='toastify-header pb-0'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Check />} />\r\n        <h6 className='toast-title'>Copied To Clipboard !</h6>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\n/*eslint-disable */\r\nconst Clipboard = () => {\r\n  const [value, setValue] = useState('Copy Me!')\r\n  const [copied, setCopied] = useState(false)\r\n  /*eslint-enable */\r\n\r\n  const handleCopy = ({ target: { value } }) => {\r\n    setValue(value)\r\n    setCopied(false)\r\n  }\r\n\r\n  const onCopy = () => {\r\n    setCopied(true)\r\n    toast.success(<ToastSuccess />, {\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeButton: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Copy To Clipboard'\r\n        subTitle='Copy to clipboard React component'\r\n        link='https://github.com/nkbt/react-copy-to-clipboard'\r\n      />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>Clipboard</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col xl='3' md='4' sm='6' className='pr-sm-0 mb-md-0 mb-1'>\r\n                  <Input value={value} onChange={handleCopy} />\r\n                </Col>\r\n                <Col md='2' sm='12'>\r\n                  <CopyToClipboard onCopy={onCopy} text={value}>\r\n                    <Button.Ripple color='primary' outline>\r\n                      Copy!\r\n                    </Button.Ripple>\r\n                  </CopyToClipboard>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Clipboard\r\n"]},"metadata":{},"sourceType":"module"}