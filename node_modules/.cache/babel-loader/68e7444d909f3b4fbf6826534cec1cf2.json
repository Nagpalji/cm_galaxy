{"ast":null,"code":"import{Fragment,useEffect}from'react';import Prism from'prismjs';import{Row,Col,CardText}from'reactstrap';import BreadCrumbs from'@components/breadcrumbs';import Card from'@components/card-snippet';import ToastTranslucent from'./ToastTranslucent';import ToastHeaderIcons from'./ToastHeaderIcons';import{toastHeaderIcons,toastTranslucent}from'./ToastSourceCode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Toasts=function Toasts(){useEffect(function(){Prism.highlightAll();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(BreadCrumbs,{breadCrumbTitle:\"Toasts\",breadCrumbParent:\"Components\",breadCrumbActive:\"Toasts\"}),/*#__PURE__*/_jsxs(Row,{className:\"match-height\",children:[/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Toast Translucent\",code:toastTranslucent,children:[/*#__PURE__*/_jsx(CardText,{children:\"Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers that support the backdrop-filter CSS property, we\\u2019ll also attempt to blur the elements under a toast.\"}),/*#__PURE__*/_jsx(ToastTranslucent,{})]})}),/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsxs(Card,{title:\"Icons\",code:toastHeaderIcons,children:[/*#__PURE__*/_jsxs(CardText,{children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"icon\"}),\" attribute with \",/*#__PURE__*/_jsx(\"code\",{children:\"ToastHeader\"}),\" tag to add an icon.\"]}),/*#__PURE__*/_jsx(ToastHeaderIcons,{})]})})]})]});};export default Toasts;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/components/toasts/index.js"],"names":["Fragment","useEffect","Prism","Row","Col","CardText","BreadCrumbs","Card","ToastTranslucent","ToastHeaderIcons","toastHeaderIcons","toastTranslucent","Toasts","highlightAll"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,KAAmC,YAAnC,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,gBAAT,CAA2BC,gBAA3B,KAAmD,mBAAnD,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBX,SAAS,CAAC,UAAM,CACdC,KAAK,CAACW,YAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,MAAC,QAAD,yBACE,KAAC,WAAD,EAAa,eAAe,CAAC,QAA7B,CAAsC,gBAAgB,CAAC,YAAvD,CAAoE,gBAAgB,CAAC,QAArF,EADF,cAEE,MAAC,GAAD,EAAK,SAAS,CAAC,cAAf,wBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,mBAAZ,CAAgC,IAAI,CAAEF,gBAAtC,wBACE,KAAC,QAAD,gOADF,cAKE,KAAC,gBAAD,IALF,GADF,EADF,cAUE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,MAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,IAAI,CAAED,gBAA1B,wBACE,MAAC,QAAD,gCACM,8BADN,iCACuC,qCADvC,0BADF,cAIE,KAAC,gBAAD,IAJF,GADF,EAVF,GAFF,GADF,CAwBD,CA5BD,CA6BA,cAAeE,CAAAA,MAAf","sourcesContent":["import { Fragment, useEffect } from 'react'\r\nimport Prism from 'prismjs'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport ToastTranslucent from './ToastTranslucent'\r\nimport ToastHeaderIcons from './ToastHeaderIcons'\r\nimport { toastHeaderIcons, toastTranslucent } from './ToastSourceCode'\r\n\r\nconst Toasts = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Toasts' breadCrumbParent='Components' breadCrumbActive='Toasts' />\r\n      <Row className='match-height'>\r\n        <Col sm='12'>\r\n          <Card title='Toast Translucent' code={toastTranslucent}>\r\n            <CardText>\r\n              Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers\r\n              that support the backdrop-filter CSS property, weâ€™ll also attempt to blur the elements under a toast.\r\n            </CardText>\r\n            <ToastTranslucent />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icons' code={toastHeaderIcons}>\r\n            <CardText>\r\n              Use <code>icon</code> attribute with <code>ToastHeader</code> tag to add an icon.\r\n            </CardText>\r\n            <ToastHeaderIcons />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Toasts\r\n"]},"metadata":{},"sourceType":"module"}