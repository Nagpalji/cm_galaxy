{"ast":null,"code":"import _slicedToArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\full-version\\\\full-version\\\\src\\\\views\\\\ui-elements\\\\cards\\\\statistics\\\\ActiveUsers.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { UserCheck } from 'react-feather';\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ActiveUsers = function ActiveUsers(_ref) {\n  _s();\n\n  var success = _ref.success;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; // useEffect(() => {\n  //   axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  // }, [])\n\n\n  var options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {},\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(StatsWithLineChart, {\n    icon: /*#__PURE__*/_jsxDEV(UserCheck, {\n      size: 21\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this),\n    color: \"success\",\n    stats: \"659.8k\",\n    statTitle: \"Active Users\",\n    series: data.series,\n    options: options,\n    type: \"line\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this) : null;\n};\n\n_s(ActiveUsers, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = ActiveUsers;\nexport default ActiveUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveUsers\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/src/views/ui-elements/cards/statistics/ActiveUsers.js"],"names":["useEffect","useState","axios","UserCheck","StatsWithLineChart","ActiveUsers","success","data","setData","options","chart","id","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","xaxis","labels","axisBorder","yaxis","tooltip","x","series"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACnC,kBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb,iBADmC,CAGnC;AACA;AACA;;;AAEA,MAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAE,aADC;AAELC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OAFJ;AAKLC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE;AADA,OALN;AAQLC,MAAAA,UAAU,EAAE;AACVD,QAAAA,OAAO,EAAE,IADC;AAEVE,QAAAA,GAAG,EAAE,CAFK;AAGVC,QAAAA,IAAI,EAAE,CAHI;AAIVC,QAAAA,IAAI,EAAE,CAJI;AAKVC,QAAAA,OAAO,EAAE;AALC;AARP,KADO;AAiBdC,IAAAA,IAAI,EAAE;AACJR,MAAAA,IAAI,EAAE;AADF,KAjBQ;AAoBdS,IAAAA,MAAM,EAAE,CAAChB,OAAD,CApBM;AAqBdiB,IAAAA,UAAU,EAAE;AACVR,MAAAA,OAAO,EAAE;AADC,KArBE;AAwBdS,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KAxBM;AA4BdC,IAAAA,IAAI,EAAE,EA5BQ;AAgCdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNhB,QAAAA,IAAI,EAAE;AADA,OADH;AAILiB,MAAAA,UAAU,EAAE;AACVjB,QAAAA,IAAI,EAAE;AADI;AAJP,KAhCO;AAwCdkB,IAAAA,KAAK,EAAE;AACLF,MAAAA,MAAM,EAAE;AACNhB,QAAAA,IAAI,EAAE;AADA;AADH,KAxCO;AA6CdmB,IAAAA,OAAO,EAAE;AACPC,MAAAA,CAAC,EAAE;AAAEpB,QAAAA,IAAI,EAAE;AAAR;AADI;AA7CK,GAAhB;AAkDA,SAAON,IAAI,KAAK,IAAT,gBACL,QAAC,kBAAD;AACE,IAAA,IAAI,eAAE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,aADR;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,MAAM,EAAEA,IAAI,CAAC2B,MALf;AAME,IAAA,OAAO,EAAEzB,OANX;AAOE,IAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,WADK,GAUH,IAVJ;AAWD,CApED;;GAAMJ,W;;KAAAA,W;AAsEN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { UserCheck } from 'react-feather'\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst ActiveUsers = ({ success }) => {\r\n  const [data, setData] = useState([])\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\r\n  // }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'activeUsers',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      \r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<UserCheck size={21} />}\r\n      color='success'\r\n      stats='659.8k'\r\n      statTitle='Active Users'\r\n      series={data.series}\r\n      options={options}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ActiveUsers\r\n"]},"metadata":{},"sourceType":"module"}