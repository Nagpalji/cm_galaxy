{"ast":null,"code":"import _slicedToArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\full-version\\\\full-version\\\\src\\\\views\\\\extensions\\\\drag-and-drop\\\\DndClone.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DndClone = function DndClone() {\n  _s();\n\n  var source1 = [{\n    text: 'Youtube',\n    color: 'light-secondary'\n  }, {\n    text: 'Facebook',\n    color: 'light-primary'\n  }, {\n    text: 'Google',\n    color: 'light-success'\n  }, {\n    text: 'Instagram',\n    color: 'light-danger'\n  }, {\n    text: 'Twitter',\n    color: 'light-info'\n  }, {\n    text: 'Discord',\n    color: 'light-warning'\n  }];\n  var source2 = [{\n    text: 'Github',\n    color: 'light-secondary'\n  }, {\n    text: 'Gitlab',\n    color: 'light-primary'\n  }, {\n    text: 'Slack',\n    color: 'light-success'\n  }, {\n    text: 'Pinterest',\n    color: 'light-danger'\n  }, {\n    text: 'Tinder',\n    color: 'light-info'\n  }, {\n    text: 'Amazon',\n    color: 'light-warning'\n  }];\n\n  var _useState = useState(source1),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var _useState3 = useState(source2),\n      _useState4 = _slicedToArray(_useState3, 2),\n      list2 = _useState4[0],\n      setList2 = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Clone List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"pull:clone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, _this), \" with your group prop to clone items.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            className: \"demo-inline-spacing sortable\",\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            list: list,\n            setList: setList,\n            children: list.map(function (item) {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, item.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            className: \"demo-inline-spacing sortable\",\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            list: list2,\n            setList: setList2,\n            children: list2.map(function (item) {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, item.text, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DndClone, \"RgK3Qer4HkW56BHiYFGat0pVbJo=\");\n\n_c = DndClone;\nexport default DndClone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DndClone\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/src/views/extensions/drag-and-drop/DndClone.js"],"names":["useState","ReactSortable","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Badge","DndClone","source1","text","color","source2","list","setList","list2","setList2","name","pull","map","item"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\r\n\r\nconst DndClone = () => {\r\n  const source1 = [\r\n    {\r\n      text: 'Youtube',\r\n      color: 'light-secondary'\r\n    },\r\n    {\r\n      text: 'Facebook',\r\n      color: 'light-primary'\r\n    },\r\n    {\r\n      text: 'Google',\r\n      color: 'light-success'\r\n    },\r\n    {\r\n      text: 'Instagram',\r\n      color: 'light-danger'\r\n    },\r\n    {\r\n      text: 'Twitter',\r\n      color: 'light-info'\r\n    },\r\n    {\r\n      text: 'Discord',\r\n      color: 'light-warning'\r\n    }\r\n  ]\r\n  const source2 = [\r\n    {\r\n      text: 'Github',\r\n      color: 'light-secondary'\r\n    },\r\n    {\r\n      text: 'Gitlab',\r\n      color: 'light-primary'\r\n    },\r\n    {\r\n      text: 'Slack',\r\n      color: 'light-success'\r\n    },\r\n    {\r\n      text: 'Pinterest',\r\n      color: 'light-danger'\r\n    },\r\n    {\r\n      text: 'Tinder',\r\n      color: 'light-info'\r\n    },\r\n    {\r\n      text: 'Amazon',\r\n      color: 'light-warning'\r\n    }\r\n  ]\r\n\r\n  const [list, setList] = useState(source1)\r\n  const [list2, setList2] = useState(source2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Clone List</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Add <code>pull:clone</code> with your group prop to clone items.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>Badge Source 1</h4>\r\n            <ReactSortable\r\n              className='demo-inline-spacing sortable'\r\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\r\n              list={list}\r\n              setList={setList}\r\n            >\r\n              {list.map(item => {\r\n                return (\r\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\r\n                    {item.text}\r\n                  </Badge>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>Badge Source 2</h4>\r\n            <ReactSortable\r\n              className='demo-inline-spacing sortable'\r\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\r\n              list={list2}\r\n              setList={setList2}\r\n            >\r\n              {list2.map(item => {\r\n                return (\r\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\r\n                    {item.text}\r\n                  </Badge>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndClone\r\n"]},"metadata":{},"sourceType":"module"}