{"ast":null,"code":"import _objectSpread from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"color\",\"className\",\"imgClassName\",\"initials\",\"size\",\"badgeUp\",\"content\",\"icon\",\"badgeColor\",\"badgeText\",\"img\",\"imgHeight\",\"imgWidth\",\"status\",\"tag\",\"contentStyles\"];// ** React Imports\nimport{forwardRef}from'react';// ** Third Party Components\nimport{Badge}from'reactstrap';import classnames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Avatar=/*#__PURE__*/forwardRef(function(props,ref){var _classnames,_classnames3;// ** Props\nvar color=props.color,className=props.className,imgClassName=props.imgClassName,initials=props.initials,size=props.size,badgeUp=props.badgeUp,content=props.content,icon=props.icon,badgeColor=props.badgeColor,badgeText=props.badgeText,img=props.img,imgHeight=props.imgHeight,imgWidth=props.imgWidth,status=props.status,Tag=props.tag,contentStyles=props.contentStyles,rest=_objectWithoutProperties(props,_excluded);// ** Function to extract initials from content\nvar getInitials=function getInitials(str){var results=[];var wordArray=str.split(' ');wordArray.forEach(function(e){results.push(e[0]);});return results.join('');};return/*#__PURE__*/_jsxs(Tag,_objectSpread(_objectSpread({className:classnames('avatar',(_classnames={},_defineProperty(_classnames,className,className),_defineProperty(_classnames,\"bg-\".concat(color),color),_defineProperty(_classnames,\"avatar-\".concat(size),size),_classnames)),ref:ref},rest),{},{children:[img===false||img===undefined?/*#__PURE__*/_jsxs(\"span\",{className:classnames('avatar-content',{'position-relative':badgeUp}),style:contentStyles,children:[initials?getInitials(content):content,icon?icon:null,badgeUp?/*#__PURE__*/_jsx(Badge,{color:badgeColor?badgeColor:'primary',className:\"badge-sm badge-up\",pill:true,children:badgeText?badgeText:'0'}):null]}):/*#__PURE__*/_jsx(\"img\",{className:classnames(_defineProperty({},imgClassName,imgClassName)),src:img,alt:\"avatarImg\",height:imgHeight&&!size?imgHeight:32,width:imgWidth&&!size?imgWidth:32}),status?/*#__PURE__*/_jsx(\"span\",{className:classnames((_classnames3={},_defineProperty(_classnames3,\"avatar-status-\".concat(status),status),_defineProperty(_classnames3,\"avatar-status-\".concat(size),size),_classnames3))}):null]}));});export default Avatar;// ** PropTypes\n// ** Default Props\nAvatar.defaultProps={tag:'div'};","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/@core/components/avatar/index.js"],"names":["forwardRef","Badge","classnames","Avatar","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","getInitials","str","results","wordArray","split","forEach","e","push","join","undefined","defaultProps"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    color,\r\n    className,\r\n    imgClassName,\r\n    initials,\r\n    size,\r\n    badgeUp,\r\n    content,\r\n    icon,\r\n    badgeColor,\r\n    badgeText,\r\n    img,\r\n    imgHeight,\r\n    imgWidth,\r\n    status,\r\n    tag: Tag,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  imgClassName: Proptypes.string,\r\n  className: Proptypes.string,\r\n  src: Proptypes.string,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  icon: Proptypes.node,\r\n  contentStyles: Proptypes.object,\r\n  badgeText: Proptypes.string,\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}