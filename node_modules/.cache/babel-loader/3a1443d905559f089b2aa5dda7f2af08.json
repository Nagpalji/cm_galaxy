{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ** React Imports\nimport{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';// ** User Edit Components\nimport SocialTab from'./Social';import AccountTab from'./Account';import InfoTab from'./Information';// ** Store & Actions\nimport{getUser}from'../store/action';import{useSelector,useDispatch}from'react-redux';// ** Third Party Components\nimport{User,Info,Share2}from'react-feather';import{Card,CardBody,Row,Col,Nav,NavItem,NavLink,TabContent,TabPane,Alert}from'reactstrap';// ** Styles\nimport'@styles/react/apps/app-users.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserEdit=function UserEdit(){// ** States & Vars\nvar _useState=useState('1'),_useState2=_slicedToArray(_useState,2),activeTab=_useState2[0],setActiveTab=_useState2[1],store=useSelector(function(state){return state.users;}),dispatch=useDispatch(),_useParams=useParams(),id=_useParams.id;// ** Function to toggle tabs\nvar toggle=function toggle(tab){return setActiveTab(tab);};// ** Function to get user on mount\nuseEffect(function(){dispatch(getUser(parseInt(id)));},[dispatch]);return store.selectedUser!==null&&store.selectedUser!==undefined?/*#__PURE__*/_jsx(Row,{className:\"app-user-edit\",children:/*#__PURE__*/_jsx(Col,{sm:\"12\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardBody,{className:\"pt-2\",children:/*#__PURE__*/_jsx(TabContent,{activeTab:activeTab,children:/*#__PURE__*/_jsx(TabPane,{tabId:\"1\",children:/*#__PURE__*/_jsx(AccountTab,{selectedUser:store.selectedUser})})})})})})}):/*#__PURE__*/_jsxs(Alert,{color:\"danger\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"alert-heading\",children:\"User not found\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert-body\",children:[\"User with id: \",id,\" doesn't exist. Check list of all Users: \",/*#__PURE__*/_jsx(Link,{to:\"/apps/user/list\",children:\"Users List\"})]})]});};export default UserEdit;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/apps/user/edit/index.js"],"names":["useState","useEffect","useParams","Link","SocialTab","AccountTab","InfoTab","getUser","useSelector","useDispatch","User","Info","Share2","Card","CardBody","Row","Col","Nav","NavItem","NavLink","TabContent","TabPane","Alert","UserEdit","activeTab","setActiveTab","store","state","users","dispatch","id","toggle","tab","parseInt","selectedUser","undefined"],"mappings":"8KAAA;AACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,SAAT,CAAoBC,IAApB,KAAgC,kBAAhC,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,WAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA;AACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA;AACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,MAArB,KAAmC,eAAnC,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,GAAzB,CAA8BC,GAA9B,CAAmCC,GAAnC,CAAwCC,OAAxC,CAAiDC,OAAjD,CAA0DC,UAA1D,CAAsEC,OAAtE,CAA+EC,KAA/E,KAA4F,YAA5F,CAEA;AACA,MAAO,mCAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB;AACA,cAAkCvB,QAAQ,CAAC,GAAD,CAA1C,wCAAOwB,SAAP,eAAkBC,YAAlB,eACEC,KADF,CACUlB,WAAW,CAAC,SAAAmB,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAV,EAAN,CADrB,CAEEC,QAFF,CAEapB,WAAW,EAFxB,YAGWP,SAAS,EAHpB,CAGI4B,EAHJ,YAGIA,EAHJ,CAKA;AACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,GAAG,QAAIP,CAAAA,YAAY,CAACO,GAAD,CAAhB,EAAlB,CAEA;AACA/B,SAAS,CAAC,UAAM,CACd4B,QAAQ,CAACtB,OAAO,CAAC0B,QAAQ,CAACH,EAAD,CAAT,CAAR,CAAR,CACD,CAFQ,CAEN,CAACD,QAAD,CAFM,CAAT,CAIA,MAAOH,CAAAA,KAAK,CAACQ,YAAN,GAAuB,IAAvB,EAA+BR,KAAK,CAACQ,YAAN,GAAuBC,SAAtD,cACL,KAAC,GAAD,EAAK,SAAS,CAAC,eAAf,uBACE,KAAC,GAAD,EAAK,EAAE,CAAC,IAAR,uBACE,KAAC,IAAD,wBACE,KAAC,QAAD,EAAU,SAAS,CAAC,MAApB,uBAqBE,KAAC,UAAD,EAAY,SAAS,CAAEX,SAAvB,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,GAAf,uBACE,KAAC,UAAD,EAAY,YAAY,CAAEE,KAAK,CAACQ,YAAhC,EADF,EADF,EArBF,EADF,EADF,EADF,EADK,cAyCL,MAAC,KAAD,EAAO,KAAK,CAAC,QAAb,wBACE,WAAI,SAAS,CAAC,eAAd,4BADF,cAEE,aAAK,SAAS,CAAC,YAAf,4BACiBJ,EADjB,0DAC6D,KAAC,IAAD,EAAM,EAAE,CAAC,iBAAT,wBAD7D,GAFF,GAzCF,CAgDD,CA/DD,CAgEA,cAAeP,CAAAA,QAAf","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\n// ** User Edit Components\r\nimport SocialTab from './Social'\r\nimport AccountTab from './Account'\r\nimport InfoTab from './Information'\r\n\r\n// ** Store & Actions\r\nimport { getUser } from '../store/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport { User, Info, Share2 } from 'react-feather'\r\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UserEdit = () => {\r\n  // ** States & Vars\r\n  const [activeTab, setActiveTab] = useState('1'),\r\n    store = useSelector(state => state.users),\r\n    dispatch = useDispatch(),\r\n    { id } = useParams()\r\n\r\n  // ** Function to toggle tabs\r\n  const toggle = tab => setActiveTab(tab)\r\n\r\n  // ** Function to get user on mount\r\n  useEffect(() => {\r\n    dispatch(getUser(parseInt(id)))\r\n  }, [dispatch])\r\n\r\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\r\n    <Row className='app-user-edit'>\r\n      <Col sm='12'>\r\n        <Card>\r\n          <CardBody className='pt-2'>\r\n            {/* <Nav pills>\r\n              <NavItem>\r\n                <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\r\n                  <User size={14} />\r\n                  <span className='align-middle d-none d-sm-block'>Account</span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\r\n                  <Info size={14} />\r\n                  <span className='align-middle d-none d-sm-block'>Information</span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\r\n                  <Share2 size={14} />\r\n                  <span className='align-middle d-none d-sm-block'>Social</span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav> */}\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId='1'>\r\n                <AccountTab selectedUser={store.selectedUser} />\r\n              </TabPane>\r\n              {/* <TabPane tabId='2'>\r\n                <InfoTab />\r\n              </TabPane>\r\n              <TabPane tabId='3'>\r\n                <SocialTab />\r\n              </TabPane> */}\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  ) : (\r\n    <Alert color='danger'>\r\n      <h4 className='alert-heading'>User not found</h4>\r\n      <div className='alert-body'>\r\n        User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\nexport default UserEdit\r\n"]},"metadata":{},"sourceType":"module"}