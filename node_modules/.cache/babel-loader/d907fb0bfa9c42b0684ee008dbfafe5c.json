{"ast":null,"code":"import now from '../util/now';\nexport default function throttle(fn, delay) {\n  var lastExecTime = 0;\n  var timeout;\n\n  if (!delay || delay <= 0) {\n    return fn;\n  }\n\n  var throttled = function throttled() {\n    var elapsed = now() - lastExecTime;\n    var args = arguments;\n\n    var exec = function exec() {\n      fn.apply(null, args);\n      lastExecTime = now();\n    }; // first execution\n\n\n    if (!lastExecTime) {\n      return exec();\n    }\n\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    if (elapsed > delay) {\n      exec();\n    } else {\n      timeout = setTimeout(exec, delay - elapsed);\n    }\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n  };\n\n  return throttled;\n}","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-drawing/dist/es/common/throttle.js"],"names":["now","throttle","fn","delay","lastExecTime","timeout","throttled","elapsed","args","arguments","exec","apply","clearTimeout","setTimeout","cancel"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,eAAe,SAASC,QAAT,CAAkBC,EAAlB,EAAsBC,KAAtB,EAA6B;AACxC,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,OAAJ;;AAEA,MAAI,CAACF,KAAD,IAAUA,KAAK,IAAI,CAAvB,EAA0B;AACtB,WAAOD,EAAP;AACH;;AAED,MAAII,SAAS,GAAG,SAAZA,SAAY,GAAW;AACvB,QAAIC,OAAO,GAAGP,GAAG,KAAKI,YAAtB;AACA,QAAII,IAAI,GAAGC,SAAX;;AAEA,QAAIC,IAAI,GAAG,SAAPA,IAAO,GAAW;AAClBR,MAAAA,EAAE,CAACS,KAAH,CAAS,IAAT,EAAeH,IAAf;AACAJ,MAAAA,YAAY,GAAGJ,GAAG,EAAlB;AACH,KAHD,CAJuB,CASvB;;;AACA,QAAI,CAACI,YAAL,EAAmB;AACf,aAAOM,IAAI,EAAX;AACH;;AAED,QAAIL,OAAJ,EAAa;AACTO,MAAAA,YAAY,CAACP,OAAD,CAAZ;AACH;;AAED,QAAIE,OAAO,GAAGJ,KAAd,EAAqB;AACjBO,MAAAA,IAAI;AACP,KAFD,MAEO;AACHL,MAAAA,OAAO,GAAGQ,UAAU,CAACH,IAAD,EAAOP,KAAK,GAAGI,OAAf,CAApB;AACH;AACJ,GAvBD;;AAyBAD,EAAAA,SAAS,CAACQ,MAAV,GAAmB,YAAW;AAC1BF,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACH,GAFD;;AAIA,SAAOC,SAAP;AACH","sourcesContent":["import now from '../util/now';\r\n\r\nexport default function throttle(fn, delay) {\r\n    var lastExecTime = 0;\r\n    var timeout;\r\n\r\n    if (!delay || delay <= 0) {\r\n        return fn;\r\n    }\r\n\r\n    var throttled = function() {\r\n        var elapsed = now() - lastExecTime;\r\n        var args = arguments;\r\n\r\n        var exec = function() {\r\n            fn.apply(null, args);\r\n            lastExecTime = now();\r\n        };\r\n\r\n        // first execution\r\n        if (!lastExecTime) {\r\n            return exec();\r\n        }\r\n\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n        if (elapsed > delay) {\r\n            exec();\r\n        } else {\r\n            timeout = setTimeout(exec, delay - elapsed);\r\n        }\r\n    };\r\n\r\n    throttled.cancel = function() {\r\n        clearTimeout(timeout);\r\n    };\r\n\r\n    return throttled;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}