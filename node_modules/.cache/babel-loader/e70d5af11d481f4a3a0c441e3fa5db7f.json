{"ast":null,"code":"import _slicedToArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\views\\\\funnelmapping\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect, Route, Router, useHistory } from \"react-router-dom\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from 'reactstrap';\nimport * as ReactDOM from 'react-dom';\nimport { NumericTextBox } from '@progress/kendo-react-inputs';\nimport { Chart, ChartTitle, ChartLegend, ChartTooltip, ChartArea, ChartPlotArea, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from '@progress/kendo-react-charts';\nimport \"hammerjs\";\nimport Funnel from './Funnel';\nimport Table from './Table';\nimport FunnelMappingDetails from './FunnelMappingDetails';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar tooltipRender = function tooltipRender(props) {\n  if (props.point) {\n    return props.point.dataItem.stat;\n  }\n};\n\nvar ChartContainer1 = function ChartContainer1() {\n  _s();\n\n  var dateTo = localStorage.getItem(\"date_to\");\n  var dateFrom = localStorage.getItem(\"date_from\");\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      res = _useState2[0],\n      setRes = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tabelData = _useState4[0],\n      setTabelData = _useState4[1];\n\n  var brand_name = localStorage.getItem(\"brand_name\");\n  useEffect(function () {\n    fetch('https://srvr1px.cyberads.io/getFunnelData/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        startDate: dateFrom,\n        endDate: dateTo,\n        brand_name: brand_name\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setRes(data);\n    }).catch(function (err) {\n      toast.error(err.message);\n    });\n  }, []);\n  useEffect(function () {\n    fetch('https://srvr1px.cyberads.io/getFunneltableData/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        startDate: dateFrom,\n        endDate: dateTo,\n        brand_name: brand_name\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setTabelData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"match-height\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Funnel, {\n          res: res,\n          table: tabelData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ChartContainer1, \"eO845jcCyv24GP6Eu/ntg86t+sA=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChartContainer1;\nexport default ChartContainer1;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartContainer1\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/funnelmapping/index.js"],"names":["React","useEffect","useState","Link","Redirect","Route","Router","useHistory","Card","CardHeader","CardTitle","CardBody","Row","Col","ReactDOM","NumericTextBox","Chart","ChartTitle","ChartLegend","ChartTooltip","ChartArea","ChartPlotArea","ChartSeries","ChartSeriesItem","ChartSeriesLabels","Funnel","Table","FunnelMappingDetails","toast","ToastContainer","tooltipRender","props","point","dataItem","stat","ChartContainer1","dateTo","localStorage","getItem","dateFrom","history","res","setRes","tabelData","setTabelData","brand_name","fetch","method","headers","body","JSON","stringify","startDate","endDate","then","response","json","data","catch","err","error","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, Redirect, Route, Router, useHistory } from \"react-router-dom\"\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from 'reactstrap'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { NumericTextBox } from '@progress/kendo-react-inputs'\r\nimport { Chart, ChartTitle, ChartLegend, ChartTooltip, ChartArea, ChartPlotArea, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from '@progress/kendo-react-charts'\r\nimport \"hammerjs\"\r\nimport Funnel from './Funnel'\r\nimport Table from './Table'\r\nimport FunnelMappingDetails from './FunnelMappingDetails'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\n\r\nconst tooltipRender = (props) => {\r\n    if (props.point) {\r\n        return props.point.dataItem.stat\r\n    }\r\n}\r\n\r\nconst ChartContainer1 = () => {\r\n    const dateTo = localStorage.getItem(\"date_to\")\r\n    const dateFrom = localStorage.getItem(\"date_from\")\r\n\r\n    const history = useHistory()\r\n    const [res, setRes] = useState([])\r\n    const [tabelData, setTabelData] = useState([])\r\n    const brand_name = localStorage.getItem(\"brand_name\")\r\n    useEffect(() => {\r\n        fetch('https://srvr1px.cyberads.io/getFunnelData/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ startDate: dateFrom, endDate: dateTo, brand_name })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setRes(data))\r\n            .catch(err => {\r\n                toast.error(err.message)\r\n            })\r\n       \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch('https://srvr1px.cyberads.io/getFunneltableData/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ startDate: dateFrom, endDate: dateTo, brand_name })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setTabelData(data))\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n        <ToastContainer />\r\n            <Row className=\"match-height\">\r\n                <Col xs=\"12\">\r\n                    <Funnel res={res}  table={tabelData} />\r\n                    {/* <FunnelMappingDetails /> */}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default ChartContainer1"]},"metadata":{},"sourceType":"module"}