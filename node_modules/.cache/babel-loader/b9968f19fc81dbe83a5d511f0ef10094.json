{"ast":null,"code":"import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\n\nvar Pannable = function (Class) {\n  function Pannable(plotArea, options) {\n    Class.call(this);\n    this.plotArea = plotArea;\n    this.options = deepExtend({}, this.options, options);\n  }\n\n  if (Class) Pannable.__proto__ = Class;\n  Pannable.prototype = Object.create(Class && Class.prototype);\n  Pannable.prototype.constructor = Pannable;\n\n  Pannable.prototype.start = function start(e) {\n    this._active = acceptKey(e, this.options.key);\n    return this._active;\n  };\n\n  Pannable.prototype.move = function move(e) {\n    if (this._active) {\n      var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n\n      if (axisRanges.length) {\n        this.axisRanges = axisRanges;\n        return toChartAxisRanges(axisRanges);\n      }\n    }\n  };\n\n  Pannable.prototype.end = function end() {\n    var active = this._active;\n    this._active = false;\n    return active;\n  };\n\n  Pannable.prototype.pan = function pan() {\n    var ref = this;\n    var plotArea = ref.plotArea;\n    var axisRanges = ref.axisRanges;\n\n    if (axisRanges.length) {\n      for (var idx = 0; idx < axisRanges.length; idx++) {\n        var range = axisRanges[idx];\n        plotArea.updateAxisOptions(range.axis, range.range);\n      }\n\n      plotArea.redraw(plotArea.panes);\n    }\n  };\n\n  Pannable.prototype.destroy = function destroy() {\n    delete this.plotArea;\n  };\n\n  Pannable.prototype._panAxes = function _panAxes(e, position) {\n    var plotArea = this.plotArea;\n    var delta = -e[position].delta;\n    var lock = (this.options.lock || \"\").toLowerCase();\n    var updatedAxes = [];\n\n    if (delta !== 0 && (lock || \"\").toLowerCase() !== position) {\n      var axes = plotArea.axes;\n\n      for (var idx = 0; idx < axes.length; idx++) {\n        var axis = axes[idx];\n\n        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n          var range = axis.pan(delta);\n\n          if (range) {\n            range.limitRange = true;\n            updatedAxes.push({\n              axis: axis,\n              range: range\n            });\n          }\n        }\n      }\n    }\n\n    return updatedAxes;\n  };\n\n  return Pannable;\n}(Class);\n\nPannable.prototype.options = {\n  key: \"none\",\n  lock: \"none\"\n};\nexport default Pannable;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/chart/pan-and-zoom/pannable.js"],"names":["acceptKey","toChartAxisRanges","X","Y","Class","deepExtend","Pannable","plotArea","options","call","__proto__","prototype","Object","create","constructor","start","e","_active","key","move","axisRanges","_panAxes","concat","length","end","active","pan","ref","idx","range","updateAxisOptions","axis","redraw","panes","destroy","position","delta","lock","toLowerCase","updatedAxes","axes","vertical","limitRange","push"],"mappings":"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","sourcesContent":["import acceptKey from './accept-key';\r\nimport toChartAxisRanges from './to-chart-axis-ranges';\r\n\r\nimport { X, Y } from '../../common/constants';\r\nimport { Class, deepExtend } from '../../common';\r\n\r\nvar Pannable = (function (Class) {\r\n    function Pannable(plotArea, options) {\r\n        Class.call(this);\r\n\r\n        this.plotArea = plotArea;\r\n        this.options = deepExtend({}, this.options, options);\r\n    }\r\n\r\n    if ( Class ) Pannable.__proto__ = Class;\r\n    Pannable.prototype = Object.create( Class && Class.prototype );\r\n    Pannable.prototype.constructor = Pannable;\r\n\r\n    Pannable.prototype.start = function start (e) {\r\n        this._active = acceptKey(e, this.options.key);\r\n        return this._active;\r\n    };\r\n\r\n    Pannable.prototype.move = function move (e) {\r\n        if (this._active) {\r\n            var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\r\n            if (axisRanges.length) {\r\n                this.axisRanges = axisRanges;\r\n                return toChartAxisRanges(axisRanges);\r\n            }\r\n        }\r\n    };\r\n\r\n    Pannable.prototype.end = function end () {\r\n        var active = this._active;\r\n        this._active = false;\r\n\r\n        return active;\r\n    };\r\n\r\n    Pannable.prototype.pan = function pan () {\r\n        var ref = this;\r\n        var plotArea = ref.plotArea;\r\n        var axisRanges = ref.axisRanges;\r\n        if (axisRanges.length) {\r\n            for (var idx = 0; idx < axisRanges.length; idx++) {\r\n                var range = axisRanges[idx];\r\n                plotArea.updateAxisOptions(range.axis, range.range);\r\n            }\r\n            plotArea.redraw(plotArea.panes);\r\n        }\r\n    };\r\n\r\n    Pannable.prototype.destroy = function destroy () {\r\n        delete this.plotArea;\r\n    };\r\n\r\n    Pannable.prototype._panAxes = function _panAxes (e, position) {\r\n        var plotArea = this.plotArea;\r\n        var delta = -e[position].delta;\r\n        var lock = (this.options.lock || \"\").toLowerCase();\r\n        var updatedAxes = [];\r\n\r\n        if (delta !== 0 && (lock || \"\").toLowerCase() !== position) {\r\n            var axes = plotArea.axes;\r\n            for (var idx = 0; idx < axes.length; idx++) {\r\n                var axis = axes[idx];\r\n\r\n                if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\r\n                    var range = axis.pan(delta);\r\n\r\n                    if (range) {\r\n                        range.limitRange = true;\r\n                        updatedAxes.push({\r\n                            axis: axis,\r\n                            range: range\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return updatedAxes;\r\n    };\r\n\r\n    return Pannable;\r\n}(Class));\r\n\r\nPannable.prototype.options = {\r\n    key: \"none\",\r\n    lock: \"none\"\r\n};\r\n\r\nexport default Pannable;"]},"metadata":{},"sourceType":"module"}