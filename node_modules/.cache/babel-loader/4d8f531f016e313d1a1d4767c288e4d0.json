{"ast":null,"code":"import _objectSpread from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";// ** React Imports\nimport{useEffect}from'react';import{NavLink,useLocation}from'react-router-dom';// ** Horizontal menu items array\nimport navigation from'@src/navigation/horizontal';// ** Third Party Components\nimport classnames from'classnames';import{DropdownItem}from'reactstrap';import{FormattedMessage}from'react-intl';// ** Utils\nimport{isNavLinkActive,search,getAllParents}from'@layouts/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HorizontalNavMenuLink=function HorizontalNavMenuLink(_ref){var item=_ref.item,setOpenDropdown=_ref.setOpenDropdown,setGroupActive=_ref.setGroupActive,activeItem=_ref.activeItem,setActiveItem=_ref.setActiveItem,routerProps=_ref.routerProps,currentActiveItem=_ref.currentActiveItem,isChild=_ref.isChild;// ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\nvar LinkTag=item.externalLink?'a':NavLink;// ** URL Vars\nvar location=useLocation();var currentURL=location.pathname;var navLinkActive=isNavLinkActive(item.navLink,currentURL,routerProps);// ** Get parents of current items\nvar searchParents=function searchParents(navigation,currentURL){var parents=search(navigation,currentURL,routerProps);// Search for parent object\nvar allParents=getAllParents(parents,'id');// Parents Object to Parents Array\nallParents.pop();return allParents;};// ** Remove all items from OpenDropdown array\nvar resetOpenDropdowns=function resetOpenDropdowns(){return setOpenDropdown([]);};// ** On mount update active group array\nuseEffect(function(){if(currentActiveItem!==null){setActiveItem(currentActiveItem);var arr=searchParents(navigation,currentURL);setGroupActive(_toConsumableArray(arr));}},[location]);return/*#__PURE__*/_jsx(\"li\",{className:classnames('nav-item',{active:item.navLink===activeItem,disabled:item.disabled}),onClick:resetOpenDropdowns,children:/*#__PURE__*/_jsxs(LinkTag,_objectSpread(_objectSpread({className:classnames('d-flex align-items-center',{'dropdown-item':isChild,'nav-link':!isChild}),tag:LinkTag,target:item.newTab?'_blank':undefined/*eslint-disable */},item.externalLink===true?{href:item.navLink||'/'}:{to:item.navLink||'/',isActive:function isActive(match,location){if(!match){return false;}if(match.url&&match.url!==''&&match.url===item.navLink){currentActiveItem=item.navLink;}}}),{},{children:[item.icon,/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(FormattedMessage,{id:item.title})})]}))});};export default HorizontalNavMenuLink;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js"],"names":["useEffect","NavLink","useLocation","navigation","classnames","DropdownItem","FormattedMessage","isNavLinkActive","search","getAllParents","HorizontalNavMenuLink","item","setOpenDropdown","setGroupActive","activeItem","setActiveItem","routerProps","currentActiveItem","isChild","LinkTag","externalLink","location","currentURL","pathname","navLinkActive","navLink","searchParents","parents","allParents","pop","resetOpenDropdowns","arr","active","disabled","newTab","undefined","href","to","isActive","match","url","icon","title"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Horizontal menu items array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { DropdownItem } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  setOpenDropdown,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  routerProps,\r\n  currentActiveItem,\r\n  isChild\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\r\n\r\n  // ** Get parents of current items\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    allParents.pop()\r\n    return allParents\r\n  }\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n"]},"metadata":{},"sourceType":"module"}