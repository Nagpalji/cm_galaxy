{"ast":null,"code":"import Node from './node';\nimport { parseColor } from '../common';\nimport { isTransparent, valueOrDefault } from '../util';\nimport LinearGradient from '../gradients/linear-gradient';\nimport RadialGradient from '../gradients/radial-gradient';\nimport { DASH_ARRAYS, SOLID, BUTT } from '../core/constants';\nimport renderPath from './utils/render-path';\n\nfunction addGradientStops(gradient, stops) {\n  for (var idx = 0; idx < stops.length; idx++) {\n    var stop = stops[idx];\n    var color = parseColor(stop.color());\n    color.a *= stop.opacity();\n    gradient.addColorStop(stop.offset(), color.toCssRgba());\n  }\n}\n\nvar PathNode = function (Node) {\n  function PathNode() {\n    Node.apply(this, arguments);\n  }\n\n  if (Node) PathNode.__proto__ = Node;\n  PathNode.prototype = Object.create(Node && Node.prototype);\n  PathNode.prototype.constructor = PathNode;\n\n  PathNode.prototype.renderTo = function renderTo(ctx) {\n    ctx.save();\n    this.setTransform(ctx);\n    this.setClip(ctx);\n    this.setOpacity(ctx);\n    ctx.beginPath();\n    this.renderPoints(ctx, this.srcElement);\n    this.setLineDash(ctx);\n    this.setLineCap(ctx);\n    this.setLineJoin(ctx);\n    this.setFill(ctx);\n    this.setStroke(ctx);\n    ctx.restore();\n  };\n\n  PathNode.prototype.setFill = function setFill(ctx) {\n    var fill = this.srcElement.options.fill;\n    var hasFill = false;\n\n    if (fill) {\n      if (fill.nodeType === \"Gradient\") {\n        this.setGradientFill(ctx, fill);\n        hasFill = true;\n      } else if (!isTransparent(fill.color)) {\n        ctx.fillStyle = fill.color;\n        ctx.save();\n        this.globalAlpha(ctx, fill.opacity);\n        ctx.fill();\n        ctx.restore();\n        hasFill = true;\n      }\n    }\n\n    return hasFill;\n  };\n\n  PathNode.prototype.setGradientFill = function setGradientFill(ctx, fill) {\n    var bbox = this.srcElement.rawBBox();\n    var gradient;\n\n    if (fill instanceof LinearGradient) {\n      var start = fill.start();\n      var end = fill.end();\n      gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n    } else if (fill instanceof RadialGradient) {\n      var center = fill.center();\n      gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());\n    }\n\n    addGradientStops(gradient, fill.stops);\n    ctx.save();\n\n    if (!fill.userSpace()) {\n      ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);\n    }\n\n    ctx.fillStyle = gradient;\n    ctx.fill();\n    ctx.restore();\n  };\n\n  PathNode.prototype.setStroke = function setStroke(ctx) {\n    var stroke = this.srcElement.options.stroke;\n\n    if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {\n      ctx.strokeStyle = stroke.color;\n      ctx.lineWidth = valueOrDefault(stroke.width, 1);\n      ctx.save();\n      this.globalAlpha(ctx, stroke.opacity);\n      ctx.stroke();\n      ctx.restore();\n      return true;\n    }\n  };\n\n  PathNode.prototype.dashType = function dashType() {\n    var stroke = this.srcElement.options.stroke;\n\n    if (stroke && stroke.dashType) {\n      return stroke.dashType.toLowerCase();\n    }\n  };\n\n  PathNode.prototype.setLineDash = function setLineDash(ctx) {\n    var dashType = this.dashType();\n\n    if (dashType && dashType !== SOLID) {\n      var dashArray = DASH_ARRAYS[dashType];\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(dashArray);\n      } else {\n        ctx.mozDash = dashArray;\n        ctx.webkitLineDash = dashArray;\n      }\n    }\n  };\n\n  PathNode.prototype.setLineCap = function setLineCap(ctx) {\n    var dashType = this.dashType();\n    var stroke = this.srcElement.options.stroke;\n\n    if (dashType && dashType !== SOLID) {\n      ctx.lineCap = BUTT;\n    } else if (stroke && stroke.lineCap) {\n      ctx.lineCap = stroke.lineCap;\n    }\n  };\n\n  PathNode.prototype.setLineJoin = function setLineJoin(ctx) {\n    var stroke = this.srcElement.options.stroke;\n\n    if (stroke && stroke.lineJoin) {\n      ctx.lineJoin = stroke.lineJoin;\n    }\n  };\n\n  PathNode.prototype.renderPoints = function renderPoints(ctx, path) {\n    renderPath(ctx, path);\n  };\n\n  return PathNode;\n}(Node);\n\nexport default PathNode;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-drawing/dist/es/canvas/path-node.js"],"names":["Node","parseColor","isTransparent","valueOrDefault","LinearGradient","RadialGradient","DASH_ARRAYS","SOLID","BUTT","renderPath","addGradientStops","gradient","stops","idx","length","stop","color","a","opacity","addColorStop","offset","toCssRgba","PathNode","apply","arguments","__proto__","prototype","Object","create","constructor","renderTo","ctx","save","setTransform","setClip","setOpacity","beginPath","renderPoints","srcElement","setLineDash","setLineCap","setLineJoin","setFill","setStroke","restore","fill","options","hasFill","nodeType","setGradientFill","fillStyle","globalAlpha","bbox","rawBBox","start","end","createLinearGradient","x","y","center","createRadialGradient","radius","userSpace","transform","width","height","origin","stroke","strokeStyle","lineWidth","dashType","toLowerCase","dashArray","mozDash","webkitLineDash","lineCap","lineJoin","path"],"mappings":"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","sourcesContent":["import Node from './node';\r\nimport { parseColor } from '../common';\r\nimport { isTransparent, valueOrDefault } from '../util';\r\nimport LinearGradient from '../gradients/linear-gradient';\r\nimport RadialGradient from '../gradients/radial-gradient';\r\nimport { DASH_ARRAYS, SOLID, BUTT } from '../core/constants';\r\nimport renderPath from './utils/render-path';\r\n\r\nfunction addGradientStops(gradient, stops) {\r\n    for (var idx = 0; idx < stops.length; idx++) {\r\n        var stop = stops[idx];\r\n        var color = parseColor(stop.color());\r\n\r\n        color.a *= stop.opacity();\r\n\r\n        gradient.addColorStop(stop.offset(), color.toCssRgba());\r\n    }\r\n}\r\n\r\nvar PathNode = (function (Node) {\r\n    function PathNode () {\r\n        Node.apply(this, arguments);\r\n    }\r\n\r\n    if ( Node ) PathNode.__proto__ = Node;\r\n    PathNode.prototype = Object.create( Node && Node.prototype );\r\n    PathNode.prototype.constructor = PathNode;\r\n\r\n    PathNode.prototype.renderTo = function renderTo (ctx) {\r\n        ctx.save();\r\n\r\n        this.setTransform(ctx);\r\n        this.setClip(ctx);\r\n        this.setOpacity(ctx);\r\n\r\n        ctx.beginPath();\r\n\r\n        this.renderPoints(ctx, this.srcElement);\r\n\r\n        this.setLineDash(ctx);\r\n        this.setLineCap(ctx);\r\n        this.setLineJoin(ctx);\r\n\r\n        this.setFill(ctx);\r\n        this.setStroke(ctx);\r\n\r\n        ctx.restore();\r\n    };\r\n\r\n    PathNode.prototype.setFill = function setFill (ctx) {\r\n        var fill = this.srcElement.options.fill;\r\n        var hasFill = false;\r\n\r\n        if (fill) {\r\n            if (fill.nodeType === \"Gradient\") {\r\n                this.setGradientFill(ctx, fill);\r\n                hasFill = true;\r\n            } else if (!isTransparent(fill.color)) {\r\n                ctx.fillStyle = fill.color;\r\n\r\n                ctx.save();\r\n                this.globalAlpha(ctx, fill.opacity);\r\n                ctx.fill();\r\n                ctx.restore();\r\n\r\n                hasFill = true;\r\n            }\r\n        }\r\n\r\n        return hasFill;\r\n    };\r\n\r\n    PathNode.prototype.setGradientFill = function setGradientFill (ctx, fill) {\r\n        var bbox = this.srcElement.rawBBox();\r\n        var gradient;\r\n\r\n        if (fill instanceof LinearGradient) {\r\n            var start = fill.start();\r\n            var end = fill.end();\r\n            gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\r\n        } else if (fill instanceof RadialGradient) {\r\n            var center = fill.center();\r\n            gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());\r\n        }\r\n\r\n        addGradientStops(gradient, fill.stops);\r\n\r\n        ctx.save();\r\n\r\n        if (!fill.userSpace()) {\r\n            ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);\r\n        }\r\n        ctx.fillStyle = gradient;\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n    };\r\n\r\n    PathNode.prototype.setStroke = function setStroke (ctx) {\r\n        var stroke = this.srcElement.options.stroke;\r\n        if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {\r\n            ctx.strokeStyle = stroke.color;\r\n            ctx.lineWidth = valueOrDefault(stroke.width, 1);\r\n\r\n            ctx.save();\r\n            this.globalAlpha(ctx, stroke.opacity);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            return true;\r\n        }\r\n    };\r\n\r\n    PathNode.prototype.dashType = function dashType () {\r\n        var stroke = this.srcElement.options.stroke;\r\n        if (stroke && stroke.dashType) {\r\n            return stroke.dashType.toLowerCase();\r\n        }\r\n    };\r\n\r\n    PathNode.prototype.setLineDash = function setLineDash (ctx) {\r\n        var dashType = this.dashType();\r\n        if (dashType && dashType !== SOLID) {\r\n            var dashArray = DASH_ARRAYS[dashType];\r\n            if (ctx.setLineDash) {\r\n                ctx.setLineDash(dashArray);\r\n            } else {\r\n                ctx.mozDash = dashArray;\r\n                ctx.webkitLineDash = dashArray;\r\n            }\r\n        }\r\n    };\r\n\r\n    PathNode.prototype.setLineCap = function setLineCap (ctx) {\r\n        var dashType = this.dashType();\r\n        var stroke = this.srcElement.options.stroke;\r\n        if (dashType && dashType !== SOLID) {\r\n            ctx.lineCap = BUTT;\r\n        } else if (stroke && stroke.lineCap) {\r\n            ctx.lineCap = stroke.lineCap;\r\n        }\r\n    };\r\n\r\n    PathNode.prototype.setLineJoin = function setLineJoin (ctx) {\r\n        var stroke = this.srcElement.options.stroke;\r\n        if (stroke && stroke.lineJoin) {\r\n            ctx.lineJoin = stroke.lineJoin;\r\n        }\r\n    };\r\n\r\n    PathNode.prototype.renderPoints = function renderPoints (ctx, path) {\r\n        renderPath(ctx, path);\r\n    };\r\n\r\n    return PathNode;\r\n}(Node));\r\n\r\nexport default PathNode;\r\n"]},"metadata":{},"sourceType":"module"}