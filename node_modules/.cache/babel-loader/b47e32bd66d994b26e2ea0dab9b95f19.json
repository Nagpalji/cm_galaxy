{"ast":null,"code":"/**\r\n * @hidden\r\n * Dispatches a new event based on an event that was already internally dispatched to KendoReact users.\r\n *\r\n * @param eventHandler - The public event handler that is assigned by the user.\r\n * When undefined, the method is not an option.\r\n * @param dispatchedEvent - The event that was already dispatched internally.\r\n * @param target - The target component of the new event.\r\n * @param eventData - The additional data that will be passed through the new event.\r\n * When the new event has no additional data\r\n *  other than the `BaseEvent` arguments, pass `undefined`.\r\n */\nexport function dispatchEvent(eventHandler, dispatchedEvent, target, eventData) {\n  if (eventHandler) {\n    var eventBaseData = {\n      syntheticEvent: dispatchedEvent,\n      nativeEvent: dispatchedEvent.nativeEvent,\n      target: target\n    };\n    eventHandler.call(undefined, Object.assign(eventBaseData, eventData));\n  }\n}","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-react-common/dist/es/events/dispatchEvent.js"],"names":["dispatchEvent","eventHandler","dispatchedEvent","target","eventData","eventBaseData","syntheticEvent","nativeEvent","call","undefined","Object","assign"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,YAAvB,EAAqCC,eAArC,EAAsDC,MAAtD,EAA8DC,SAA9D,EAAyE;AAC5E,MAAIH,YAAJ,EAAkB;AACd,QAAII,aAAa,GAAG;AAChBC,MAAAA,cAAc,EAAEJ,eADA;AAEhBK,MAAAA,WAAW,EAAEL,eAAe,CAACK,WAFb;AAGhBJ,MAAAA,MAAM,EAAEA;AAHQ,KAApB;AAKAF,IAAAA,YAAY,CAACO,IAAb,CAAkBC,SAAlB,EAA6BC,MAAM,CAACC,MAAP,CAAcN,aAAd,EAA6BD,SAA7B,CAA7B;AACH;AACJ","sourcesContent":["/**\r\n * @hidden\r\n * Dispatches a new event based on an event that was already internally dispatched to KendoReact users.\r\n *\r\n * @param eventHandler - The public event handler that is assigned by the user.\r\n * When undefined, the method is not an option.\r\n * @param dispatchedEvent - The event that was already dispatched internally.\r\n * @param target - The target component of the new event.\r\n * @param eventData - The additional data that will be passed through the new event.\r\n * When the new event has no additional data\r\n *  other than the `BaseEvent` arguments, pass `undefined`.\r\n */\r\nexport function dispatchEvent(eventHandler, dispatchedEvent, target, eventData) {\r\n    if (eventHandler) {\r\n        var eventBaseData = {\r\n            syntheticEvent: dispatchedEvent,\r\n            nativeEvent: dispatchedEvent.nativeEvent,\r\n            target: target\r\n        };\r\n        eventHandler.call(undefined, Object.assign(eventBaseData, eventData));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}