{"ast":null,"code":"import _objectSpread from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\full-version\\\\full-version\\\\src\\\\views\\\\youtube-performance\\\\youtube\\\\StatsCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport classnames from 'classnames';\nimport Avatar from '@components/avatar';\nimport { TrendingUp, User, Box, DollarSign, Activity, MousePointer, ArrowUpLeft, Filter, Percent, Layers, Eye } from 'react-feather';\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Media } from 'reactstrap';\nimport React, { useState, useEffect } from \"react\";\nimport { icon } from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StatsCard = function StatsCard(_ref) {\n  _s();\n\n  var cols = _ref.cols;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var brand_name = localStorage.getItem(\"brand_name\");\n  var fett = 'https://srvr1px.cyberads.io/youtube_headers/?brand_name=';\n  var fet = fett + brand_name;\n  var ey = localStorage.getItem(\"ey\");\n  var em = localStorage.getItem(\"em\");\n  var ed = localStorage.getItem(\"ed\");\n  var sy = localStorage.getItem(\"sy\");\n  var sm = localStorage.getItem(\"sm\");\n  var sd = localStorage.getItem(\"sd\");\n  var sy1 = \"&sy=\";\n  var sm1 = \"&sm=\";\n  var sd1 = \"&sd=\";\n  var ey1 = \"&ey=\";\n  var em1 = \"&em=\";\n  var ed1 = \"&ed=\";\n  var campaign = '&campaign=';\n  var region = '&region=';\n  var yt_campaign = sessionStorage.getItem(\"yt_campaign_sel\");\n  var yt_region = sessionStorage.getItem(\"yt_region_sel\");\n\n  if (ey === 'NaN') {\n    ey = sy;\n  }\n\n  if (em === 'NaN') {\n    em = sm;\n  }\n\n  if (ed === 'NaN') {\n    ed = sd;\n  }\n\n  useState(function () {\n    fetch(fet + sy1 + sy + sm1 + sm + sd1 + sd + ey1 + ey + em1 + em + ed1 + ed + campaign + yt_campaign + region + yt_region).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(function (data) {\n      setData(data);\n      data[0].icon = /*#__PURE__*/_jsxDEV(DollarSign, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, _this);\n      data[1].icon = /*#__PURE__*/_jsxDEV(TrendingUp, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, _this);\n      data[2].icon = /*#__PURE__*/_jsxDEV(MousePointer, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }, _this);\n      data[3].icon = /*#__PURE__*/_jsxDEV(Percent, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 24\n      }, _this);\n      data[4].icon = /*#__PURE__*/_jsxDEV(Eye, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 24\n      }, _this);\n      data[5].icon = /*#__PURE__*/_jsxDEV(Percent, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }, _this);\n      data[6].icon = /*#__PURE__*/_jsxDEV(User, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, _this);\n    }).catch(function (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Data Unavailable.\"; // const renderdd = () => {\n  //   return dd.map((item, index) => {\n  //     const margin = Object.keys(cols)\n  //     return (\n  //       <Col\n  //         key={index}\n  //         {...cols}\n  //         className={classnames({\n  //           [`mb-2 mb-${margin[0]}-0`]: index !== dd.length - 1\n  //         })}\n  //       >\n  //         <Media>\n  //           <Avatar color={item.color} icon={item.icon} className='mr-2' />\n  //           <Media className='my-auto' body>\n  //             <h4 className='font-weight-bolder mb-0'>{item.title}</h4>\n  //             <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n  //           </Media>\n  //         </Media>\n  //       </Col>\n  //     )\n  //   })\n  // }\n  // return (\n  //   <Card className='card-statistics'>\n  //     {/* <CardHeader>\n  //       <CardTitle tag='h4'>Statistics</CardTitle>\n  //       <CardText className='card-text font-small-2 mr-25 mb-0'>Updated 1 month ago</CardText>\n  //     </CardHeader> */}\n  //     <CardBody className='statistics-body mtb-20'>\n  //       <Row>{renderdd()}</Row>\n  //     </CardBody>\n  //   </Card>\n  // )\n  //   for (var i = 0; i < input.length; i++) {\n  //     var datum = input[i];\n  //     if (!d[datum.key]) {\n  //         d[datum.key] = [];\n  //     }\n  //     d[datum.key].push(datum.val);\n  // }\n\n  var renderData = function renderData() {\n    return data.map(function (item, index) {\n      var margin = Object.keys(cols);\n      return /*#__PURE__*/_jsxDEV(Col, _objectSpread(_objectSpread({}, cols), {}, {\n        className: classnames(_defineProperty({}, \"mb-2 mb-\".concat(margin[0], \"-0\"), index !== data.length - 1)),\n        children: /*#__PURE__*/_jsxDEV(Media, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            color: item.color,\n            icon: item.icon,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Media, {\n            className: \"my-auto\",\n            body: true,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-bolder mb-0\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CardText, {\n              className: \"font-small-3 mb-0\",\n              children: item.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)\n      }), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-statistics\",\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"statistics-body mtb-20\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: renderData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(StatsCard, \"pXIxiw0MktD3Z4+93RaneZxSZO4=\");\n\n_c = StatsCard;\nexport default StatsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsCard\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/full-version/full-version/src/views/youtube-performance/youtube/StatsCard.js"],"names":["classnames","Avatar","TrendingUp","User","Box","DollarSign","Activity","MousePointer","ArrowUpLeft","Filter","Percent","Layers","Eye","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Media","React","useState","useEffect","icon","StatsCard","cols","data","setData","loading","setLoading","error","setError","brand_name","localStorage","getItem","fett","fet","ey","em","ed","sy","sm","sd","sy1","sm1","sd1","ey1","em1","ed1","campaign","region","yt_campaign","sessionStorage","yt_region","fetch","then","response","ok","json","catch","console","finally","renderData","map","item","index","margin","Object","keys","length","color","title","subtitle"],"mappings":"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","sourcesContent":["import classnames from 'classnames'\r\nimport Avatar from '@components/avatar'\r\nimport { TrendingUp, User, Box, DollarSign, Activity, MousePointer, ArrowUpLeft, Filter, Percent, Layers, Eye } from 'react-feather'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Media } from 'reactstrap'\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { icon } from 'leaflet'\r\nconst StatsCard = ({ cols }) => {\r\n  const [data, setData] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const brand_name = localStorage.getItem(\"brand_name\")\r\n  const fett = 'https://srvr1px.cyberads.io/youtube_headers/?brand_name='\r\n  const fet = fett + brand_name\r\n  let ey = localStorage.getItem(\"ey\")\r\n  let em = localStorage.getItem(\"em\")\r\n  let ed = localStorage.getItem(\"ed\")\r\n  const sy = localStorage.getItem(\"sy\")\r\n  const sm = localStorage.getItem(\"sm\")\r\n  const sd = localStorage.getItem(\"sd\")\r\n\r\n  const sy1 = \"&sy=\"\r\n  const sm1 = \"&sm=\"\r\n  const sd1 = \"&sd=\"\r\n  const ey1 = \"&ey=\"\r\n  const em1 = \"&em=\"\r\n  const ed1 = \"&ed=\"\r\n\r\n  const campaign = '&campaign='\r\n  const region = '&region='\r\n  const yt_campaign = sessionStorage.getItem(\"yt_campaign_sel\")\r\n  const yt_region = sessionStorage.getItem(\"yt_region_sel\")\r\n\r\n  if (ey === 'NaN') {\r\n    ey = sy\r\n  }\r\n  if (em === 'NaN') {\r\n    em = sm\r\n  }\r\n  if (ed === 'NaN') {\r\n    ed = sd\r\n  }\r\n\r\n  useState(() => {\r\n    fetch(fet + sy1 + sy + sm1 + sm + sd1 + sd + ey1 + ey + em1 + em + ed1 + ed + campaign + yt_campaign + region + yt_region)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json()\r\n        }\r\n        throw response\r\n      })\r\n      .then((data) => {\r\n        setData(data)\r\n        data[0].icon = <DollarSign size={24} />\r\n        data[1].icon = <TrendingUp size={24} />\r\n        data[2].icon = <MousePointer size={24} />\r\n        data[3].icon = <Percent size={24} />\r\n        data[4].icon = <Eye size={24} />\r\n        data[5].icon = <Percent size={24} />\r\n        data[6].icon = <User size={24} />\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data: \", error)\r\n        setError(error)\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  if (loading) return \"Loading...\"\r\n  if (error) return \"Data Unavailable.\"\r\n\r\n  // const renderdd = () => {\r\n  //   return dd.map((item, index) => {\r\n  //     const margin = Object.keys(cols)\r\n  //     return (\r\n  //       <Col\r\n  //         key={index}\r\n  //         {...cols}\r\n  //         className={classnames({\r\n  //           [`mb-2 mb-${margin[0]}-0`]: index !== dd.length - 1\r\n  //         })}\r\n  //       >\r\n  //         <Media>\r\n  //           <Avatar color={item.color} icon={item.icon} className='mr-2' />\r\n\r\n  //           <Media className='my-auto' body>\r\n  //             <h4 className='font-weight-bolder mb-0'>{item.title}</h4>\r\n  //             <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\r\n  //           </Media>\r\n  //         </Media>\r\n  //       </Col>\r\n  //     )\r\n  //   })\r\n  // }\r\n\r\n\r\n  // return (\r\n  //   <Card className='card-statistics'>\r\n  //     {/* <CardHeader>\r\n  //       <CardTitle tag='h4'>Statistics</CardTitle>\r\n  //       <CardText className='card-text font-small-2 mr-25 mb-0'>Updated 1 month ago</CardText>\r\n  //     </CardHeader> */}\r\n  //     <CardBody className='statistics-body mtb-20'>\r\n  //       <Row>{renderdd()}</Row>\r\n  //     </CardBody>\r\n  //   </Card>\r\n  // )\r\n  //   for (var i = 0; i < input.length; i++) {\r\n  //     var datum = input[i];\r\n  //     if (!d[datum.key]) {\r\n  //         d[datum.key] = [];\r\n  //     }\r\n  //     d[datum.key].push(datum.val);\r\n  // }\r\n\r\n\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const margin = Object.keys(cols)\r\n      return (\r\n        <Col\r\n          key={index}\r\n          {...cols}\r\n          className={classnames({\r\n            [`mb-2 mb-${margin[0]}-0`]: index !== data.length - 1\r\n          })}\r\n        >\r\n          <Media>\r\n            {/* <Avatar color={item.color} icon={item.icon} className='mr-2' /> */}\r\n            <Avatar color={item.color} icon={item.icon} className='mr-2' />\r\n            <Media className='my-auto' body>\r\n              <h4 className='font-weight-bolder mb-0'>{item.title}</h4>\r\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\r\n            </Media>\r\n          </Media>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className='card-statistics'>\r\n      {/* <CardHeader>\r\n        <CardTitle tag='h4'>Statistics</CardTitle>\r\n        <CardText className='card-text font-small-2 mr-25 mb-0'>Updated 1 month ago</CardText>\r\n      </CardHeader> */}\r\n      <CardBody className='statistics-body mtb-20'>\r\n        <Row>{renderData()}</Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsCard\r\n"]},"metadata":{},"sourceType":"module"}