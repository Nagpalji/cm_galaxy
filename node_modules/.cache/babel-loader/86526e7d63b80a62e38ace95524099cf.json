{"ast":null,"code":"import _objectSpread from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import { useState, useContext, Fragment } from 'react'\n// import ReCAPTCHA from \"react-google-recaptcha\"\n// import classnames from 'classnames'\n// import Avatar from '@components/avatar'\n// import { useSkin } from '@hooks/useSkin'\n// import useJwt from '@src/auth/jwt/useJwt'\n// import { useDispatch } from 'react-redux'\n// import { useForm } from 'react-hook-form'\n// import { toast, Slide } from 'react-toastify'\n// import { handleLogin } from '@store/actions/auth'\n// import { AbilityContext } from '@src/utility/context/Can'\n// import { Link, useHistory } from 'react-router-dom'\n// import InputPasswordToggle from '@components/input-password-toggle'\n// import { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\n// // Logo component start\n// import signin from '@src/assets/images/avatars/logo.png'\n// // Logo component End\n// import { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\n// import {\n//   Alert,\n//   Row,\n//   Col,\n//   CardTitle,\n//   CardText,\n//   Form,\n//   Input,\n//   CardImg,\n//   FormGroup,\n//   Label,\n//   CustomInput,\n//   Button,\n//   UncontrolledTooltip,\n//   Spinner\n// } from 'reactstrap'\n// import '@styles/base/pages/page-auth.scss'\n// const ToastContent = ({ name, role }) => (\n//   <Fragment>\n//     <div className='toastify-header'>\n//       <div className='title-wrapper'>\n//         <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n//         <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\n//       </div>\n//     </div>\n//     <div className='toastify-body'>\n//       <span>You have successfully logged in as an {role} user to cmgalaxy. Now you can start to explore. Enjoy!</span>\n//     </div>\n//   </Fragment>\n// )\n// const Login = props => {\n//   const [skin, setSkin] = useSkin()\n//   const ability = useContext(AbilityContext)\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n//   const [email, setEmail] = useState()\n//   const [password, setPassword] = useState()\n//   const [emailerror, setEmailerror] = useState()\n//   const [passworderror, setPassworderror] = useState()\n//   const capacha = event => {\n//     console.log(\"Captcha value:\", value)\n//   }\n//   const { register, errors, handleSubmit } = useForm()\n//   const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n//   source = require(`@src/assets/images/pages/${illustration}`).default\n//   //const [data, setData] = useState([])  \n//   const api_url = \"https://srvr1px.cyberads.io/cmgalaxy_users/?user_name=testing&password=Gemsbschool\"\n// // Defining async function\n// async function getapi(url) {\n//     // Storing response\n//     const response = await fetch(url)\n//     // Storing data in form of JSON\n//     const data1 = await response.json()\n//     console.log(data1)\n//     localStorage.setItem('userlogin', JSON.stringify(data1))\n// }\n// // Calling that async function\n// getapi(api_url)\n//   const handleChange = e => { \n//     setEmail(e.target.value)\n//     setEmailerror('')\n//   }\n//   const handleChangePassword = e => {\n//     setPassword(e.target.value)\n//     setPassworderror('')\n//   }\n//   const onSubmit = data => {\n//     //window.localStorage.clear()\n//     if (document.getElementById('username').value === \"\") {\n//       setEmailerror('Please provide email.')\n//       //return false\n//     } else {\n//       setEmailerror('')\n//     }\n//     if (document.getElementById('password').value === \"\") {\n//       setPassworderror('Please provide password.')\n//       //return false\n//     } else {\n//       setPassworderror('')\n//     }\n//     if (document.getElementById('username').value !== \"\" && document.getElementById('password').value !== \"\") {\n//       document.getElementById('btnlogin').style.display = 'none'\n//       document.getElementById('loaderimg').style.display = 'block'\n//     const fet = 'https://srvr1px.cyberads.io/login/?user_name='\n//     const p = \"&password=\"\n//     localStorage.setItem('user_name', email)\n//     localStorage.setItem('email', email)\n//     localStorage.setItem('password', password)\n//     fetch(fet + localStorage.getItem('user_name') + p + localStorage.getItem('password'), \n//         {\n//           method: 'POST'\n//         }).then(res => res.json())\n//         .then(\n//           (result) => {\n//             console.log(JSON.stringify(result))  \n//             //alert(JSON.stringify(result))\n//             if (result.msg === 'success') {\n//               //localStorage.setItem('user_name', email)\n//               //localStorage.setItem('password', password)\n//               localStorage.setItem('brand_name', result.brand_name)\n//               //alert(localStorage.getItem('user_name'))\n//               //alert(email)\n//               //alert(password)\n//               //if (isObjEmpty(errors)) {\n//                 useJwt\n//                   .login({ email, password })\n//                  .then(res => {\n//                    //alert(JSON.stringify(res))\n//                     const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\n//                     //alert(JSON.stringify(data))\n//                     dispatch(handleLogin(data))\n//                     ability.update(res.data.userData.ability)\n//                     //history.push(\"/overall-snapshot\")\n//                     history.push(getHomeRouteForLoggedInUser('admin'))\n//                     toast.success(\n//                       <ToastContent name={data.fullName || data.username} role={'admin'} />,\n//                       { transition: Slide, hideProgressBar: true, autoClose: 5000 }\n//                     )\n//                   })\n//                   .catch(err => console.log(err))\n//               //}\n//               //handleHTMLAlert()\n//               //history.push(\"/overall-snapshot\")\n//               //history.push(getHomeRouteForLoggedInUser('admin'))\n//             } else {\n//               alert(\"Credentials are invalid.\")\n//               document.getElementById('btnlogin').style.display = 'block'\n//               document.getElementById('loaderimg').style.display = 'none'\n//             }\n//           },\n//             (error) => {\n//               //setError({ error })\n//             }\n//           )\n//     } else {\n//       document.getElementById('btnlogin').style.display = 'block'\n//       document.getElementById('loaderimg').style.display = 'none'\n//     }\n//   }\n//   return (\n//     <div className='auth-wrapper auth-v2'>\n//       <Row className='auth-inner m-0'>\n//         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n//           <CardImg top src={signin} className='SignLogo'  alt='card1' />\n//           {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\n//         </Link>\n//         <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n//           <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n//             <img className='img-fluid' src={source} alt='Login V2' />\n//           </div>\n//         </Col>\n//         <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n//           <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n//             <CardTitle tag='h2' className='font-weight-bold mb-1'>\n//               Welcome to CMGalaxy!\n//             </CardTitle>\n//             <CardText className='mb-2'>Please sign-in to your account</CardText>\n//             {/* <Alert color='primary'>\n//               <div className='alert-body font-small-2'>\n//                 <p>\n//                   <small className='mr-50'>\n//                     <span className='font-weight-bold'>Admin:</span> admin@demo.com | admin\n//                   </small>\n//                 </p>\n//                 <p>\n//                   <small className='mr-50'>\n//                     <span className='font-weight-bold'>Client:</span> client@demo.com | client\n//                   </small>\n//                 </p>\n//               </div>\n//               <HelpCircle\n//                 id='login-tip'\n//                 className='position-absolute'\n//                 size={18}\n//                 style={{ top: '10px', right: '10px' }}\n//               />\n//               <UncontrolledTooltip target='login-tip' placement='left'>\n//                 This is just for ACL demo purpose.\n//               </UncontrolledTooltip>\n//             </Alert> */}\n//             <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n//               <FormGroup>\n//                 <Label className='form-label' for='login-email'>\n//                   Email\n//                 </Label>\n//                 <Input\n//                   autofocus\n//                   type='email'\n//                   value={email}\n//                   id='username'\n//                   name='username'\n//                   placeholder=''\n//                   onChange={handleChange}\n//                 />\n//                 <small style={{ color: \"red\" }}>{emailerror}</small>\n//               </FormGroup>\n//               <FormGroup>\n//                 <div className='d-flex justify-content-between'>\n//                   <Label className='form-label' for='login-password'>\n//                     Password\n//                   </Label>\n//                   <Link to='/forgot-password'>\n//                     <small>Forgot Password?</small>\n//                   </Link>\n//                 </div>\n//                 <InputPasswordToggle\n//                   value={password}\n//                   id='password'\n//                   name='password'\n//                   className='input-group-merge'\n//                   onChange={handleChangePassword}\n//                 />\n//                 <small style={{ color: \"red\" }}>{passworderror}</small>\n//               </FormGroup>\n//               <FormGroup className='' style={{marginTop: \"25px\", marginBottom: \"22px\"}}>              <ReCAPTCHA\n//                 sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n//                 onChange={capacha}\n//               />\n//               </FormGroup>\n//               <FormGroup>\n//                 <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\n//               </FormGroup>\n//               <Button.Ripple type='submit' id='btnlogin' color='primary' block>\n//                 Sign in\n//               </Button.Ripple>\n//               <div className='demo-inline-spacing justify-content-between loader_mobileal' style={{ marginLeft: 30, display: 'none'}} id='loaderimg'>\n//               <Spinner color='primary' />\n//              </div>\n//             </Form>\n//             <p className='text-center mt-2'>\n//               <span className='mr-25'>Don't have an account ?</span>\n//               <Link to='/register'>\n//                 <span>Sign Up</span>\n//               </Link>\n//             </p>\n//             {/* <div className='divider my-2'>\n//               <div className='divider-text'>or</div>\n//             </div>\n//             <div className='auth-footer-btn d-flex justify-content-center'>\n//               <Button.Ripple color='facebook'>\n//                 <Facebook size={14} />\n//               </Button.Ripple>\n//               <Button.Ripple color='twitter'>\n//                 <Twitter size={14} />\n//               </Button.Ripple>\n//               <Button.Ripple color='google'>\n//                 <Mail size={14} />\n//               </Button.Ripple>\n//               <Button.Ripple className='mr-0' color='github'>\n//                 <GitHub size={14} />\n//               </Button.Ripple>\n//             </div> */}\n//           </Col>\n//         </Col>\n//       </Row>\n//     </div>\n//   )\n// }\n// export default Login\nimport{useState,useContext,Fragment}from'react';import classnames from'classnames';import Avatar from'@components/avatar';import{useSkin}from'@hooks/useSkin';import useJwt from'@src/auth/jwt/useJwt';import{useDispatch}from'react-redux';import{useForm}from'react-hook-form';import{toast,Slide}from'react-toastify';import{handleLogin}from'@store/actions/auth';import{AbilityContext}from'@src/utility/context/Can';import{Link,useHistory}from'react-router-dom';import InputPasswordToggle from'@components/input-password-toggle';import{getHomeRouteForLoggedInUser,isObjEmpty}from'@utils';// Logo component start\nimport signin from'@src/assets/images/avatars/logo.png';// Logo component End\nimport{Facebook,Twitter,Mail,GitHub,HelpCircle,Coffee}from'react-feather';import{Alert,Row,Col,CardTitle,CardText,Form,Input,CardImg,FormGroup,Label,CustomInput,Button,UncontrolledTooltip,Spinner}from'reactstrap';import'@styles/base/pages/page-auth.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ToastContent=function ToastContent(_ref){var name=_ref.name,role=_ref.role;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"toastify-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsx(Avatar,{size:\"sm\",color:\"success\",icon:/*#__PURE__*/_jsx(Coffee,{size:12})}),/*#__PURE__*/_jsxs(\"h6\",{className:\"toast-title font-weight-bold\",children:[\"Welcome, \",name]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"toastify-body\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"You have successfully logged in as an \",role,\" user to cmgalaxy. Now you can start to explore. Enjoy!\"]})})]});};var Login=function Login(props){var _useSkin=useSkin(),_useSkin2=_slicedToArray(_useSkin,2),skin=_useSkin2[0],setSkin=_useSkin2[1];var ability=useContext(AbilityContext);var dispatch=useDispatch();var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),emailerror=_useState6[0],setEmailerror=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),passworderror=_useState8[0],setPassworderror=_useState8[1];var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;var illustration=skin==='dark'?'login-v2-dark.svg':'login-v2.svg',source=require(\"@src/assets/images/pages/\".concat(illustration)).default;//const [data, setData] = useState([])  \nvar api_url=\"https://srvr1px.cyberads.io/cmgalaxy_users/?user_name=testing&password=Gemsbschool\";// Defining async function\n// async function getapi(url) {\n//     // Storing response\n//     const response = await fetch(url)\n//     // Storing data in form of JSON\n//     const data1 = await response.json()\n//     localStorage.setItem('userlogin', JSON.stringify(data1))\n// }\n// // Calling that async function\n// getapi(api_url)\nvar handleChange=function handleChange(e){setEmail(e.target.value);setEmailerror('');};var handleChangePassword=function handleChangePassword(e){setPassword(e.target.value);setPassworderror('');};var onSubmit=function onSubmit(data){//window.localStorage.clear()\nif(document.getElementById('username').value===\"\"){setEmailerror('Please provide email.');//return false\n}else{setEmailerror('');}if(document.getElementById('password').value===\"\"){setPassworderror('Please provide password.');//return false\n}else{setPassworderror('');}if(document.getElementById('username').value!==\"\"&&document.getElementById('password').value!==\"\"){document.getElementById('btnlogin').style.display='none';document.getElementById('loaderimg').style.display='block';var fet='https://srvr1px.cyberads.io/login/?user_name=';var p=\"&password=\";localStorage.setItem('user_name',email);localStorage.setItem('email',email);// localStorage.setItem('password', password)\nfetch(fet+localStorage.getItem('user_name')+p+password,{method:'POST'}).then(function(res){return res.json();}).then(function(result){console.log(JSON.stringify(result));//alert(JSON.stringify(result))\nif(result.msg==='success'){//localStorage.setItem('user_name', email)\n//localStorage.setItem('password', password)\nlocalStorage.setItem('brand_name',result.brand_name);localStorage.setItem('level',result.level);//alert(localStorage.getItem('user_name'))\n//alert(email)\n//alert(password)\n//if (isObjEmpty(errors)) {\nuseJwt.login({email:email,password:password}).then(function(res){//alert(JSON.stringify(res))\nvar data=_objectSpread(_objectSpread({},res.data.userData),{},{accessToken:res.data.accessToken,refreshToken:res.data.refreshToken});// alert(JSON.stringify(data))\ndispatch(handleLogin(data));ability.update(res.data.userData.ability);//history.push(\"/overall-snapshot\")\nhistory.push(getHomeRouteForLoggedInUser('admin'));// localStorage.removeItem('userlogin')\ntoast.success(/*#__PURE__*/_jsx(ToastContent,{name:data.fullName||data.username,role:localStorage.getItem('level')}),{transition:Slide,hideProgressBar:true,autoClose:5000});}).catch(function(err){return console.log(err);});//}\n//handleHTMLAlert()\n//history.push(\"/overall-snapshot\")\n//history.push(getHomeRouteForLoggedInUser('admin'))\n}else{alert(\"Credentials are invalid.\");document.getElementById('btnlogin').style.display='block';document.getElementById('loaderimg').style.display='none';}},function(error){//setError({ error })\n});}else{document.getElementById('btnlogin').style.display='block';document.getElementById('loaderimg').style.display='none';}};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-wrapper auth-v2\",children:/*#__PURE__*/_jsxs(Row,{className:\"auth-inner m-0\",children:[/*#__PURE__*/_jsx(Link,{to:\"/index\",className:\"brand-logo\",children:/*#__PURE__*/_jsx(CardImg,{top:true,src:signin,className:\"SignLogo\",alt:\"cmgalaxy\"})}),/*#__PURE__*/_jsx(Col,{className:\"d-none d-lg-flex align-items-center p-5\",lg:\"8\",sm:\"12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-100 d-lg-flex align-items-center justify-content-center px-5\",children:/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid\",src:source,alt:\"Login V2\"})})}),/*#__PURE__*/_jsx(Col,{className:\"d-flex align-items-center auth-bg px-2 p-lg-5\",lg:\"4\",sm:\"12\",children:/*#__PURE__*/_jsxs(Col,{className:\"px-xl-2 mx-auto\",sm:\"8\",md:\"6\",lg:\"12\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h2\",className:\"font-weight-bold mb-1\",children:\"Welcome to CMGalaxy!\"}),/*#__PURE__*/_jsx(CardText,{className:\"mb-2\",children:\"Please sign-in to your account\"}),/*#__PURE__*/_jsxs(Form,{className:\"auth-login-form mt-2\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"login-email\",children:\"Email\"}),/*#__PURE__*/_jsx(Input,{autofocus:true,type:\"email\",value:email,id:\"username\",name:\"username\",placeholder:\"\",onChange:handleChange}),/*#__PURE__*/_jsx(\"small\",{style:{color:\"red\"},children:emailerror})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"login-password\",children:\"Password\"}),/*#__PURE__*/_jsx(Link,{to:\"/forgot-password\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Forgot Password?\"})})]}),/*#__PURE__*/_jsx(InputPasswordToggle,{value:password,id:\"password\",name:\"password\",className:\"input-group-merge\",onChange:handleChangePassword}),/*#__PURE__*/_jsx(\"small\",{style:{color:\"red\"},children:passworderror})]}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(CustomInput,{type:\"checkbox\",className:\"custom-control-Primary\",id:\"remember-me\",label:\"Remember Me\"})}),/*#__PURE__*/_jsx(Button.Ripple,{type:\"submit\",id:\"btnlogin\",color:\"primary\",block:true,children:\"Sign in\"}),/*#__PURE__*/_jsx(\"div\",{className:\"demo-inline-spacing justify-content-between loader_mobileal\",style:{marginLeft:30,display:'none'},id:\"loaderimg\",children:/*#__PURE__*/_jsx(Spinner,{color:\"primary\"})})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center mt-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-25\",children:\"Don't have an account ?\"}),/*#__PURE__*/_jsx(Link,{to:\"/register\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Sign Up\"})})]})]})})]})});};export default Login;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/pages/authentication/Login.js"],"names":["useState","useContext","Fragment","classnames","Avatar","useSkin","useJwt","useDispatch","useForm","toast","Slide","handleLogin","AbilityContext","Link","useHistory","InputPasswordToggle","getHomeRouteForLoggedInUser","isObjEmpty","signin","Facebook","Twitter","Mail","GitHub","HelpCircle","Coffee","Alert","Row","Col","CardTitle","CardText","Form","Input","CardImg","FormGroup","Label","CustomInput","Button","UncontrolledTooltip","Spinner","ToastContent","name","role","Login","props","skin","setSkin","ability","dispatch","history","email","setEmail","password","setPassword","emailerror","setEmailerror","passworderror","setPassworderror","register","errors","handleSubmit","illustration","source","require","default","api_url","handleChange","e","target","value","handleChangePassword","onSubmit","data","document","getElementById","style","display","fet","p","localStorage","setItem","fetch","getItem","method","then","res","json","result","console","log","JSON","stringify","msg","brand_name","level","login","userData","accessToken","refreshToken","update","push","success","fullName","username","transition","hideProgressBar","autoClose","catch","err","alert","error","color","marginLeft"],"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","sourcesContent":["// import { useState, useContext, Fragment } from 'react'\r\n// import ReCAPTCHA from \"react-google-recaptcha\"\r\n// import classnames from 'classnames'\r\n// import Avatar from '@components/avatar'\r\n// import { useSkin } from '@hooks/useSkin'\r\n// import useJwt from '@src/auth/jwt/useJwt'\r\n// import { useDispatch } from 'react-redux'\r\n// import { useForm } from 'react-hook-form'\r\n// import { toast, Slide } from 'react-toastify'\r\n// import { handleLogin } from '@store/actions/auth'\r\n// import { AbilityContext } from '@src/utility/context/Can'\r\n// import { Link, useHistory } from 'react-router-dom'\r\n// import InputPasswordToggle from '@components/input-password-toggle'\r\n// import { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\n// // Logo component start\r\n// import signin from '@src/assets/images/avatars/logo.png'\r\n// // Logo component End\r\n// import { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\n// import {\r\n//   Alert,\r\n//   Row,\r\n//   Col,\r\n//   CardTitle,\r\n//   CardText,\r\n//   Form,\r\n//   Input,\r\n//   CardImg,\r\n//   FormGroup,\r\n//   Label,\r\n//   CustomInput,\r\n//   Button,\r\n//   UncontrolledTooltip,\r\n//   Spinner\r\n// } from 'reactstrap'\r\n\r\n// import '@styles/base/pages/page-auth.scss'\r\n\r\n// const ToastContent = ({ name, role }) => (\r\n//   <Fragment>\r\n//     <div className='toastify-header'>\r\n//       <div className='title-wrapper'>\r\n//         <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n//         <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\r\n//       </div>\r\n//     </div>\r\n//     <div className='toastify-body'>\r\n//       <span>You have successfully logged in as an {role} user to cmgalaxy. Now you can start to explore. Enjoy!</span>\r\n//     </div>\r\n//   </Fragment>\r\n// )\r\n\r\n// const Login = props => {\r\n//   const [skin, setSkin] = useSkin()\r\n//   const ability = useContext(AbilityContext)\r\n//   const dispatch = useDispatch()\r\n//   const history = useHistory()\r\n//   const [email, setEmail] = useState()\r\n//   const [password, setPassword] = useState()\r\n//   const [emailerror, setEmailerror] = useState()\r\n//   const [passworderror, setPassworderror] = useState()\r\n//   const capacha = event => {\r\n//     console.log(\"Captcha value:\", value)\r\n//   }\r\n//   const { register, errors, handleSubmit } = useForm()\r\n//   const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n//   source = require(`@src/assets/images/pages/${illustration}`).default\r\n//   //const [data, setData] = useState([])  \r\n//   const api_url = \"https://srvr1px.cyberads.io/cmgalaxy_users/?user_name=testing&password=Gemsbschool\"\r\n  \r\n// // Defining async function\r\n// async function getapi(url) {\r\n    \r\n//     // Storing response\r\n//     const response = await fetch(url)\r\n//     // Storing data in form of JSON\r\n//     const data1 = await response.json()\r\n//     console.log(data1)\r\n//     localStorage.setItem('userlogin', JSON.stringify(data1))\r\n\r\n// }\r\n// // Calling that async function\r\n// getapi(api_url)\r\n\r\n//   const handleChange = e => { \r\n   \r\n//     setEmail(e.target.value)\r\n//     setEmailerror('')\r\n//   }\r\n\r\n//   const handleChangePassword = e => {\r\n\r\n//     setPassword(e.target.value)\r\n//     setPassworderror('')\r\n//   }\r\n\r\n//   const onSubmit = data => {\r\n//     //window.localStorage.clear()\r\n//     if (document.getElementById('username').value === \"\") {\r\n//       setEmailerror('Please provide email.')\r\n//       //return false\r\n//     } else {\r\n//       setEmailerror('')\r\n//     }\r\n//     if (document.getElementById('password').value === \"\") {\r\n//       setPassworderror('Please provide password.')\r\n//       //return false\r\n//     } else {\r\n//       setPassworderror('')\r\n//     }\r\n//     if (document.getElementById('username').value !== \"\" && document.getElementById('password').value !== \"\") {\r\n//       document.getElementById('btnlogin').style.display = 'none'\r\n//       document.getElementById('loaderimg').style.display = 'block'\r\n//     const fet = 'https://srvr1px.cyberads.io/login/?user_name='\r\n//     const p = \"&password=\"\r\n//     localStorage.setItem('user_name', email)\r\n//     localStorage.setItem('email', email)\r\n//     localStorage.setItem('password', password)\r\n//     fetch(fet + localStorage.getItem('user_name') + p + localStorage.getItem('password'), \r\n//         {\r\n//           method: 'POST'\r\n    \r\n//         }).then(res => res.json())\r\n//         .then(\r\n//           (result) => {\r\n//             console.log(JSON.stringify(result))  \r\n//             //alert(JSON.stringify(result))\r\n//             if (result.msg === 'success') {\r\n//               //localStorage.setItem('user_name', email)\r\n//               //localStorage.setItem('password', password)\r\n//               localStorage.setItem('brand_name', result.brand_name)\r\n//               //alert(localStorage.getItem('user_name'))\r\n//               //alert(email)\r\n//               //alert(password)\r\n//               //if (isObjEmpty(errors)) {\r\n//                 useJwt\r\n//                   .login({ email, password })\r\n//                  .then(res => {\r\n//                    //alert(JSON.stringify(res))\r\n//                     const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n//                     //alert(JSON.stringify(data))\r\n//                     dispatch(handleLogin(data))\r\n//                     ability.update(res.data.userData.ability)\r\n//                     //history.push(\"/overall-snapshot\")\r\n//                     history.push(getHomeRouteForLoggedInUser('admin'))\r\n//                     toast.success(\r\n//                       <ToastContent name={data.fullName || data.username} role={'admin'} />,\r\n                      \r\n//                       { transition: Slide, hideProgressBar: true, autoClose: 5000 }\r\n//                     )\r\n//                   })\r\n//                   .catch(err => console.log(err))\r\n//               //}\r\n//               //handleHTMLAlert()\r\n              \r\n//               //history.push(\"/overall-snapshot\")\r\n//               //history.push(getHomeRouteForLoggedInUser('admin'))\r\n                \r\n//             } else {\r\n//               alert(\"Credentials are invalid.\")\r\n//               document.getElementById('btnlogin').style.display = 'block'\r\n//               document.getElementById('loaderimg').style.display = 'none'\r\n//             }\r\n//           },\r\n//             (error) => {\r\n//               //setError({ error })\r\n//             }\r\n//           )\r\n//     } else {\r\n//       document.getElementById('btnlogin').style.display = 'block'\r\n//       document.getElementById('loaderimg').style.display = 'none'\r\n//     }\r\n    \r\n//   }\r\n\r\n//   return (\r\n//     <div className='auth-wrapper auth-v2'>\r\n//       <Row className='auth-inner m-0'>\r\n//         <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n//           <CardImg top src={signin} className='SignLogo'  alt='card1' />\r\n//           {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\r\n//         </Link>\r\n//         <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n//           <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n//             <img className='img-fluid' src={source} alt='Login V2' />\r\n//           </div>\r\n//         </Col>\r\n//         <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n//           <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n//             <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n//               Welcome to CMGalaxy!\r\n//             </CardTitle>\r\n//             <CardText className='mb-2'>Please sign-in to your account</CardText>\r\n//             {/* <Alert color='primary'>\r\n//               <div className='alert-body font-small-2'>\r\n//                 <p>\r\n//                   <small className='mr-50'>\r\n//                     <span className='font-weight-bold'>Admin:</span> admin@demo.com | admin\r\n//                   </small>\r\n//                 </p>\r\n//                 <p>\r\n//                   <small className='mr-50'>\r\n//                     <span className='font-weight-bold'>Client:</span> client@demo.com | client\r\n//                   </small>\r\n//                 </p>\r\n//               </div>\r\n//               <HelpCircle\r\n//                 id='login-tip'\r\n//                 className='position-absolute'\r\n//                 size={18}\r\n//                 style={{ top: '10px', right: '10px' }}\r\n//               />\r\n//               <UncontrolledTooltip target='login-tip' placement='left'>\r\n//                 This is just for ACL demo purpose.\r\n//               </UncontrolledTooltip>\r\n//             </Alert> */}\r\n//             <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n//               <FormGroup>\r\n//                 <Label className='form-label' for='login-email'>\r\n//                   Email\r\n//                 </Label>\r\n//                 <Input\r\n//                   autofocus\r\n//                   type='email'\r\n//                   value={email}\r\n//                   id='username'\r\n//                   name='username'\r\n//                   placeholder=''\r\n//                   onChange={handleChange}\r\n                  \r\n//                 />\r\n//                 <small style={{ color: \"red\" }}>{emailerror}</small>\r\n//               </FormGroup>\r\n//               <FormGroup>\r\n//                 <div className='d-flex justify-content-between'>\r\n//                   <Label className='form-label' for='login-password'>\r\n//                     Password\r\n//                   </Label>\r\n//                   <Link to='/forgot-password'>\r\n//                     <small>Forgot Password?</small>\r\n//                   </Link>\r\n//                 </div>\r\n//                 <InputPasswordToggle\r\n//                   value={password}\r\n//                   id='password'\r\n//                   name='password'\r\n//                   className='input-group-merge'\r\n//                   onChange={handleChangePassword}\r\n//                 />\r\n//                 <small style={{ color: \"red\" }}>{passworderror}</small>\r\n//               </FormGroup>\r\n//               <FormGroup className='' style={{marginTop: \"25px\", marginBottom: \"22px\"}}>              <ReCAPTCHA\r\n//                 sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n//                 onChange={capacha}\r\n//               />\r\n//               </FormGroup>\r\n//               <FormGroup>\r\n//                 <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\r\n//               </FormGroup>\r\n//               <Button.Ripple type='submit' id='btnlogin' color='primary' block>\r\n//                 Sign in\r\n//               </Button.Ripple>\r\n//               <div className='demo-inline-spacing justify-content-between loader_mobileal' style={{ marginLeft: 30, display: 'none'}} id='loaderimg'>\r\n//               <Spinner color='primary' />\r\n//              </div>\r\n//             </Form>\r\n//             <p className='text-center mt-2'>\r\n//               <span className='mr-25'>Don't have an account ?</span>\r\n//               <Link to='/register'>\r\n//                 <span>Sign Up</span>\r\n//               </Link>\r\n//             </p>\r\n//             {/* <div className='divider my-2'>\r\n//               <div className='divider-text'>or</div>\r\n//             </div>\r\n//             <div className='auth-footer-btn d-flex justify-content-center'>\r\n//               <Button.Ripple color='facebook'>\r\n//                 <Facebook size={14} />\r\n//               </Button.Ripple>\r\n//               <Button.Ripple color='twitter'>\r\n//                 <Twitter size={14} />\r\n//               </Button.Ripple>\r\n//               <Button.Ripple color='google'>\r\n//                 <Mail size={14} />\r\n//               </Button.Ripple>\r\n//               <Button.Ripple className='mr-0' color='github'>\r\n//                 <GitHub size={14} />\r\n//               </Button.Ripple>\r\n//             </div> */}\r\n//           </Col>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Login\r\nimport { useState, useContext, Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport Avatar from '@components/avatar'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\n// Logo component start\r\nimport signin from '@src/assets/images/avatars/logo.png'\r\n// Logo component End\r\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\nimport {\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardText,\r\n  Form,\r\n  Input,\r\n  CardImg,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledTooltip,\r\n  Spinner\r\n} from 'reactstrap'\r\n\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in as an {role} user to cmgalaxy. Now you can start to explore. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Login = props => {\r\n  const [skin, setSkin] = useSkin()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState()\r\n  const [password, setPassword] = useState()\r\n  const [emailerror, setEmailerror] = useState()\r\n  const [passworderror, setPassworderror] = useState()\r\n  \r\n  const { register, errors, handleSubmit } = useForm()\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n  source = require(`@src/assets/images/pages/${illustration}`).default\r\n  //const [data, setData] = useState([])  \r\n  const api_url = \"https://srvr1px.cyberads.io/cmgalaxy_users/?user_name=testing&password=Gemsbschool\"\r\n  \r\n// Defining async function\r\n// async function getapi(url) {\r\n    \r\n//     // Storing response\r\n//     const response = await fetch(url)\r\n//     // Storing data in form of JSON\r\n//     const data1 = await response.json()\r\n//     localStorage.setItem('userlogin', JSON.stringify(data1))\r\n\r\n// }\r\n// // Calling that async function\r\n// getapi(api_url)\r\n\r\n  const handleChange = e => { \r\n   \r\n    setEmail(e.target.value)\r\n    setEmailerror('')\r\n  }\r\n\r\n  const handleChangePassword = e => {\r\n\r\n    setPassword(e.target.value)\r\n    setPassworderror('')\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    //window.localStorage.clear()\r\n    if (document.getElementById('username').value === \"\") {\r\n      setEmailerror('Please provide email.')\r\n      //return false\r\n    } else {\r\n      setEmailerror('')\r\n    }\r\n    if (document.getElementById('password').value === \"\") {\r\n      setPassworderror('Please provide password.')\r\n      //return false\r\n    } else {\r\n      setPassworderror('')\r\n    }\r\n    if (document.getElementById('username').value !== \"\" && document.getElementById('password').value !== \"\") {\r\n      document.getElementById('btnlogin').style.display = 'none'\r\n      document.getElementById('loaderimg').style.display = 'block'\r\n    const fet = 'https://srvr1px.cyberads.io/login/?user_name='\r\n    const p = \"&password=\"\r\n    localStorage.setItem('user_name', email)\r\n    localStorage.setItem('email', email)\r\n    // localStorage.setItem('password', password)\r\n    fetch(fet + localStorage.getItem('user_name') + p + password, \r\n        {\r\n          method: 'POST'\r\n    \r\n        }).then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log(JSON.stringify(result))\r\n             \r\n            //alert(JSON.stringify(result))\r\n            if (result.msg === 'success') {\r\n              //localStorage.setItem('user_name', email)\r\n              //localStorage.setItem('password', password)\r\n              localStorage.setItem('brand_name', result.brand_name)\r\n              localStorage.setItem('level', result.level)\r\n              //alert(localStorage.getItem('user_name'))\r\n              //alert(email)\r\n              //alert(password)\r\n              //if (isObjEmpty(errors)) {\r\n                useJwt\r\n                  .login({ email, password })\r\n                 .then(res => {\r\n                   //alert(JSON.stringify(res))\r\n                    const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n                    // alert(JSON.stringify(data))\r\n                    dispatch(handleLogin(data))\r\n                    ability.update(res.data.userData.ability)\r\n                    //history.push(\"/overall-snapshot\")\r\n                    history.push(getHomeRouteForLoggedInUser('admin'))\r\n                    // localStorage.removeItem('userlogin')\r\n                    toast.success(\r\n                      <ToastContent name={data.fullName || data.username} role={localStorage.getItem('level')} />,\r\n                      \r\n                      { transition: Slide, hideProgressBar: true, autoClose: 5000 }\r\n                    )\r\n                  })\r\n                  .catch(err => console.log(err))\r\n              //}\r\n              //handleHTMLAlert()\r\n              \r\n              //history.push(\"/overall-snapshot\")\r\n              //history.push(getHomeRouteForLoggedInUser('admin'))\r\n                \r\n            } else {\r\n              alert(\"Credentials are invalid.\")\r\n              document.getElementById('btnlogin').style.display = 'block'\r\n              document.getElementById('loaderimg').style.display = 'none'\r\n            }\r\n          },\r\n            (error) => {\r\n              //setError({ error })\r\n            }\r\n          )\r\n    } else {\r\n      document.getElementById('btnlogin').style.display = 'block'\r\n      document.getElementById('loaderimg').style.display = 'none'\r\n    }\r\n    \r\n  }\r\n  \r\n  return (\r\n    <div className='auth-wrapper auth-v2'>\r\n      <Row className='auth-inner m-0'>\r\n        {/* <Link  to='/index' className='brand-logo' onClick={e => e.preventDefault()}> */}\r\n        <Link  to='/index' className='brand-logo'>\r\n          <CardImg top src={signin} className='SignLogo'  alt='cmgalaxy' />\r\n          {/* <h2 className='brand-text text-primary ml-1'>Vuexy</h2> */}\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n              Welcome to CMGalaxy!\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Please sign-in to your account</CardText>\r\n            {/* <Alert color='primary'>\r\n              <div className='alert-body font-small-2'>\r\n                <p>\r\n                  <small className='mr-50'>\r\n                    <span className='font-weight-bold'>Admin:</span> admin@demo.com | admin\r\n                  </small>\r\n                </p>\r\n                <p>\r\n                  <small className='mr-50'>\r\n                    <span className='font-weight-bold'>Client:</span> client@demo.com | client\r\n                  </small>\r\n                </p>\r\n              </div>\r\n              <HelpCircle\r\n                id='login-tip'\r\n                className='position-absolute'\r\n                size={18}\r\n                style={{ top: '10px', right: '10px' }}\r\n              />\r\n              <UncontrolledTooltip target='login-tip' placement='left'>\r\n                This is just for ACL demo purpose.\r\n              </UncontrolledTooltip>\r\n            </Alert> */}\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Input\r\n                  autofocus\r\n                  type='email'\r\n                  value={email}\r\n                  id='username'\r\n                  name='username'\r\n                  placeholder=''\r\n                  onChange={handleChange}\r\n                  \r\n                />\r\n                <small style={{ color: \"red\" }}>{emailerror}</small>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                  <Link to='/forgot-password'>\r\n                    <small>Forgot Password?</small>\r\n                  </Link>\r\n                </div>\r\n                <InputPasswordToggle\r\n                  value={password}\r\n                  id='password'\r\n                  name='password'\r\n                  className='input-group-merge'\r\n                  onChange={handleChangePassword}\r\n                />\r\n                <small style={{ color: \"red\" }}>{passworderror}</small>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\r\n              </FormGroup>\r\n              <Button.Ripple type='submit' id='btnlogin' color='primary' block>\r\n                Sign in\r\n              </Button.Ripple>\r\n              <div className='demo-inline-spacing justify-content-between loader_mobileal' style={{ marginLeft: 30, display: 'none'}} id='loaderimg'>\r\n              <Spinner color='primary' />\r\n             </div>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='mr-25'>Don't have an account ?</span>\r\n              <Link to='/register'>\r\n                <span>Sign Up</span>\r\n              </Link>\r\n            </p>\r\n            {/* <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button.Ripple color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple color='google'>\r\n                <Mail size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple className='mr-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button.Ripple>\r\n            </div> */}\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}