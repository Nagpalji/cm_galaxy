{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// ** React Imports\nimport{Suspense,useContext,lazy,useEffect}from'react';// ** Utils\nimport{isUserLoggedIn}from'@utils';import{useLayout}from'@hooks/useLayout';import{AbilityContext}from'@src/utility/context/Can';import{useRouterTransition}from'@hooks/useRouterTransition';// ** Custom Components\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\nimport LayoutWrapper from'@layouts/components/layout-wrapper';// ** Router Components\nimport{BrowserRouter as AppRouter,Route,Switch,Redirect}from'react-router-dom';// ** Routes & Default Routes\nimport{DefaultRoute,Routes}from'./routes';// ** Layouts\nimport BlankLayout from'@layouts/BlankLayout';import VerticalLayout from'@src/layouts/VerticalLayout';import HorizontalLayout from'@src/layouts/HorizontalLayout';import{getToken}from\"firebase/messaging\";import{messaging}from'../firebase.cofig';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Router=function Router(){function requestPermission(){return _requestPermission.apply(this,arguments);}function _requestPermission(){_requestPermission=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var permission,token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Notification.requestPermission();case 2:permission=_context.sent;if(!(permission===\"granted\")){_context.next=11;break;}_context.next=6;return getToken(messaging,{vapidKey:\"BKlgg-yZdutENiYbqRZp-rXJwSmsuTMcAD1iRHLdeupmgnWTS_ui_WB85ssDgRKAuqrhao3yYBw2lPsUno0_ZKQ\"});case 6:token=_context.sent;console.log(\"Token Gen\",token);fetch('https://srvr1px.cyberads.io/saveUserTokenData/',{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({token:token})}).then(function(response){return response.json();}).then(function(data){}).catch(function(err){console.log(err.message);// alert(err.message)\n});_context.next=12;break;case 11:if(permission===\"denied\"){// alert(\"You denied for the notification\")\n}case 12:case\"end\":return _context.stop();}}},_callee);}));return _requestPermission.apply(this,arguments);}useEffect(function(){// Req user for notification permission\nrequestPermission();},[]);// ** Hooks\nvar _useLayout=useLayout(),_useLayout2=_slicedToArray(_useLayout,2),layout=_useLayout2[0],setLayout=_useLayout2[1];var _useRouterTransition=useRouterTransition(),_useRouterTransition2=_slicedToArray(_useRouterTransition,2),transition=_useRouterTransition2[0],setTransition=_useRouterTransition2[1];// ** ACL Ability Context\nvar ability=useContext(AbilityContext);// ** Default Layout\nvar DefaultLayout=layout==='horizontal'?'HorizontalLayout':'VerticalLayout';// ** All of the available layouts\nvar Layouts={BlankLayout:BlankLayout,VerticalLayout:VerticalLayout,HorizontalLayout:HorizontalLayout};// ** Current Active Item\nvar currentActiveItem=null;// ** Return Filtered Array of Routes & Paths\nvar LayoutRoutesAndPaths=function LayoutRoutesAndPaths(layout){var LayoutRoutes=[];var LayoutPaths=[];if(Routes){Routes.filter(function(route){// ** Checks if Route layout or Default layout matches current layout\nif(route.layout===layout||route.layout===undefined&&DefaultLayout===layout){LayoutRoutes.push(route);LayoutPaths.push(route.path);}});}return{LayoutRoutes:LayoutRoutes,LayoutPaths:LayoutPaths};};var NotAuthorized=/*#__PURE__*/lazy(function(){return import('@src/views/pages/misc/NotAuthorized');});// ** Init Error Component\nvar Error=/*#__PURE__*/lazy(function(){return import('@src/views/pages/misc/Error');});/**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */var FinalRoute=function FinalRoute(props){var route=props.route;var action,resource;// ** Assign vars based on route meta\nif(route.meta){action=route.meta.action?route.meta.action:null;resource=route.meta.resource?route.meta.resource:null;}if(!isUserLoggedIn()&&route.meta===undefined||!isUserLoggedIn()&&route.meta&&!route.meta.authRoute&&!route.meta.publicRoute){/**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */return/*#__PURE__*/_jsx(Redirect,{to:\"/index\"});}else if(route.meta&&route.meta.authRoute&&isUserLoggedIn()){// ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\nreturn/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}else if(isUserLoggedIn()&&!ability.can(action||'read',resource)){// ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\nreturn/*#__PURE__*/_jsx(Redirect,{to:\"/misc/not-authorized\"});}else{// ** If none of the above render component\nreturn/*#__PURE__*/_jsx(route.component,_objectSpread({},props));}};// ** Return Route to Render\nvar ResolveRoutes=function ResolveRoutes(){return Object.keys(Layouts).map(function(layout,index){// ** Convert Layout parameter to Layout Component\n// ? Note: make sure to keep layout and component name equal\nvar LayoutTag=Layouts[layout];// ** Get Routes and Paths of the Layout\nvar _LayoutRoutesAndPaths=LayoutRoutesAndPaths(layout),LayoutRoutes=_LayoutRoutesAndPaths.LayoutRoutes,LayoutPaths=_LayoutRoutesAndPaths.LayoutPaths;// ** We have freedom to display different layout for different route\n// ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n// ** that we want to implement like VerticalLayout or HorizontalLayout\n// ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n// ** RouterProps to pass them to Layouts\nvar routerProps={};return/*#__PURE__*/_jsx(Route,{path:LayoutPaths,children:/*#__PURE__*/_jsx(LayoutTag,{routerProps:routerProps,layout:layout,setLayout:setLayout,transition:transition,setTransition:setTransition,currentActiveItem:currentActiveItem,children:/*#__PURE__*/_jsx(Switch,{children:LayoutRoutes.map(function(route){return/*#__PURE__*/_jsx(Route,{path:route.path,exact:route.exact===true,render:function render(props){// ** Assign props to routerProps\nObject.assign(routerProps,_objectSpread(_objectSpread({},props),{},{meta:route.meta}));return/*#__PURE__*/_jsx(Suspense,{fallback:null,children:/*#__PURE__*/_jsx(LayoutWrapper,_objectSpread(_objectSpread(_objectSpread(_objectSpread({layout:DefaultLayout,transition:transition,setTransition:setTransition/* Conditional props */ /*eslint-disable */},route.appLayout?{appLayout:route.appLayout}:{}),route.meta?{routeMeta:route.meta}:{}),route.className?{wrapperClass:route.className}:{}),{},{children:/*#__PURE__*/_jsx(FinalRoute,_objectSpread({route:route},props))}))});}},route.path);})})})},index);});};return/*#__PURE__*/_jsx(AppRouter,{basename:process.env.REACT_APP_BASENAME,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:function render(){return isUserLoggedIn()?/*#__PURE__*/_jsx(Redirect,{to:DefaultRoute}):/*#__PURE__*/_jsx(Redirect,{to:\"/index\"});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/misc/not-authorized\",render:function render(props){return/*#__PURE__*/_jsx(Layouts.BlankLayout,{children:/*#__PURE__*/_jsx(NotAuthorized,{})});}}),ResolveRoutes(),/*#__PURE__*/_jsx(Route,{path:\"*\",component:Error})]})});};export default Router;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/router/Router.js"],"names":["Suspense","useContext","lazy","useEffect","isUserLoggedIn","useLayout","AbilityContext","useRouterTransition","LayoutWrapper","BrowserRouter","AppRouter","Route","Switch","Redirect","DefaultRoute","Routes","BlankLayout","VerticalLayout","HorizontalLayout","getToken","messaging","toast","Router","requestPermission","Notification","permission","vapidKey","token","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","err","message","layout","setLayout","transition","setTransition","ability","DefaultLayout","Layouts","currentActiveItem","LayoutRoutesAndPaths","LayoutRoutes","LayoutPaths","filter","route","undefined","push","path","NotAuthorized","Error","FinalRoute","props","action","resource","meta","authRoute","publicRoute","can","ResolveRoutes","Object","keys","map","index","LayoutTag","routerProps","exact","assign","appLayout","routeMeta","className","wrapperClass","process","env","REACT_APP_BASENAME"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Suspense, useContext, lazy, useEffect } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nimport { getToken } from \"firebase/messaging\"\r\nimport { messaging } from '../firebase.cofig'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nconst Router = () => {\r\n  async function requestPermission() {\r\n    const permission = await Notification.requestPermission()\r\n    if (permission === \"granted\") {\r\n      // Generate Token\r\n      const token = await getToken(messaging, { vapidKey:\"BKlgg-yZdutENiYbqRZp-rXJwSmsuTMcAD1iRHLdeupmgnWTS_ui_WB85ssDgRKAuqrhao3yYBw2lPsUno0_ZKQ\"})\r\n      console.log(\"Token Gen\", token)\r\n      fetch('https://srvr1px.cyberads.io/saveUserTokenData/', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ token })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {})\r\n        .catch(err => {\r\n          console.log(err.message)\r\n            // alert(err.message)\r\n        })\r\n    } else if (permission === \"denied\") {\r\n      // alert(\"You denied for the notification\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Req user for notification permission\r\n    requestPermission()\r\n  }, [])\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/index' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/index' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router"]},"metadata":{},"sourceType":"module"}