{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ** React Imports\nimport{Fragment,useState,useEffect}from'react';// ** Third Party Components\nimport classnames from'classnames';import{Row,Col}from'reactstrap';// ** Calendar App Component Imports\nimport Calendar from'./Calendar';import SidebarLeft from'./SidebarLeft';import AddEventSidebar from'./AddEventSidebar';// ** Custom Hooks\nimport{useRTL}from'@hooks/useRTL';// ** Store & Actions\nimport{useSelector,useDispatch}from'react-redux';import{fetchEvents,selectEvent,updateEvent,updateFilter,updateAllFilters,addEvent,removeEvent}from'./store/actions/index';// ** Styles\nimport'@styles/react/apps/app-calendar.scss';// ** CalendarColors\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var calendarsColor={Business:'primary',Holiday:'success',Personal:'danger',Family:'warning',ETC:'info'};var CalendarComponent=function CalendarComponent(){// ** Variables\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.calendar;});// ** states\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),addSidebarOpen=_useState2[0],setAddSidebarOpen=_useState2[1],_useState3=useState(false),_useState4=_slicedToArray(_useState3,2),leftSidebarOpen=_useState4[0],setLeftSidebarOpen=_useState4[1],_useState5=useState(null),_useState6=_slicedToArray(_useState5,2),calendarApi=_useState6[0],setCalendarApi=_useState6[1];// ** Hooks\nvar _useRTL=useRTL(),_useRTL2=_slicedToArray(_useRTL,2),isRtl=_useRTL2[0],setIsRtl=_useRTL2[1];// ** AddEventSidebar Toggle Function\nvar handleAddEventSidebar=function handleAddEventSidebar(){return setAddSidebarOpen(!addSidebarOpen);};// ** LeftSidebar Toggle Function\nvar toggleSidebar=function toggleSidebar(val){return setLeftSidebarOpen(val);};// ** Blank Event Object\nvar blankEvent={title:'',start:'',end:'',allDay:false,url:'',extendedProps:{calendar:'',guests:[],location:'',description:''}};// ** refetchEvents\nvar refetchEvents=function refetchEvents(){if(calendarApi!==null){calendarApi.refetchEvents();}};// ** Fetch Events On Mount\nuseEffect(function(){dispatch(fetchEvents(store.selectedCalendars));},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"app-calendar overflow-hidden border\",children:/*#__PURE__*/_jsxs(Row,{noGutters:true,children:[/*#__PURE__*/_jsx(Col,{id:\"app-calendar-sidebar\",className:classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column',{show:leftSidebarOpen}),children:/*#__PURE__*/_jsx(SidebarLeft,{store:store,dispatch:dispatch,updateFilter:updateFilter,toggleSidebar:toggleSidebar,updateAllFilters:updateAllFilters,handleAddEventSidebar:handleAddEventSidebar})}),/*#__PURE__*/_jsx(Col,{className:\"position-relative\",children:/*#__PURE__*/_jsx(Calendar,{isRtl:isRtl,store:store,dispatch:dispatch,blankEvent:blankEvent,calendarApi:calendarApi,selectEvent:selectEvent,updateEvent:updateEvent,toggleSidebar:toggleSidebar,calendarsColor:calendarsColor,setCalendarApi:setCalendarApi,handleAddEventSidebar:handleAddEventSidebar})}),/*#__PURE__*/_jsx(\"div\",{className:classnames('body-content-overlay',{show:leftSidebarOpen===true}),onClick:function onClick(){return toggleSidebar(false);}})]})}),/*#__PURE__*/_jsx(AddEventSidebar,{store:store,dispatch:dispatch,addEvent:addEvent,open:addSidebarOpen,selectEvent:selectEvent,updateEvent:updateEvent,removeEvent:removeEvent,calendarApi:calendarApi,refetchEvents:refetchEvents,calendarsColor:calendarsColor,handleAddEventSidebar:handleAddEventSidebar})]});};export default CalendarComponent;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/apps/calendar/index.js"],"names":["Fragment","useState","useEffect","classnames","Row","Col","Calendar","SidebarLeft","AddEventSidebar","useRTL","useSelector","useDispatch","fetchEvents","selectEvent","updateEvent","updateFilter","updateAllFilters","addEvent","removeEvent","calendarsColor","Business","Holiday","Personal","Family","ETC","CalendarComponent","dispatch","store","state","calendar","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","calendarApi","setCalendarApi","isRtl","setIsRtl","handleAddEventSidebar","toggleSidebar","val","blankEvent","title","start","end","allDay","url","extendedProps","guests","location","description","refetchEvents","selectedCalendars","show"],"mappings":"8KAAA;AACA,OAASA,QAAT,CAAmBC,QAAnB,CAA6BC,SAA7B,KAA8C,OAA9C,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,YAAzB,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;AACA,OAASC,MAAT,KAAuB,eAAvB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,WADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,YAJF,CAKEC,gBALF,CAMEC,QANF,CAOEC,WAPF,KAQO,uBARP,CAUA;AACA,MAAO,sCAAP,CAEA;wFACA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,QAAQ,CAAE,SADW,CAErBC,OAAO,CAAE,SAFY,CAGrBC,QAAQ,CAAE,QAHW,CAIrBC,MAAM,CAAE,SAJa,CAKrBC,GAAG,CAAE,MALgB,CAAvB,CAQA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B;AACA,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA,GAAMgB,CAAAA,KAAK,CAAGjB,WAAW,CAAC,SAAAkB,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAV,EAAN,CAAzB,CAEA;AACA,cAA4C5B,QAAQ,CAAC,KAAD,CAApD,wCAAO6B,cAAP,eAAuBC,iBAAvB,0BAC0C9B,QAAQ,CAAC,KAAD,CADlD,yCACG+B,eADH,eACoBC,kBADpB,0BAEkChC,QAAQ,CAAC,IAAD,CAF1C,yCAEGiC,WAFH,eAEgBC,cAFhB,eAIA;AACA,YAA0B1B,MAAM,EAAhC,oCAAO2B,KAAP,aAAcC,QAAd,aAEA;AACA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAMP,CAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAvB,EAA9B,CAEA;AACA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,GAAG,QAAIP,CAAAA,kBAAkB,CAACO,GAAD,CAAtB,EAAzB,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,GAAG,CAAE,EAHY,CAIjBC,MAAM,CAAE,KAJS,CAKjBC,GAAG,CAAE,EALY,CAMjBC,aAAa,CAAE,CACblB,QAAQ,CAAE,EADG,CAEbmB,MAAM,CAAE,EAFK,CAGbC,QAAQ,CAAE,EAHG,CAIbC,WAAW,CAAE,EAJA,CANE,CAAnB,CAcA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIjB,WAAW,GAAK,IAApB,CAA0B,CACxBA,WAAW,CAACiB,aAAZ,GACD,CACF,CAJD,CAMA;AACAjD,SAAS,CAAC,UAAM,CACdwB,QAAQ,CAACd,WAAW,CAACe,KAAK,CAACyB,iBAAP,CAAZ,CAAR,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,YAAK,SAAS,CAAC,qCAAf,uBACE,MAAC,GAAD,EAAK,SAAS,KAAd,wBACE,KAAC,GAAD,EACE,EAAE,CAAC,sBADL,CAEE,SAAS,CAAEjD,UAAU,CAAC,yEAAD,CAA4E,CAC/FkD,IAAI,CAAErB,eADyF,CAA5E,CAFvB,uBAME,KAAC,WAAD,EACE,KAAK,CAAEL,KADT,CAEE,QAAQ,CAAED,QAFZ,CAGE,YAAY,CAAEX,YAHhB,CAIE,aAAa,CAAEwB,aAJjB,CAKE,gBAAgB,CAAEvB,gBALpB,CAME,qBAAqB,CAAEsB,qBANzB,EANF,EADF,cAgBE,KAAC,GAAD,EAAK,SAAS,CAAC,mBAAf,uBACE,KAAC,QAAD,EACE,KAAK,CAAEF,KADT,CAEE,KAAK,CAAET,KAFT,CAGE,QAAQ,CAAED,QAHZ,CAIE,UAAU,CAAEe,UAJd,CAKE,WAAW,CAAEP,WALf,CAME,WAAW,CAAErB,WANf,CAOE,WAAW,CAAEC,WAPf,CAQE,aAAa,CAAEyB,aARjB,CASE,cAAc,CAAEpB,cATlB,CAUE,cAAc,CAAEgB,cAVlB,CAWE,qBAAqB,CAAEG,qBAXzB,EADF,EAhBF,cA+BE,YACE,SAAS,CAAEnC,UAAU,CAAC,sBAAD,CAAyB,CAC5CkD,IAAI,CAAErB,eAAe,GAAK,IADkB,CAAzB,CADvB,CAIE,OAAO,CAAE,yBAAMO,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAJX,EA/BF,GADF,EADF,cAyCE,KAAC,eAAD,EACE,KAAK,CAAEZ,KADT,CAEE,QAAQ,CAAED,QAFZ,CAGE,QAAQ,CAAET,QAHZ,CAIE,IAAI,CAAEa,cAJR,CAKE,WAAW,CAAEjB,WALf,CAME,WAAW,CAAEC,WANf,CAOE,WAAW,CAAEI,WAPf,CAQE,WAAW,CAAEgB,WARf,CASE,aAAa,CAAEiB,aATjB,CAUE,cAAc,CAAEhC,cAVlB,CAWE,qBAAqB,CAAEmB,qBAXzB,EAzCF,GADF,CAyDD,CAvGD,CAyGA,cAAeb,CAAAA,iBAAf","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  fetchEvents,\r\n  selectEvent,\r\n  updateEvent,\r\n  updateFilter,\r\n  updateAllFilters,\r\n  addEvent,\r\n  removeEvent\r\n} from './store/actions/index'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-calendar.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Business: 'primary',\r\n  Holiday: 'success',\r\n  Personal: 'danger',\r\n  Family: 'warning',\r\n  ETC: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.calendar)\r\n\r\n  // ** states\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false),\r\n    [leftSidebarOpen, setLeftSidebarOpen] = useState(false),\r\n    [calendarApi, setCalendarApi] = useState(null)\r\n\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row noGutters>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\n"]},"metadata":{},"sourceType":"module"}