{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsahi\\\\OneDrive\\\\Documents\\\\cyber_media\\\\cm_galaxy\\\\src\\\\router\\\\Router.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Suspense, useContext, lazy, useEffect } from 'react'; // ** Utils\n\nimport { isUserLoggedIn } from '@utils';\nimport { useLayout } from '@hooks/useLayout';\nimport { AbilityContext } from '@src/utility/context/Can';\nimport { useRouterTransition } from '@hooks/useRouterTransition'; // ** Custom Components\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\n\nimport LayoutWrapper from '@layouts/components/layout-wrapper'; // ** Router Components\n\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'; // ** Routes & Default Routes\n\nimport { DefaultRoute, Routes } from './routes'; // ** Layouts\n\nimport BlankLayout from '@layouts/BlankLayout';\nimport VerticalLayout from '@src/layouts/VerticalLayout';\nimport HorizontalLayout from '@src/layouts/HorizontalLayout';\nimport { getToken } from \"firebase/messaging\";\nimport { messaging } from '../firebase.cofig';\nimport { toast } from 'react-toastify';\nimport * as Icons from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Router = function Router() {\n  _s();\n\n  function requestPermission() {\n    return _requestPermission.apply(this, arguments);\n  }\n\n  function _requestPermission() {\n    _requestPermission = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var permission, token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Notification.requestPermission();\n\n            case 2:\n              permission = _context.sent;\n\n              if (!(permission === \"granted\")) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 6;\n              return getToken(messaging, {\n                vapidKey: \"BKlgg-yZdutENiYbqRZp-rXJwSmsuTMcAD1iRHLdeupmgnWTS_ui_WB85ssDgRKAuqrhao3yYBw2lPsUno0_ZKQ\"\n              });\n\n            case 6:\n              token = _context.sent;\n              console.log(\"Token Gen\", token);\n              fetch('https://srvr1px.cyberads.io/saveUserTokenData/', {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  token: token\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {}).catch(function (err) {\n                console.log(err.message); // alert(err.message)\n              });\n              _context.next = 12;\n              break;\n\n            case 11:\n              if (permission === \"denied\") {// alert(\"You denied for the notification\")\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _requestPermission.apply(this, arguments);\n  }\n\n  var DynamicFaIcon = function DynamicFaIcon(_ref) {\n    var name = _ref.name;\n    var IconComponent = Icons[name];\n\n    if (!IconComponent) {\n      // Return a default one\n      return /*#__PURE__*/_jsxDEV(Icons.FaBeer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(IconComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var navBar = function navBar() {\n    axios.post(\"http://srvr1px.cyberads.io/permissionAssignRead/ \", {\n      user_name: localStorage.getItem(\"user_name\")\n    }).then(function (res) {\n      var sample = [];\n      res === null || res === void 0 ? void 0 : res.data.map(function (val) {\n        // console.log({val})\n        var col = {\n          id: \"eCommerceDash\",\n          title: val.label,\n          icon: val.icon,\n          navLink: val.path\n        };\n        sample.push(col);\n      });\n      localStorage.setItem(\"navigation\", JSON.stringify(sample)); // return sample\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n\n  useEffect(function () {\n    // Req user for notification permission\n    requestPermission();\n    navBar();\n  }, []); // ** Hooks\n\n  var _useLayout = useLayout(),\n      _useLayout2 = _slicedToArray(_useLayout, 2),\n      layout = _useLayout2[0],\n      setLayout = _useLayout2[1];\n\n  var _useRouterTransition = useRouterTransition(),\n      _useRouterTransition2 = _slicedToArray(_useRouterTransition, 2),\n      transition = _useRouterTransition2[0],\n      setTransition = _useRouterTransition2[1]; // ** ACL Ability Context\n\n\n  var ability = useContext(AbilityContext); // ** Default Layout\n\n  var DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'; // ** All of the available layouts\n\n  var Layouts = {\n    BlankLayout: BlankLayout,\n    VerticalLayout: VerticalLayout,\n    HorizontalLayout: HorizontalLayout\n  }; // ** Current Active Item\n\n  var currentActiveItem = null; // ** Return Filtered Array of Routes & Paths\n\n  var LayoutRoutesAndPaths = function LayoutRoutesAndPaths(layout) {\n    var LayoutRoutes = [];\n    var LayoutPaths = [];\n\n    if (Routes) {\n      Routes.filter(function (route) {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (route.layout === layout || route.layout === undefined && DefaultLayout === layout) {\n          LayoutRoutes.push(route);\n          LayoutPaths.push(route.path);\n        }\n      });\n    }\n\n    return {\n      LayoutRoutes: LayoutRoutes,\n      LayoutPaths: LayoutPaths\n    };\n  };\n\n  var NotAuthorized = /*#__PURE__*/lazy(function () {\n    return import('@src/views/pages/misc/NotAuthorized');\n  }); // ** Init Error Component\n\n  var Error = /*#__PURE__*/lazy(function () {\n    return import('@src/views/pages/misc/Error');\n  });\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\n\n  var FinalRoute = function FinalRoute(props) {\n    var route = props.route;\n    var action, resource; // ** Assign vars based on route meta\n\n    if (route.meta) {\n      action = route.meta.action ? route.meta.action : null;\n      resource = route.meta.resource ? route.meta.resource : null;\n    }\n\n    if (!isUserLoggedIn() && route.meta === undefined || !isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute) {\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }, _this);\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }, _this);\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/misc/not-authorized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 14\n      }, _this);\n    } else {\n      // ** If none of the above render component\n      return /*#__PURE__*/_jsxDEV(route.component, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 14\n      }, _this);\n    }\n  }; // ** Return Route to Render\n\n\n  var ResolveRoutes = function ResolveRoutes() {\n    return Object.keys(Layouts).map(function (layout, index) {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n      var LayoutTag = Layouts[layout]; // ** Get Routes and Paths of the Layout\n\n      var _LayoutRoutesAndPaths = LayoutRoutesAndPaths(layout),\n          LayoutRoutes = _LayoutRoutesAndPaths.LayoutRoutes,\n          LayoutPaths = _LayoutRoutesAndPaths.LayoutPaths; // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n      // ** RouterProps to pass them to Layouts\n\n\n      var routerProps = {};\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: LayoutPaths,\n        children: /*#__PURE__*/_jsxDEV(LayoutTag, {\n          routerProps: routerProps,\n          layout: layout,\n          setLayout: setLayout,\n          transition: transition,\n          setTransition: setTransition,\n          currentActiveItem: currentActiveItem,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: LayoutRoutes.map(function (route) {\n              console.log({\n                route: route\n              });\n              return /*#__PURE__*/_jsxDEV(Route, {\n                path: route.path,\n                exact: route.exact === true,\n                render: function render(props) {\n                  // ** Assign props to routerProps\n                  Object.assign(routerProps, _objectSpread(_objectSpread({}, props), {}, {\n                    meta: route.meta\n                  }));\n                  return /*#__PURE__*/_jsxDEV(Suspense, {\n                    fallback: null,\n                    children: /*#__PURE__*/_jsxDEV(LayoutWrapper, _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n                      layout: DefaultLayout,\n                      transition: transition,\n                      setTransition: setTransition\n                      /* Conditional props */\n\n                      /*eslint-disable */\n\n                    }, route.appLayout ? {\n                      appLayout: route.appLayout\n                    } : {}), route.meta ? {\n                      routeMeta: route.meta\n                    } : {}), route.className ? {\n                      wrapperClass: route.className\n                    } : {}), {}, {\n                      children: /*#__PURE__*/_jsxDEV(FinalRoute, _objectSpread({\n                        route: route\n                      }, props), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 29\n                      }, _this)\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 25\n                  }, _this);\n                }\n              }, route.path, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppRouter, {\n    basename: process.env.REACT_APP_BASENAME,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return isUserLoggedIn() ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: DefaultRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 39\n          }, _this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 72\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/misc/not-authorized\",\n        render: function render(props) {\n          return /*#__PURE__*/_jsxDEV(Layouts.BlankLayout, {\n            children: /*#__PURE__*/_jsxDEV(NotAuthorized, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, _this), ResolveRoutes(), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        component: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Router, \"7CSMQ99n8fFBPBUv95CxX6g+pRQ=\", false, function () {\n  return [useLayout, useRouterTransition];\n});\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/router/Router.js"],"names":["Suspense","useContext","lazy","useEffect","isUserLoggedIn","useLayout","AbilityContext","useRouterTransition","LayoutWrapper","BrowserRouter","AppRouter","Route","Switch","Redirect","DefaultRoute","Routes","BlankLayout","VerticalLayout","HorizontalLayout","getToken","messaging","toast","Icons","axios","Router","requestPermission","Notification","permission","vapidKey","token","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","err","message","DynamicFaIcon","name","IconComponent","navBar","post","user_name","localStorage","getItem","res","sample","map","val","col","id","title","label","icon","navLink","path","push","setItem","error","layout","setLayout","transition","setTransition","ability","DefaultLayout","Layouts","currentActiveItem","LayoutRoutesAndPaths","LayoutRoutes","LayoutPaths","filter","route","undefined","NotAuthorized","Error","FinalRoute","props","action","resource","meta","authRoute","publicRoute","can","ResolveRoutes","Object","keys","index","LayoutTag","routerProps","exact","assign","appLayout","routeMeta","className","wrapperClass","process","env","REACT_APP_BASENAME"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Suspense, useContext, lazy, useEffect } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nimport { getToken } from \"firebase/messaging\"\r\nimport { messaging } from '../firebase.cofig'\r\nimport { toast } from 'react-toastify'\r\nimport * as Icons from \"react-icons/fa\" \r\nimport axios from \"axios\"\r\nconst Router = () => {\r\n  async function requestPermission() {\r\n    const permission = await Notification.requestPermission()\r\n    if (permission === \"granted\") {\r\n      // Generate Token\r\n      const token = await getToken(messaging, { vapidKey:\"BKlgg-yZdutENiYbqRZp-rXJwSmsuTMcAD1iRHLdeupmgnWTS_ui_WB85ssDgRKAuqrhao3yYBw2lPsUno0_ZKQ\"})\r\n      console.log(\"Token Gen\", token)\r\n      fetch('https://srvr1px.cyberads.io/saveUserTokenData/', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ token })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {})\r\n        .catch(err => {\r\n          console.log(err.message)\r\n            // alert(err.message)\r\n        })\r\n    } else if (permission === \"denied\") {\r\n      // alert(\"You denied for the notification\")\r\n    }\r\n  }\r\n\r\n  const DynamicFaIcon = ({ name }) => {\r\n    const IconComponent = Icons[name]\r\n  \r\n    if (!IconComponent) { // Return a default one\r\n      return <Icons.FaBeer />\r\n    }\r\n  \r\n    return <IconComponent />\r\n  }\r\n\r\n  const navBar = () => {\r\n     axios.post(\"http://srvr1px.cyberads.io/permissionAssignRead/ \", {\r\n        user_name: localStorage.getItem(\"user_name\")\r\n      }).then((res) => {\r\n        const sample = []\r\n        res?.data.map((val) => {\r\n          // console.log({val})\r\n            const col = {\r\n              id: \"eCommerceDash\",\r\n              title: val.label,\r\n              icon:val.icon,\r\n              navLink: val.path\r\n            }\r\n            sample.push(col)\r\n        })\r\n        localStorage.setItem(\"navigation\", JSON.stringify(sample))\r\n        // return sample\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Req user for notification permission\r\n    requestPermission()\r\n    navBar()\r\n  }, [])\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/index' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                console.log({route})\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/index' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router"]},"metadata":{},"sourceType":"module"}