{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport BoxElement from './box-element';\nimport FloatElement from './float-element';\nimport Text from './text';\nimport Box from './box';\nimport rectToBox from './utils/rect-to-box';\nimport { getSpacing, deepExtend, defined } from '../common';\nimport { X, Y } from '../common/constants';\nvar ROWS_SPLIT_REGEX = /\\n/m;\n\nvar TextBox = function (BoxElement) {\n  function TextBox(content, options, data) {\n    BoxElement.call(this, options);\n    this.content = content;\n    this.data = data;\n\n    this._initContainer();\n\n    if (this.options._autoReflow !== false) {\n      this.reflow(new Box());\n    }\n  }\n\n  if (BoxElement) TextBox.__proto__ = BoxElement;\n  TextBox.prototype = Object.create(BoxElement && BoxElement.prototype);\n  TextBox.prototype.constructor = TextBox;\n\n  TextBox.prototype._initContainer = function _initContainer() {\n    var options = this.options;\n    var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n    var floatElement = new FloatElement({\n      vertical: true,\n      align: options.align,\n      wrap: false\n    });\n    var textOptions = deepExtend({}, options, {\n      opacity: 1,\n      animation: null\n    });\n    this.container = floatElement;\n    this.append(floatElement);\n\n    for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n      var text = new Text(rows[rowIdx].trim(), textOptions);\n      floatElement.append(text);\n    }\n  };\n\n  TextBox.prototype.reflow = function reflow(targetBox) {\n    var options = this.options;\n    var visualFn = options.visual;\n    this.container.options.align = options.align;\n\n    if (visualFn && !this._boxReflow) {\n      var visualBox = targetBox;\n\n      if (!visualBox.hasSize()) {\n        this._boxReflow = true;\n        this.reflow(visualBox);\n        this._boxReflow = false;\n        visualBox = this.box;\n      }\n\n      var visual = this.visual = visualFn(this.visualContext(visualBox));\n\n      if (visual) {\n        visualBox = rectToBox(visual.clippedBBox() || new geom.Rect());\n        visual.options.zIndex = options.zIndex;\n      }\n\n      this.box = this.contentBox = this.paddingBox = visualBox;\n    } else {\n      BoxElement.prototype.reflow.call(this, targetBox);\n\n      if (options.rotation) {\n        var margin = getSpacing(options.margin);\n        var box = this.box.unpad(margin);\n        this.targetBox = targetBox;\n        this.normalBox = box.clone();\n        box = this.rotate();\n        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n        this.rotatedBox = box.clone();\n        box.pad(margin);\n      }\n    }\n  };\n\n  TextBox.prototype.createVisual = function createVisual() {\n    var options = this.options;\n    this.visual = new draw.Group({\n      transform: this.rotationTransform(),\n      zIndex: options.zIndex,\n      noclip: options.noclip\n    });\n\n    if (this.hasBox()) {\n      var box = draw.Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n      this.visual.append(box);\n    }\n  };\n\n  TextBox.prototype.renderVisual = function renderVisual() {\n    if (!this.options.visible) {\n      return;\n    }\n\n    if (this.options.visual) {\n      var visual = this.visual;\n\n      if (visual && !defined(visual.options.noclip)) {\n        visual.options.noclip = this.options.noclip;\n      }\n\n      this.addVisual();\n      this.createAnimation();\n    } else {\n      BoxElement.prototype.renderVisual.call(this);\n    }\n  };\n\n  TextBox.prototype.visualContext = function visualContext(targetBox) {\n    var this$1 = this;\n    var context = {\n      text: this.content,\n      rect: targetBox.toRect(),\n      sender: this.getSender(),\n      options: this.options,\n      createVisual: function createVisual() {\n        this$1._boxReflow = true;\n        this$1.reflow(targetBox);\n        this$1._boxReflow = false;\n        return this$1.getDefaultVisual();\n      }\n    };\n\n    if (this.data) {\n      Object.assign(context, this.data);\n    }\n\n    return context;\n  };\n\n  TextBox.prototype.getDefaultVisual = function getDefaultVisual() {\n    this.createVisual();\n    this.renderChildren();\n    var visual = this.visual;\n    delete this.visual;\n    return visual;\n  };\n\n  TextBox.prototype.rotate = function rotate() {\n    var options = this.options;\n    this.box.rotate(options.rotation);\n    this.align(this.targetBox, X, options.align);\n    this.align(this.targetBox, Y, options.vAlign);\n    return this.box;\n  };\n\n  TextBox.prototype.rotationTransform = function rotationTransform() {\n    var rotation = this.options.rotation;\n\n    if (!rotation) {\n      return null;\n    }\n\n    var ref = this.normalBox.center();\n    var cx = ref.x;\n    var cy = ref.y;\n    var boxCenter = this.rotatedBox.center();\n    return geom.transform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [cx, cy]);\n  };\n\n  return TextBox;\n}(BoxElement);\n\nexport default TextBox;","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/@progress/kendo-charts/dist/es/core/text-box.js"],"names":["drawing","draw","geometry","geom","BoxElement","FloatElement","Text","Box","rectToBox","getSpacing","deepExtend","defined","X","Y","ROWS_SPLIT_REGEX","TextBox","content","options","data","call","_initContainer","_autoReflow","reflow","__proto__","prototype","Object","create","constructor","rows","String","split","floatElement","vertical","align","wrap","textOptions","opacity","animation","container","append","rowIdx","length","text","trim","targetBox","visualFn","visual","_boxReflow","visualBox","hasSize","box","visualContext","clippedBBox","Rect","zIndex","contentBox","paddingBox","rotation","margin","unpad","normalBox","clone","rotate","translate","left","right","top","bottom","rotatedBox","pad","createVisual","Group","transform","rotationTransform","noclip","hasBox","Path","fromRect","toRect","visualStyle","renderVisual","visible","addVisual","createAnimation","this$1","context","rect","sender","getSender","getDefaultVisual","assign","renderChildren","vAlign","ref","center","cx","x","cy","y","boxCenter"],"mappings":"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","sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\r\n\r\nimport BoxElement from './box-element';\r\nimport FloatElement from './float-element';\r\nimport Text from './text';\r\nimport Box from './box';\r\n\r\nimport rectToBox from './utils/rect-to-box';\r\n\r\nimport { getSpacing, deepExtend, defined } from '../common';\r\nimport { X, Y } from '../common/constants';\r\n\r\nvar ROWS_SPLIT_REGEX = /\\n/m;\r\n\r\nvar TextBox = (function (BoxElement) {\r\n    function TextBox(content, options, data) {\r\n        BoxElement.call(this, options);\r\n        this.content = content;\r\n        this.data = data;\r\n\r\n        this._initContainer();\r\n        if (this.options._autoReflow !== false) {\r\n            this.reflow(new Box());\r\n        }\r\n    }\r\n\r\n    if ( BoxElement ) TextBox.__proto__ = BoxElement;\r\n    TextBox.prototype = Object.create( BoxElement && BoxElement.prototype );\r\n    TextBox.prototype.constructor = TextBox;\r\n\r\n    TextBox.prototype._initContainer = function _initContainer () {\r\n        var options = this.options;\r\n        var rows = String(this.content).split(ROWS_SPLIT_REGEX);\r\n        var floatElement = new FloatElement({ vertical: true, align: options.align, wrap: false });\r\n        var textOptions = deepExtend({ }, options, { opacity: 1, animation: null });\r\n\r\n        this.container = floatElement;\r\n        this.append(floatElement);\r\n\r\n        for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\r\n            var text = new Text(rows[rowIdx].trim(), textOptions);\r\n            floatElement.append(text);\r\n        }\r\n    };\r\n\r\n    TextBox.prototype.reflow = function reflow (targetBox) {\r\n        var options = this.options;\r\n        var visualFn = options.visual;\r\n        this.container.options.align = options.align;\r\n\r\n        if (visualFn && !this._boxReflow) {\r\n            var visualBox = targetBox;\r\n            if (!visualBox.hasSize()) {\r\n                this._boxReflow = true;\r\n                this.reflow(visualBox);\r\n                this._boxReflow = false;\r\n                visualBox = this.box;\r\n            }\r\n            var visual = this.visual = visualFn(this.visualContext(visualBox));\r\n\r\n            if (visual) {\r\n                visualBox = rectToBox(visual.clippedBBox() || new geom.Rect());\r\n\r\n                visual.options.zIndex = options.zIndex;\r\n            }\r\n\r\n            this.box = this.contentBox = this.paddingBox = visualBox;\r\n        } else {\r\n            BoxElement.prototype.reflow.call(this, targetBox);\r\n\r\n            if (options.rotation) {\r\n                var margin = getSpacing(options.margin);\r\n                var box = this.box.unpad(margin);\r\n\r\n                this.targetBox = targetBox;\r\n                this.normalBox = box.clone();\r\n\r\n                box = this.rotate();\r\n                box.translate(margin.left - margin.right, margin.top - margin.bottom);\r\n\r\n                this.rotatedBox = box.clone();\r\n\r\n                box.pad(margin);\r\n            }\r\n        }\r\n    };\r\n\r\n    TextBox.prototype.createVisual = function createVisual () {\r\n        var options = this.options;\r\n\r\n        this.visual = new draw.Group({\r\n            transform: this.rotationTransform(),\r\n            zIndex: options.zIndex,\r\n            noclip: options.noclip\r\n        });\r\n\r\n        if (this.hasBox()) {\r\n            var box = draw.Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\r\n            this.visual.append(box);\r\n        }\r\n    };\r\n\r\n    TextBox.prototype.renderVisual = function renderVisual () {\r\n        if (!this.options.visible) {\r\n            return;\r\n        }\r\n\r\n        if (this.options.visual) {\r\n            var visual = this.visual;\r\n            if (visual && !defined(visual.options.noclip)) {\r\n                visual.options.noclip = this.options.noclip;\r\n            }\r\n            this.addVisual();\r\n            this.createAnimation();\r\n        } else {\r\n            BoxElement.prototype.renderVisual.call(this);\r\n        }\r\n    };\r\n\r\n    TextBox.prototype.visualContext = function visualContext (targetBox) {\r\n        var this$1 = this;\r\n\r\n        var context = {\r\n            text: this.content,\r\n            rect: targetBox.toRect(),\r\n            sender: this.getSender(),\r\n            options: this.options,\r\n            createVisual: function () {\r\n                this$1._boxReflow = true;\r\n                this$1.reflow(targetBox);\r\n                this$1._boxReflow = false;\r\n                return this$1.getDefaultVisual();\r\n            }\r\n        };\r\n        if (this.data) {\r\n            Object.assign(context, this.data);\r\n        }\r\n\r\n        return context;\r\n    };\r\n\r\n    TextBox.prototype.getDefaultVisual = function getDefaultVisual () {\r\n        this.createVisual();\r\n        this.renderChildren();\r\n        var visual = this.visual;\r\n        delete this.visual;\r\n        return visual;\r\n    };\r\n\r\n    TextBox.prototype.rotate = function rotate () {\r\n        var options = this.options;\r\n        this.box.rotate(options.rotation);\r\n        this.align(this.targetBox, X, options.align);\r\n        this.align(this.targetBox, Y, options.vAlign);\r\n        return this.box;\r\n    };\r\n\r\n    TextBox.prototype.rotationTransform = function rotationTransform () {\r\n        var rotation = this.options.rotation;\r\n        if (!rotation) {\r\n            return null;\r\n        }\r\n\r\n        var ref = this.normalBox.center();\r\n        var cx = ref.x;\r\n        var cy = ref.y;\r\n        var boxCenter = this.rotatedBox.center();\r\n\r\n        return geom.transform()\r\n                   .translate(boxCenter.x - cx, boxCenter.y - cy)\r\n                   .rotate(rotation, [ cx, cy ]);\r\n    };\r\n\r\n    return TextBox;\r\n}(BoxElement));\r\n\r\nexport default TextBox;"]},"metadata":{},"sourceType":"module"}