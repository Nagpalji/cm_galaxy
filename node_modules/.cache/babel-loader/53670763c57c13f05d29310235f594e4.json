{"ast":null,"code":"import _slicedToArray from\"C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ** React Imports\nimport{Fragment,useState,useEffect,memo}from'react';// ** Table Columns\nimport{leadColumns}from'./data';// ** Store & Actions\nimport{getData}from'./actions';import{useSelector,useDispatch}from'react-redux';// ** Third Party Components\nimport ReactPaginate from'react-paginate';import{ChevronDown}from'react-feather';import DataTable from'react-data-table-component';import{Card,CardHeader,CardTitle,Input,Label,Row,Col}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DataLeadPerformance=function DataLeadPerformance(){// ** Store Vars\nvar dispatch=useDispatch();var store=useSelector(function(state){return state.dataTables;});// ** States\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(7),_useState4=_slicedToArray(_useState3,2),rowsPerPage=_useState4[0],setRowsPerPage=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchValue=_useState6[0],setSearchValue=_useState6[1];// ** Get data on mount\nuseEffect(function(){dispatch(getData({page:currentPage,perPage:rowsPerPage,q:searchValue}));},[dispatch]);// ** Function to handle filter\nvar handleFilter=function handleFilter(e){setSearchValue(e.target.value);dispatch(getData({page:currentPage,perPage:rowsPerPage,q:e.target.value}));};// ** Function to handle Pagination and get data\nvar handlePagination=function handlePagination(page){dispatch(getData({page:page.selected+1,perPage:rowsPerPage,q:searchValue}));setCurrentPage(page.selected+1);};// ** Function to handle per page\nvar handlePerPage=function handlePerPage(e){dispatch(getData({page:currentPage,perPage:parseInt(e.target.value),q:searchValue}));setRowsPerPage(parseInt(e.target.value));};// ** Custom Pagination\nvar CustomPagination=function CustomPagination(){var count=Number((store.total/rowsPerPage).toFixed(0));return/*#__PURE__*/_jsx(ReactPaginate,{previousLabel:'',nextLabel:'',breakLabel:\"...\",pageCount:count||1,marginPagesDisplayed:2,pageRangeDisplayed:2,activeClassName:\"active\",forcePage:currentPage!==0?currentPage-1:0,onPageChange:function onPageChange(page){return handlePagination(page);},pageClassName:'page-item',nextLinkClassName:'page-link',nextClassName:'page-item next',previousClassName:'page-item prev',previousLinkClassName:'page-link',pageLinkClassName:'page-link',breakClassName:\"page-item\",breakLinkClassName:\"page-link\",containerClassName:'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-2'});};// ** Table data to render\nvar dataToRender=function dataToRender(){var filters={q:searchValue};var isFiltered=Object.keys(filters).some(function(k){return filters[k].length>0;});if(store.data.length>0){return store.data;}else if(store.data.length===0&&isFiltered){return[];}else{return store.allData.slice(0,rowsPerPage);}};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{className:\"border-bottom\",children:/*#__PURE__*/_jsx(CardTitle,{tag:\"h4\",children:\"Lead Performance\"})}),/*#__PURE__*/_jsx(DataTable,{noHeader:true,pagination:true,paginationServer:true,className:\"react-dataTable\",columns:leadColumns,sortIcon:/*#__PURE__*/_jsx(ChevronDown,{size:10}),paginationComponent:CustomPagination,data:dataToRender()})]})});};export default/*#__PURE__*/memo(DataLeadPerformance);","map":{"version":3,"sources":["C:/Users/nsahi/OneDrive/Documents/cyber_media/cm_galaxy/src/views/amazon-performance/amazon/LeadPerformance.js"],"names":["Fragment","useState","useEffect","memo","leadColumns","getData","useSelector","useDispatch","ReactPaginate","ChevronDown","DataTable","Card","CardHeader","CardTitle","Input","Label","Row","Col","DataLeadPerformance","dispatch","store","state","dataTables","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchValue","setSearchValue","page","perPage","q","handleFilter","e","target","value","handlePagination","selected","handlePerPage","parseInt","CustomPagination","count","Number","total","toFixed","dataToRender","filters","isFiltered","Object","keys","some","k","length","data","allData","slice"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect, memo } from 'react'\r\n\r\n// ** Table Columns\r\nimport { leadColumns } from './data'\r\n\r\n// ** Store & Actions\r\nimport { getData } from './actions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, CardHeader, CardTitle, Input, Label, Row, Col } from 'reactstrap'\r\n\r\nconst DataLeadPerformance = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.dataTables)\r\n\r\n  // ** States\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(7)\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n  }, [dispatch])\r\n\r\n  // ** Function to handle filter\r\n  const handleFilter = e => {\r\n    setSearchValue(e.target.value)\r\n\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        q: e.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Function to handle Pagination and get data\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        q: searchValue\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function to handle per page\r\n  const handlePerPage = e => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: parseInt(e.target.value),\r\n        q: searchValue\r\n      })\r\n    )\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number((store.total / rowsPerPage).toFixed(0))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        breakLabel='...'\r\n        pageCount={count || 1}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        breakClassName='page-item'\r\n        breakLinkClassName='page-link'\r\n        containerClassName={\r\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-2'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: searchValue\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Lead Performance</CardTitle>\r\n        </CardHeader>\r\n        {/* <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='6'>\r\n            <div className='d-flex align-items-center'>\r\n              <Label for='sort-select'>show</Label>\r\n              <Input\r\n                className='dataTable-select'\r\n                type='select'\r\n                id='sort-select'\r\n                value={rowsPerPage}\r\n                onChange={e => handlePerPage(e)}\r\n              >\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={25}>25</option>\r\n                <option value={50}>50</option>\r\n                <option value={75}>75</option>\r\n                <option value={100}>100</option>\r\n              </Input>\r\n              <Label for='sort-select'>entries</Label>\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\r\n            <Label className='mr-1' for='search-input'>\r\n              Search\r\n            </Label>\r\n            <Input\r\n              className='dataTable-filter'\r\n              type='text'\r\n              bsSize='sm'\r\n              id='search-input'\r\n              value={searchValue}\r\n              onChange={handleFilter}\r\n            />\r\n          </Col>\r\n        </Row> */}\r\n        <DataTable\r\n          noHeader \r\n          pagination\r\n          paginationServer\r\n          className='react-dataTable'\r\n          columns={leadColumns}\r\n          sortIcon={<ChevronDown size={10} />}\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(DataLeadPerformance)\r\n"]},"metadata":{},"sourceType":"module"}