{"ast":null,"code":"import _slicedToArray from \"D:/full-version/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\full-version\\\\src\\\\views\\\\funnelmapping\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { List } from 'react-feather';\nimport { kFormatter } from '@utils';\nimport Avatar from '@components/avatar';\nimport Timeline from '@components/timeline';\nimport AvatarGroup from '@components/avatar-group';\nimport jsonImg from '@src/assets/images/icons/json.png';\nimport InvoiceList from '@src/views/apps/invoice/list';\nimport ceo from '@src/assets/images/portrait/small/avatar-s-9.jpg';\nimport { ThemeColors } from '@src/utility/context/ThemeColors';\nimport Sales from '@src/views/ui-elements/cards/analytics/Sales';\nimport AvgSessions from '@src/views/ui-elements/cards/analytics/AvgSessions';\nimport CardAppDesign from '@src/views/ui-elements/cards/advance/CardAppDesign';\nimport SupportTracker from '@src/views/ui-elements/cards/analytics/SupportTracker';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Media } from 'reactstrap';\nimport OrdersReceived from '@src/views/ui-elements/cards/statistics/OrdersReceived';\nimport CardCongratulations from '@src/views/ui-elements/cards/advance/CardCongratulations';\nimport SubscribersGained from '@src/views/ui-elements/cards/statistics/SubscribersGained';\nimport '@styles/react/libs/charts/apex-charts.scss';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Chart, ChartTitle, ChartLegend, ChartTooltip, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from '@progress/kendo-react-charts';\nimport data from './funnel-data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar tooltipRender = function tooltipRender(props) {\n  if (props.point) {\n    return props.point.dataItem.stat;\n  }\n};\n\nvar style = {\n  marginLeft: 5,\n  marginRight: 5\n};\n\nvar ChartContainer = function ChartContainer() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dynamicSlope = _React$useState2[0],\n      setDynamicSlope = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dynamicHeight = _React$useState4[0],\n      setDynamicHeight = _React$useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-config\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"neckRatio\",\n        children: [\"Dynamic Slope\", /*#__PURE__*/_jsxDEV(\"input\", {\n          style: style,\n          type: \"checkbox\",\n          checked: dynamicSlope,\n          onChange: function onChange(e) {\n            return setDynamicSlope(e.target.checked);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"neckRatio\",\n        children: [\"Dynamic Height\", /*#__PURE__*/_jsxDEV(\"input\", {\n          style: style,\n          type: \"checkbox\",\n          checked: dynamicHeight,\n          onChange: function onChange(e) {\n            return setDynamicHeight(e.target.checked);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Chart, {\n      style: {\n        margin: '0 auto',\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n        text: \"Sales funnel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n        children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n          type: \"funnel\",\n          data: data,\n          categoryField: \"stat\",\n          field: \"count\",\n          colorField: \"color\",\n          dynamicSlope: dynamicSlope,\n          dynamicHeight: dynamicHeight,\n          children: /*#__PURE__*/_jsxDEV(ChartSeriesLabels, {\n            color: \"white\",\n            background: \"none\",\n            format: \"N0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChartTooltip, {\n        render: tooltipRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n        visible: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, _this);\n}; // ReactDOM.render(<ChartContainer />, document.querySelector('my-app'));\n// const AnalyticsDashboard = () => { \n//     return (\n//         <>heloo</>\n//     )\n//   }\n\n\n_s(ChartContainer, \"2Ezdb/ArvuWzwwywk8yCbiz0xPE=\");\n\n_c = ChartContainer;\nexport default ChartContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartContainer\");","map":{"version":3,"sources":["D:/full-version/src/views/funnelmapping/index.js"],"names":["useContext","List","kFormatter","Avatar","Timeline","AvatarGroup","jsonImg","InvoiceList","ceo","ThemeColors","Sales","AvgSessions","CardAppDesign","SupportTracker","Row","Col","Card","CardHeader","CardTitle","CardBody","Media","OrdersReceived","CardCongratulations","SubscribersGained","React","ReactDOM","Chart","ChartTitle","ChartLegend","ChartTooltip","ChartSeries","ChartSeriesItem","ChartSeriesLabels","data","tooltipRender","props","point","dataItem","stat","style","marginLeft","marginRight","ChartContainer","useState","dynamicSlope","setDynamicSlope","dynamicHeight","setDynamicHeight","e","target","checked","margin","width"],"mappings":"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","sourcesContent":["import { useContext } from 'react'\r\nimport { List } from 'react-feather'\r\nimport { kFormatter } from '@utils'\r\nimport Avatar from '@components/avatar'\r\nimport Timeline from '@components/timeline'\r\nimport AvatarGroup from '@components/avatar-group'\r\nimport jsonImg from '@src/assets/images/icons/json.png'\r\nimport InvoiceList from '@src/views/apps/invoice/list'\r\nimport ceo from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\nimport Sales from '@src/views/ui-elements/cards/analytics/Sales'\r\nimport AvgSessions from '@src/views/ui-elements/cards/analytics/AvgSessions'\r\nimport CardAppDesign from '@src/views/ui-elements/cards/advance/CardAppDesign'\r\nimport SupportTracker from '@src/views/ui-elements/cards/analytics/SupportTracker'\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Media } from 'reactstrap'\r\nimport OrdersReceived from '@src/views/ui-elements/cards/statistics/OrdersReceived'\r\nimport CardCongratulations from '@src/views/ui-elements/cards/advance/CardCongratulations'\r\nimport SubscribersGained from '@src/views/ui-elements/cards/statistics/SubscribersGained'\r\n\r\nimport '@styles/react/libs/charts/apex-charts.scss'\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Chart, ChartTitle, ChartLegend, ChartTooltip, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from '@progress/kendo-react-charts';\r\nimport data from './funnel-data.json';\r\nconst tooltipRender = props => {\r\n  if (props.point) {\r\n    return props.point.dataItem.stat;\r\n  }\r\n};\r\nconst style = {\r\n  marginLeft: 5,\r\n  marginRight: 5\r\n};\r\nconst ChartContainer = () => {\r\n  const [dynamicSlope, setDynamicSlope] = React.useState(false);\r\n  const [dynamicHeight, setDynamicHeight] = React.useState(false);\r\n  return <div>\r\n      <div className=\"example-config\">\r\n        <label htmlFor=\"neckRatio\">Dynamic Slope\r\n          <input style={style} type=\"checkbox\" checked={dynamicSlope} onChange={e => setDynamicSlope(e.target.checked)} />\r\n        </label>\r\n        <label htmlFor=\"neckRatio\">Dynamic Height\r\n          <input style={style} type=\"checkbox\" checked={dynamicHeight} onChange={e => setDynamicHeight(e.target.checked)} />\r\n        </label>\r\n      </div>\r\n      <Chart style={{\r\n      margin: '0 auto',\r\n      width: 300\r\n    }}>\r\n        <ChartTitle text=\"Sales funnel\" />\r\n        <ChartSeries>\r\n          <ChartSeriesItem type=\"funnel\" data={data} categoryField=\"stat\" field=\"count\" colorField=\"color\" dynamicSlope={dynamicSlope} dynamicHeight={dynamicHeight}>\r\n            <ChartSeriesLabels color=\"white\" background=\"none\" format=\"N0\" />\r\n          </ChartSeriesItem>\r\n        </ChartSeries>\r\n        <ChartTooltip render={tooltipRender} />\r\n        <ChartLegend visible={false} />\r\n      </Chart>\r\n    </div>;\r\n};\r\n// ReactDOM.render(<ChartContainer />, document.querySelector('my-app'));\r\n\r\n// const AnalyticsDashboard = () => { \r\n//     return (\r\n//         <>heloo</>\r\n//     )\r\n//   }\r\n  \r\nexport default ChartContainer"]},"metadata":{},"sourceType":"module"}